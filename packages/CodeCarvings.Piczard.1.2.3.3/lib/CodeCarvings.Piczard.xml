<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<doc>
    <assembly>
        <name>CodeCarvings.Piczard</name>
    </assembly>
    <members>
        <member name="N:CodeCarvings.Piczard">
            <summary>The CodeCarvings.Piczard namespace contains the core classes, interfaces, and enumerations of the library.</summary>
            <remarks>Please see: How Piczard Works</remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.IQuantizableFormatEncoderParams">
            <summary>Defines methods that must be implemented by a FormatEncoderParams class that handles an image format that requires image quantization.</summary>
            <remarks>    The quantization process is a technique that allows to     reduce the number of colors required to represent a digital     image.     For further information about color quantization please     see:                       http://en.wikipedia.org/wiki/Color_quantization         http://msdn.microsoft.com/en-us/library/aa479306.aspx     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.IQuantizableFormatEncoderParams.GetPerformImageQuantization(System.Drawing.Image)">
            <summary>Gets a value indicating whether the Image must be quantized before saving.</summary>
            <returns>true if the image must be quantized; otherwise false.</returns>
            <param name="image">The Image that must be saved</param>
        </member>
        <member name="M:CodeCarvings.Piczard.IQuantizableFormatEncoderParams.GetQuantizationMaxColors">
            <summary>Returns the maximum number of colors the quantized image can contain.</summary>
            <returns>The maximum number of colors (e.g. 256, 128, 64, 32, etc...).</returns>
        </member>
        <member name="T:CodeCarvings.Piczard.CropConstraintImageSelectionStrategy">
            <summary>Specifies the ways a CropConstraint filter can calculate an ImageSelection.</summary>
            <remarks>For more information please see: Automatic Image Crop (paragraph: "Image selection strategy").</remarks>
        </member>
        <member name="F:CodeCarvings.Piczard.CropConstraintImageSelectionStrategy.Slice">
            <summary>Image is automatically resized - and - the crop rectangle is calculated so to stay fully inside the image.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.CropConstraintImageSelectionStrategy.WholeImage">
            <summary>Image is automatically resized - and - the crop rectangle is calculated so that it can contain the entire resized image (if possible).</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.CropConstraintImageSelectionStrategy.DoNotResize">
            <summary>Image is not resized (if possible).</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.CropConstraintMode">
            <summary>Specifies the type of a CropConstraint object.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.CropConstraintMode.Fixed">
            <summary>The CropConstraint object is an instance of the FixedCropConstraint class.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.CropConstraintMode.FixedAspectRatio">
            <summary>The CropConstraint object is an instance of the FixedAspectRatioCropConstraint class.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.CropConstraintMode.Free">
            <summary>The CropConstraint object is an instance of the FreeCropConstraint class.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.FixedResizeConstraintImagePosition">
            <summary>Specifies the ways an image can be positioned within the fixed size area of a FixedResizeConstraint filter.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.FixedResizeConstraintImagePosition.Fill">
            <summary>    The image is resized to fill in the Fixed Size (the     native aspect ratio is preserved).     If the Size aspect ratio (width:height) differs from the source     image, then the image is clipped.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.FixedResizeConstraintImagePosition.Fit">
            <summary>The image is resized to fit in the Fixed Size (the native aspect ratio is preserved). If the Size aspect ratio (width:height) differs from the source image, then the CanvasColor is used to fill the Size area.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.FixedResizeConstraintImagePosition.Stretch">
            <summary>The image is resized to fill the FIxed Size. The native aspect ratio is not preserved.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.GfxUnit">
            <summary>Specifies the units of measure used by Piczard.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.GfxUnit.Pixel">
            <summary>Specifies a pixel as the unit of measure.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.GfxUnit.Point">
            <summary>Specifies a point (1/72 inch) as the unit of measure.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.GfxUnit.Pica">
            <summary>Specifies a pica (12 points) as the unit of measure.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.GfxUnit.Inch">
            <summary>Specifies an inch as the unit of measure.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.GfxUnit.Mm">
            <summary>Specifies a millimeter as the unit of measure.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.GfxUnit.Cm">
            <summary>Specifies a centimeter as the unit of measure</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.ResizeConstraintMode">
            <summary>Specifies the type of a ResizeConstraint object.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.ResizeConstraintMode.Scaled">
            <summary>The ResizeConstraint object is an instance of the ScaledResizeConstraint class.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.ResizeConstraintMode.Fixed">
            <summary>The ResizeConstraint object is an instance of the FixedResizeConstraint class.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.SizeDimension">
            <summary>Specifies the drawing dimensions.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.SizeDimension.Width">
            <summary>Specifies the width.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.SizeDimension.Height">
            <summary>Specifies the height.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.AbsMeasure">
            <summary>Represents an absolute measurement of length (e.g. "50 pixels", "2 inches", etc...)</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.AbsMeasure.#ctor">
            <summary>Initializes a new instance of the AbsMeasure class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.AbsMeasure.#ctor">
            <summary>Initializes a new instance of the AbsMeasure class and sets its value to 0 (use CommonData.DefaultUnit).</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.AbsMeasure.#ctor(CodeCarvings.Piczard.GfxUnit,System.Single)">
            <summary>Initializes a new instance of the AbsMeasure class and sets its value.</summary>
            <param name="unit">The graphics unit in which the Value is expressed.</param>
            <param name="value">The Value of the measurement.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.AbsMeasure.#ctor(System.Int32)">
            <summary>Initializes a new instance of the AbsMeasure class and sets its value (use CommonData.DefaultUnit).</summary>
            <param name="value">The Value of the measurement.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.AbsMeasure.Clone">
            <summary>Creates a copy of the AbsMeasure object.</summary>
            <returns>A copy of the AbsMeasure object.</returns>
            <remarks>Requires Piczard 1.1.x or higher.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.AbsMeasure.Cm(System.Single)">
            <summary>Initializes a new instance of the AbsMeasure class; the Value is set to the specified number of Centimeters.</summary>
            <returns>The instance of the AbsMeasure class.</returns>
            <remarks>Requires Piczard 1.1.x or higher.</remarks>
            <param name="value">The Value of theAbsMeasure expressed in Centimeters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.AbsMeasure.FromJSON">
            <summary>Deserializes a new instance of the AbsMeasure class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.AbsMeasure.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the AbsMeasure class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to deserialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.AbsMeasure.FromJSON(System.String)">
            <summary>Deserializes a new instance of the AbsMeasure class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to deserialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.AbsMeasure.GetRoundedValue">
            <summary>Computes the absolute value of the Measure, converts it to the specified graphics unit and then round it to the nearest integer.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.AbsMeasure.GetRoundedValue(CodeCarvings.Piczard.GfxUnit,System.Single)">
            <summary>    Converts the Value of the AbsMeasure to the specified     graphics unit and then round it to the nearest integer.</summary>
            <returns>The measurement converted to the chosen graphics unit and then rounded it to the nearest integer.</returns>
            <param name="unit">The graphics unit in which the value must be converted.</param>
            <param name="resolution">The resolution expressed in DPI (Dots Per Inch).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.AbsMeasure.GetValue">
            <summary>Converts the Value of the Measure to the specified graphics unit.</summary>
            <returns>The measurement converted to the chosen graphics unit.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.AbsMeasure.GetValue(CodeCarvings.Piczard.GfxUnit,System.Single)">
            <summary>    Converts the Value of the AbsMeasure to the specified     graphics unit.</summary>
            <returns>The measurement converted to the chosen graphics unit.</returns>
            <param name="unit">The graphics unit in which the value must be converted.</param>
            <param name="resolution">The resolution expressed in DPI (Dots Per Inch).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.AbsMeasure.Inch(System.Single)">
            <summary>Initializes a new instance of the AbsMeasure class; the Value is set to the specified number of Inches.</summary>
            <returns>The instance of the AbsMeasure class.</returns>
            <param name="value">The Value of theAbsMeasure expressed in Inches.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.AbsMeasure.Mm(System.Single)">
            <summary>Initializes a new instance of the AbsMeasure class; the Value is set to the specified number of Millimeters.</summary>
            <returns>The instance of the AbsMeasure class.</returns>
            <param name="value">The Value of theAbsMeasure expressed in Millimeters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.AbsMeasure.Pica(System.Single)">
            <summary>Initializes a new instance of the AbsMeasure class; the Value is set to the specified number of Picas.</summary>
            <returns>The instance of the AbsMeasure class.</returns>
            <param name="value">The Value of theAbsMeasure expressed in Picas.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.AbsMeasure.Pixel(System.Int32)">
            <summary>Initializes a new instance of the AbsMeasure class; the Value is set to the specified number of Pixels.</summary>
            <returns>The instance of the AbsMeasure class.</returns>
            <param name="value">The Value of theAbsMeasure expressed in Pixels.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.AbsMeasure.Point(System.Single)">
            <summary>Initializes a new instance of the AbsMeasure class; the Value is set to the specified number of Points.</summary>
            <returns>The instance of the AbsMeasure class.</returns>
            <param name="value">The Value of theAbsMeasure expressed in Points.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.AbsMeasure.Unit">
            <summary>Gets or sets the graphic unit in which Value is measured.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.AbsMeasure.Value">
            <summary>Gets ors sets the value of the AbsMeasure.</summary>
            <remarks>The value is expressed in the current Unit of measure of the AbsMeasure instance.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.AbsMeasure.Zero">
            <summary>Initializes a new instance of the AbsMeasure class; the Value is set to 0 Pixels.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.BackgroundColor">
            <summary>Defines the color to use as background and the behavior to follow when an image format supports transparency. This class cannot be inherited.</summary>
            <remarks>    BackgroundColor is a general-purpose class that allows to     configure a color to use as background in 2 distinct     situations:                       When the output image format does not support         transparency (e.g. JPEG).         In this case Piczard always uses the color specified in the         Value property of the BackgroundColor class.                      When the output image format supports transparency             (e.g. PNG).             In this case there are two possibilities:                              If the AutoUseTransparentColor property of the                 BackgroundColor class is set to true (default                 value), then Piczard use the Transparent color (in                 order to preserve the image transparency).                 If the AutoUseTransparentColor property of the                 BackgroundColor class is set to false, then Piczard                 uses the color specified in the Value property of                 the BackgroundColor class.                                     The BackgroundColor class is used by the     ImageProcessingJob class in order to manage the image     background color settings.     It is also used by other Piczard filters (e.g. the CanvasColor     property of the ImageCrop class).     For more information please see: Image Processing Job (Controlling     the background color of images generated by Piczard).          Please note that, when an image is processed but not     saved (e.g. when the GetProcessedImage method is invoked), then     the BackgroundColor class acts as if the output image format     supports transparency.     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.BackgroundColor.#ctor">
            <summary>Initializes a new instance of the BackgroundColor class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.BackgroundColor.#ctor">
            <summary>Initializes a new instance of the BackgroundColor class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.BackgroundColor.#ctor(System.Boolean)">
            <summary>Initializes a new instance of the BackgroundColor class and sets the AutoUseTransparentColor property.</summary>
            <param name="autoUseTransparentColor">    true to apply the transparent color if the image format     supports transparency; otherwise, false.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.BackgroundColor.#ctor(System.Drawing.Color)">
            <summary>Initializes a new instance of the BackgroundColor class and sets the Value property.</summary>
            <param name="value">The Color to apply if the image format does not support transparency.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.BackgroundColor.#ctor(System.Drawing.Color,System.Boolean)">
            <summary>Initializes a new instance of the BackgroundColor class and sets the Value and the AutoUseTransparentColor properties</summary>
            <param name="value">The Color to apply if transparency is disabled.</param>
            <param name="autoUseTransparentColor">true to apply the transparent color if the image format supports transparency; otherwise, false.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.BackgroundColor.Clone">
            <summary>Creates a copy of the BackgroundColor object.</summary>
            <returns>A copy of the BackgroundColor object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.BackgroundColor.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.BackgroundColor.FromJSON">
            <summary>Deserializes a new instance of the BackgroundColor class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.BackgroundColor.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the BackgroundColor class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to deserialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.BackgroundColor.FromJSON(System.String)">
            <summary>Deserializes a new instance of the BackgroundColor class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to deserialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.BackgroundColor.GetColor(System.Boolean)">
            <summary>Gets the final background Color to apply.</summary>
            <returns>The background Color to apply.</returns>
            <param name="transparencySupport">true if the image format supports transparency; otherwise, false.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.BackgroundColor.GetDynamic(System.Drawing.Color)">
            <summary>Initializes a new instance of the BackgroundColor class; the specified Color is used only if the image format does not support transparency (AutoUseTransparentColor=true).</summary>
            <returns>The instance of the BackgroundColor class.</returns>
            <param name="value">The Color to apply if the image format does not support transparency.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.BackgroundColor.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.BackgroundColor.GetStatic(System.Drawing.Color)">
            <summary>Initializes a new instance of the BackgroundColor class; the specified Color is always used (AutoUseTransparentColor=false).</summary>
            <returns>The instance of the BackgroundColor class.</returns>
            <param name="value">The Color to apply.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.BackgroundColor.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:CodeCarvings.Piczard.BackgroundColor.AutoUseTransparentColor">
            <summary>Gets or sets a value indicating whether to use the transparent color if the image format supports transparency.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.BackgroundColor.Value">
            <summary>Gets or sets the Color to apply if transparency is disabled.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.BmpFormatEncoderParams">
            <summary>Represents a FormatEncoderParams class that can save images in the Bmp format.</summary>
            <remarks>For more information about  FormatEncoderParams please see: How Piczard Works (paragraph: "Customize the image format of output images").</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.BmpFormatEncoderParams.#ctor">
            <summary>Initializes a new instance of the BmpFormatEncoderParams class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.BmpFormatEncoderParams.Clone">
            <summary>Creates a copy of the BmpFormatEncoderParams.</summary>
            <returns>A copy of the BmpFormatEncoderParams.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.BmpFormatEncoderParams.FromJSON">
            <summary>Deserializes a new instance of the BmpFormatEncoderParams class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.BmpFormatEncoderParams.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the BmpFormatEncoderParams class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.BmpFormatEncoderParams.FromJSON(System.String)">
            <summary>Deserializes a new instance of the BmpFormatEncoderParams class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.CommonData">
            <summary>Provides access to basic configuration properties of the Piczard library. This class cannot be inherited.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.CommonData.PiczardVersion">
            <summary>Gets the Version of the Piczard library in use. This field is constant.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.CommonData.DefaultPixelFormat">
            <summary>Represents the PixelFormat used by the Piczard library. This field is constant.</summary>
            <remarks>The value of this constant is PixelFormat.Format32bppArgb.</remarks>
        </member>
        <member name="F:CodeCarvings.Piczard.CommonData.DefaultResolution">
            <summary>Represents the default resolution (DPI) used by the Piczard library. This field is constant.</summary>
            <remarks>The value of this constant is 96 (Standard Windows / GDI+ resolution).</remarks>
        </member>
        <member name="F:CodeCarvings.Piczard.CommonData.DefaultUnit">
            <summary>Represents the default graphics unit used by the Piczard library. This field is constant.</summary>
            <remarks>The value of this constant is GfxUnit.Pixel.</remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.CropConstraint">
            <summary>Represents an ImageProcessingFilter that allows to automatically crop an image.</summary>
            <remarks>    For more information please see:                       Automatic Image         Crop         Interactively         crop and/or resize an image     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.CropConstraint.ChangeUnit(CodeCarvings.Piczard.GfxUnit,System.Single)">
            <summary>Changes the Unit and automatically recalculate the values to maintain unchanged the constraint.</summary>
            <param name="newUnit">The new GfxUnit to use.</param>
            <param name="outputResolution">The image resolution (DPI).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.CropConstraint.Clone">
            <summary>Creates a copy of the CropConstraint filter.</summary>
            <returns>A copy of the CropConstraint filter.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.CropConstraint.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.CropConstraint.FromJSON">
            <summary>Deserializes a new instance of the CropConstraint class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.CropConstraint.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the CropConstraint class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.CropConstraint.FromJSON(System.String)">
            <summary>Deserializes a new instance of the CropConstraint class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.CropConstraint.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.CropConstraint.GetImageProcessingJob">
            <summary>Gets an instance of the ImageProcessingJob class that can be used to process the image; the current filter is added to the Filters collection of the ImageProcessingJob object.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.CropConstraint.GetImageProcessingJob(System.Single)">
            <summary>Gets an instance of the ImageProcessingJob class that can be used to process the image; the current filter is added to the Filters collection of the ImageProcessingJob object and the specified OutputResolution (DPI) is used.</summary>
            <returns>An instance of the ImageProcessingJob class that can apply the current ImageProcessingFilter.</returns>
            <param name="outputResolution">The resolution (DPI) of the images that are produced by the ImageProcessingJob object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.CropConstraint.GetImageSelection">
            <summary>Gets an ImageSelection filter that can be used to process the image according to size constraints configured in the current CropConstraint filter.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.CropConstraint.GetImageSelection(System.Drawing.Size)">
            <summary>Gets an ImageSelection filter that can be used to process the image according to size constraints configured in the current CropConstraint filter; the specified source image Size and the default output resolution (96 DPI) are used is used to calculate the parameters of the ImageSelection object.</summary>
            <returns>An ImageSelection filter that can be used to process the image.</returns>
            <param name="imageSize">The Size of the source image to process.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.CropConstraint.GetImageSelection(System.Drawing.Size,System.Single)">
            <summary>Gets an ImageSelection filter that can be used to process the image according to size constraints configured in the current CropConstraint filter; the specified source image Size and output resolution (DPI) are used to calculate the parameters of the ImageSelection object.</summary>
            <returns>An ImageSelection filter that can be used to process the image.</returns>
            <param name="imageSize">The Size of the source image to process.</param>
            <param name="outputResolution">The resolution (DPI) of the output image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.CropConstraint.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.CropConstraint.Validate">
            <summary>Validates the current CropConstraint filter to ensure that all the parameters are correctly configured (e.g. the CropMargins.Horizontal value is not higher than CoreSettings.Drawing.MaxImageSize.Width).</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.CropConstraint.Validate(System.Single,System.Boolean)">
            <summary>Validates the current CropConstraint filter to ensure that all the parameters are correctly configured (e.g. the CropMargins.Horizontal value is not higher than CoreSettings.Drawing.MaxImageSize.Width); the specified output resolution (DPI) is used to validate the image; if the "throwException" parameter is true then an Exception is thrown if the CropConstraint is not valid.</summary>
            <returns>true if the CropConstraint filter is valid; otherwise, false.</returns>
            <param name="outputResolution">The resolution (DPI) of the output image.</param>
            <param name="throwException">If true, an exception is thrown if the CropConstraint filter is not valid.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.CropConstraint.Validate(System.Single)">
            <summary>Validates the current CropConstraint filter to ensure that all the parameters are correctly configured (e.g. the CropMargins.Horizontal value is not higher than CoreSettings.Drawing.MaxImageSize.Width); the specified output resolution (DPI) is used to validate the image.</summary>
            <returns>true if the CropConstraint filter is valid; otherwise, false.</returns>
            <param name="outputResolution">The resolution (DPI) of the output image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.CropConstraint.Validate(System.Boolean)">
            <summary>Validates the current CropConstraint filter to ensure that all the parameters are correctly configured (e.g. the CropMargins.Horizontal value is not higher than CoreSettings.Drawing.MaxImageSize.Width); if the "throwException" parameter is true then an Exception is thrown if the CropConstraint is not valid.</summary>
            <returns>true if the CropConstraint filter is valid; otherwise, false.</returns>
            <param name="throwException">If true, an Exception is thrown if the CropConstraint filter is not valid.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.CropConstraint.Validate">
            <summary>Validates the current CropConstraint filter to ensure that all the parameters are correctly configured (e.g. the CropMargins.Horizontal value is not higher than CoreSettings.Drawing.MaxImageSize.Width).</summary>
            <returns>true if the CropConstraint filter is valid; otherwise, false.</returns>
        </member>
        <member name="P:CodeCarvings.Piczard.CropConstraint.CanvasColor">
            <summary>Gets or sets the color applied to the regions of the crop area outside of the source image's boundaries.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.CropConstraint.DefaultImageSelectionStrategy">
            <summary>Gets or sets a parameter indicating the way the ImageSelection is calculated by the crop constraint.</summary>
            <remarks>For more information please see: Automatic Image Crop (paragraph: "Image selection strategy").</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.CropConstraint.Margins">
            <summary>Gets or sets the size of area - external to the source image - that can be cropped.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.CropConstraint.Unit">
            <summary>Gets or sets the graphic unit in which sizes are measured.</summary>
            <remarks>The Margins are expressed in the same Unit of the CropConstraint object.</remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.CropMargins">
            <summary>Specifies the size of area - external to the source image - that can be cropped by an ImageCrop filter. This class cannot be inherited.</summary>
            <remarks>For more information please see: Automatic Image Crop (paragraph: "Crop margins").</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.CropMargins.#ctor">
            <summary>Initializes a new instance of the CropMargins class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.CropMargins.#ctor(System.Nullable`1{System.Single})">
            <summary>Initializes a new instance of the CropMargins class; the same value is used both for the Horizontal and the Vertical margin.</summary>
            <param name="margins">The dimension of the Horizontal and the Vertical margins.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.CropMargins.#ctor(System.Nullable`1{System.Single},System.Nullable`1{System.Single})">
            <summary>Initializes a new instance of the CropMargins class.</summary>
            <param name="horizontal">The dimension of the Horizontal margin.</param>
            <param name="vertical">The dimension of the Vertical margin.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.CropMargins.Clone">
            <summary>Creates a copy of the CropMargins object.</summary>
            <returns>A copy of the CropMargins object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.CropMargins.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.CropMargins.FromJSON">
            <summary>Deserializes a new instance of the CropMargins class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.CropMargins.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the CropMargins class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.CropMargins.FromJSON(System.String)">
            <summary>Deserializes a new instance of the CropMargins class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.CropMargins.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.CropMargins.Set(System.Nullable`1{System.Single})">
            <summary>Sets the same value on both the Horizontal and the Horizontal margin.</summary>
            <param name="value">The new value of the Horizontal and the Vertical margins.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.CropMargins.SetAuto">
            <summary>Sets both the Horizontal and the Vertical margins to null (auto).</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.CropMargins.SetZero">
            <summary>Sets both the Horizontal and the Vertical margins to 0.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.CropMargins.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.CropMargins.ValidateValue">
            <summary>Determines if the provided value is a valid margin value.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.CropMargins.ValidateValue(System.Nullable`1{System.Single})">
            <summary>Determines if the provided value is a valid margin value.</summary>
            <returns>true if the value is a valid margin value; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.CropMargins.ValidateValue(System.Nullable`1{System.Single},System.Boolean)">
            <summary>Determines if the provided value is a valid margin value; if the "throwException" parameter is true then an Exception is thrown if the value is not valid.</summary>
            <returns>true if the value is a valid margin value; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
            <param name="throwException">If true, an exception is thrown if the value is not valid.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.CropMargins.Auto">
            <summary>Gets a new instance of the CropMargins class that specifies automatic margins.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.CropMargins.Horizontal">
            <summary>Ges or sets the value of the Horizontal margin.</summary>
            <remarks>    The value of the margin is expressed in the same Unit of     measure of the CropConstraint.     The value can be:                       null - (automatic margin; max value is         CoreSettings.Drawing.MaxImageSize.Width)         0 (disabled margin)         Greater than 0          Please note that if you, for example set the Horizontal     margin to 5 pixels, this mean that the total size of the     horizontal margins is 10 pixels (5 pixels for the left margin a     5 pixels for the right margin).</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.CropMargins.Vertical">
            <summary>Ges or sets the value of the Vertical margin.</summary>
            <remarks>    The value of the margin is expressed in the same Unit of     measure of the CropConstraint.     The value can be:                       null - (automatic margin; max value is         CoreSettings.Drawing.MaxImageSize.Height)         0 (disabled margin)         Greater than 0          Please note that if you, for example set the Vertical     margin to 5 pixels, this mean that the total size of the     vertical margins is 10 pixels (5 pixels for the top margin a 5     pixels for the bottom margin).</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.CropMargins.Zero">
            <summary>Gets a new instance of the CropMargins class that specifies disabled margins (0).</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.FixedAspectRatioCropConstraint">
            <summary>Represents a CropConstraint that allows to crop fixed aspect ratio areas. This class cannot be inherited.</summary>
            <remarks>    For more information please see:                       Automatic Image         Crop (paragraph: "Fixed aspect ratio crop         constraint")         Interactively         crop and/or resize an image     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.#ctor">
            <summary>Initializes a new instance of the FixedAspectRatioCropConstraint class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.#ctor(System.Single)">
            <summary>Initializes a new instance of the FixedAspectRatioCropConstraint class and sets the fixed AspectRatio (width / height).</summary>
            <param name="aspectRatio">The fixed aspect ratio (width:height) of the crop area.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.#ctor(System.Single,CodeCarvings.Piczard.GfxUnit,CodeCarvings.Piczard.SizeDimension,System.Nullable`1{System.Single},System.Nullable`1{System.Single})">
            <summary>Initializes a new instance of the FixedAspectRatioCropConstraint class; sets the fixed AspectRatio (width / height) and the limits.</summary>
            <param name="aspectRatio">The fixed aspect ratio (width:height) of the crop area.</param>
            <param name="unit">The graphics unit in which the limits (Min and Max width/height) are expressed</param>
            <param name="limitedDimension">The dimension (width or height) to which limits (Min / Max) refers.</param>
            <param name="min">The minimum width or height of the crop area. If the value is null then no limit is set.</param>
            <param name="max">The maximum width or height of the crop area. If the value is null then no limit is set.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.#ctor(System.Single,CodeCarvings.Piczard.SizeDimension,System.Nullable`1{System.Int32},System.Nullable`1{System.Int32})">
            <summary>    Initializes a new instance of the     FixedAspectRatioCropConstraint class; sets the fixed     AspectRatio (width / height) and the limits (expressed in     pixels).</summary>
            <param name="aspectRatio">The fixed aspect ratio (width:height) of the crop area.</param>
            <param name="limitedDimension">The dimension (width or height) to which limits (Min / Max) refers.</param>
            <param name="min">The minimum width or height of the crop area. If the value is null then no limit is set.</param>
            <param name="max">The maximum width or height of the crop area. If the value is null then no limit is set.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.Clone">
            <summary>Creates a copy of the FixedAspectRatioCropConstraint filter.</summary>
            <returns>A copy of the FixedAspectRatioCropConstraint filter.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.FromJSON">
            <summary>Deserializes a new instance of the FixedAspectRatioCropConstraint class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the FixedAspectRatioCropConstraint class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.FromJSON(System.String)">
            <summary>Deserializes a new instance of the FixedAspectRatioCropConstraint class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.ValidateAspectRatio">
            <summary>Determines if the provided value is a valid aspect ratio.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.ValidateAspectRatio(System.Single)">
            <summary>Determines if the provided value is a valid aspect ratio.</summary>
            <returns>true if the value is a valid aspect ratio; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.ValidateAspectRatio(System.Single,System.Boolean)">
            <summary>Determines if the provided value is a valid aspect ratio; if the "throwException" parameter is true then an Exception is thrown if the value is not valid.</summary>
            <returns>true if the value is a valid aspect ratio; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
            <param name="throwException">If true, an exception is thrown if the value is not valid.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.ValidateSizeLimit">
            <summary>Determines if the provided value is a valid size limit (width or height).</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.ValidateSizeLimit(System.Nullable`1{System.Single})">
            <summary>Determines if the provided value is a valid size limit (width or height).</summary>
            <returns>true if the value is a valid size limit; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.ValidateSizeLimit(System.Nullable`1{System.Single},System.Boolean)">
            <summary>Determines if the provided value is a valid size limit (width or height); if the "throwException" parameter is true then an Exception is thrown if the value is not valid.</summary>
            <returns>true if the value is a valid size limit; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
            <param name="throwException">If true, an exception is thrown if the value is not valid.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.AspectRatio">
            <summary>Gets or sets the aspect ratio (width:height) of the CropConstraint.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.LimitedDimension">
            <summary>    Gets or sets the dimension (Width or Height) to which the     limits configured in this object (Min and Max) refers.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.Max">
            <summary>Gets or sets maximum width or height of the crop area.</summary>
            <remarks>The value is expressed in the current Unit of measure of the CropConstraint instance. The value can be greater than 0 or null (no limit set).</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.MaxHeight">
            <summary>Gets the maximum height of the crop area.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.MaxWidth">
            <summary>Gets the maximum width of the crop area.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.Min">
            <summary>Gets or sets minimum width or height of the crop area.</summary>
            <remarks>The value is expressed in the current Unit of measure of the CropConstraint instance. The value can be greater than 0 or null (no limit set).</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.MinHeight">
            <summary>Gets the minimum height of the crop area.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.FixedAspectRatioCropConstraint.MinWidth">
            <summary>Gets the minimum width of the crop area.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.FixedCropConstraint">
            <summary>Represents a CropConstraint that allows to crop areas of fixed size. This class cannot be inherited.</summary>
            <remarks>    For more information please see:                       Automatic Image         Crop (paragraph: "Fixed size crop constraint")         Interactively         crop and/or resize an image     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedCropConstraint.#ctor">
            <summary>Initializes a new instance of the FixedCropConstraint class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedCropConstraint.#ctor(CodeCarvings.Piczard.GfxUnit,System.Single,System.Single)">
            <summary>Initializes a new instance of the FixedCropConstraint class.</summary>
            <param name="unit">The graphics unit in which the crop  Size is expressed.</param>
            <param name="width">The width of the crop  Size area.</param>
            <param name="height">The height of the crop  Size area.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedCropConstraint.#ctor(CodeCarvings.Piczard.GfxUnit,System.Drawing.SizeF)">
            <summary>Initializes a new instance of the FixedCropConstraint class.</summary>
            <param name="unit">The graphics unit in which the crop  Size is expressed.</param>
            <param name="size">The crop  Size area.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedCropConstraint.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance of the FixedCropConstraint class; the values are expressed in pixels.</summary>
            <param name="width">The width of the crop  Size area.</param>
            <param name="height">The height of the crop  Size area.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedCropConstraint.Clone">
            <summary>Creates a copy of the FixedCropConstraint filter.</summary>
            <returns>A copy of the FixedCropConstraint filter.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedCropConstraint.FromJSON">
            <summary>Deserializes a new instance of the FixedCropConstraint class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedCropConstraint.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the FixedCropConstraint class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedCropConstraint.FromJSON(System.String)">
            <summary>Deserializes a new instance of the FixedCropConstraint class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedCropConstraint.ValidateSize">
            <summary>Determines if the provided value is a valid crop size.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedCropConstraint.ValidateSize(System.Drawing.SizeF)">
            <summary>Determines if the provided value is a valid crop size.</summary>
            <returns>true if the value is a valid crop size; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedCropConstraint.ValidateSize(System.Drawing.SizeF,System.Boolean)">
            <summary>Determines if the provided value is a valid crop size; if the "throwException" parameter is true then an Exception is thrown if the value is not valid.</summary>
            <returns>true if the value is a valid crop size; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
            <param name="throwException">If true, an exception is thrown if the value is not valid.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.FixedCropConstraint.Size">
            <summary>Gets or sets the size of the crop area.</summary>
            <remarks>The value is expressed in the current Unit of measure of the CropConstraint instance.</remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.FixedResizeConstraint">
            <summary>Represents a ResizeConstraint that allows to create images of fixed size. This class cannot be inherited.</summary>
            <remarks>For more information please see: Automatic Image Resize (paragraph: "Fixed resize constraint").</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedResizeConstraint.#ctor">
            <summary>Initializes a new instance of the FixedResizeConstraint class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedResizeConstraint.#ctor(CodeCarvings.Piczard.GfxUnit,System.Single,System.Single)">
            <summary>Initializes a new instance of the FixedResizeConstraint class.</summary>
            <param name="unit">The graphics unit in which the output Size is expressed.</param>
            <param name="width">The width of the output Size.</param>
            <param name="height">The height of the output Size.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedResizeConstraint.#ctor(CodeCarvings.Piczard.GfxUnit,System.Single,System.Single,CodeCarvings.Piczard.BackgroundColor)">
            <summary>Initializes a new instance of the FixedResizeConstraint class; the specified color is used to fill the eventual canvas area.</summary>
            <param name="unit">The graphics unit in which the output Size is expressed.</param>
            <param name="width">The width of the output Size.</param>
            <param name="height">The height of the output Size.</param>
            <param name="canvasColor">The color used to fill the eventual canvas area.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedResizeConstraint.#ctor(CodeCarvings.Piczard.GfxUnit,System.Drawing.SizeF)">
            <summary>Initializes a new instance of the FixedResizeConstraint class.</summary>
            <param name="unit">The graphics unit in which the output Size is expressed.</param>
            <param name="size">The output Size.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedResizeConstraint.#ctor(CodeCarvings.Piczard.GfxUnit,System.Drawing.SizeF,CodeCarvings.Piczard.BackgroundColor)">
            <summary>Initializes a new instance of the FixedResizeConstraint class; the specified color is used to fill the eventual canvas area.</summary>
            <param name="unit">The graphics unit in which the output Size is expressed.</param>
            <param name="size">The output Size.</param>
            <param name="canvasColor">The color used to fill the eventual canvas area.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedResizeConstraint.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance of the FixedResizeConstraint class; the values are expressed in pixels.</summary>
            <param name="width">The width of the output Size.</param>
            <param name="height">The height of the output Size.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedResizeConstraint.#ctor(System.Int32,System.Int32,CodeCarvings.Piczard.BackgroundColor)">
            <summary>Initializes a new instance of the FixedResizeConstraint class; the values are expressed in pixels; the specified color is used to fill the eventual canvas area.</summary>
            <param name="width">The width of the output Size.</param>
            <param name="height">The height of the output Size.</param>
            <param name="canvasColor">The color used to fill the eventual canvas area.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedResizeConstraint.Clone">
            <summary>Creates a copy of the FixedResizeConstraint filter.</summary>
            <returns>A copy of the FixedResizeConstraint filter.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedResizeConstraint.FromJSON">
            <summary>Deserializes a new instance of the FixedResizeConstraint class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedResizeConstraint.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the FixedResizeConstraint class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedResizeConstraint.FromJSON(System.String)">
            <summary>Deserializes a new instance of the FixedResizeConstraint class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedResizeConstraint.GetImageProcessingJob">
            <summary>Gets an instance of the ImageProcessingJob class that can be used to process the image; the current filter is added to the Filters collection of the ImageProcessingJob object.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedResizeConstraint.GetImageProcessingJob(System.Single)">
            <summary>Gets an instance of the ImageProcessingJob class that can be used to process the image; the current filter is added to the Filters collection of the ImageProcessingJob object and the specified OutputResolution (DPI) is used.</summary>
            <returns>An instance of the ImageProcessingJob class that can apply the current ImageProcessingFilter.</returns>
            <param name="outputResolution">The resolution (DPI) of the images that are produced by the ImageProcessingJob object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedResizeConstraint.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedResizeConstraint.ValidateSize">
            <summary>Determines if the provided value is a valid output size.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedResizeConstraint.ValidateSize(System.Drawing.SizeF)">
            <summary>Determines if the provided value is a valid output size.</summary>
            <returns>true if the value is a valid output size; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FixedResizeConstraint.ValidateSize(System.Drawing.SizeF,System.Boolean)">
            <summary>Determines if the provided value is a valid output size; if the "throwException" parameter is true then an Exception is thrown if the value is not valid.</summary>
            <returns>true if the value is a valid output size; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
            <param name="throwException">If true, an exception is thrown if the value is not valid.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.FixedResizeConstraint.CanvasColor">
            <summary>Gets or sets the color used to fill the eventual canvas area.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.FixedResizeConstraint.EnlargeSmallImages">
            <summary>Gets or sets a value indicating if images that are smaller than the provided output Size are resized.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.FixedResizeConstraint.ImagePosition">
            <summary>Gets or sets a value indicating how the image is positioned within the output Size area.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.FixedResizeConstraint.Size">
            <summary>Gets or sets the size of the images generated by the ResizeConstraint class.</summary>
            <remarks>The value is expressed in the current Unit of measure of the FixedResizeConstraint instance.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.FixedResizeConstraint.Unit">
            <summary>Gets or sets the graphic unit in which Size is measured.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.FontDefinition">
            <summary>Defines a particular format for text, including font face, size, and style attributes. This class cannot be inherited.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.#ctor">
            <summary>Initializes a new instance of the FontDefinition class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.#ctor">
            <summary>Initializes a new instance of the FontDefinition class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.#ctor(System.Nullable`1{CodeCarvings.Piczard.GfxUnit},System.Single)">
            <summary>Initializes a new instance of the FontDefinition class and sets the Size of the text.</summary>
            <remarks>    If the value of the Unit parameter is null, then the     default unit is used.     Please see Font.Unit for additional details about the default     unit.</remarks>
            <param name="unit">The graphics unit in which the Size is expressed.</param>
            <param name="size">The Size of the text.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.#ctor(System.Single)">
            <summary>Initializes a new instance of the FontDefinition class and sets the Size of the text.</summary>
            <param name="size">The Size of the text.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.#ctor(System.String)">
            <summary>Initializes a new instance of the FontDefinition class and sets the font family Name.</summary>
            <param name="name">The font family Name.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.#ctor(System.String,System.Nullable`1{CodeCarvings.Piczard.GfxUnit},System.Single)">
            <summary>Initializes a new instance of the FontDefinition class; sets the font family name Name and the Size of the text.</summary>
            <remarks>    If the value of the Unit parameter is null, then the     default unit is used.     Please see Font.Unit for additional details about the default     unit.</remarks>
            <param name="name">The font family Name.</param>
            <param name="unit">The graphics unit in which the Size is expressed.</param>
            <param name="size">The Size of the text.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.#ctor(System.String,System.Single)">
            <summary>Initializes a new instance of the FontDefinition class; sets the font family name Name and the Size of the text.</summary>
            <param name="name">The font family Name.</param>
            <param name="size">The Size of the text.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.Clone">
            <summary>Creates a copy of the FontDefinition object.</summary>
            <returns>A copy of the FontDefinition object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.FromFont(System.Drawing.Font)">
            <summary>Initializes a new instance of the FontDefinition class from a Font object.</summary>
            <returns>The instance of the FontDefinition class.</returns>
            <param name="font">The Font object containing the parameters (size, family, style, etc..) to be copied.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.FromJSON">
            <summary>Deserializes a new instance of the FontDefinition class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the FontDefinition class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.FromJSON(System.String)">
            <summary>Deserializes a new instance of the FontDefinition class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.GetFont">
            <summary>Gets a new instance of the Font class configured according to the parameters contained in the current FontDefinition object (size, family name, style, etc..).</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.GetFont(CodeCarvings.Piczard.GfxUnit)">
            <summary>Gets a new instance of the Font class configured according to the parameters contained in the current FontDefinition object (size, family name, style, etc..).</summary>
            <returns>The Font object that can be uses with the System.Drawing / GDI+ methods.</returns>
            <param name="defaultUnit">The default graphic unit to use in case Unit is null.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.GetFont">
            <summary>Gets a new instance of the Font class configured according to the parameters contained in the current FontDefinition object (size, family name, style, etc..).</summary>
            <returns>The Font object that can be uses with the System.Drawing / GDI+ methods.</returns>
            <remarks>In case Unit is null, the default graphic unit is GfxUnit.Pixel (please see also CommonData.DefaultUnit).</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.ValidateName">
            <summary>Determines if the provided string is a well-formatted font family Name.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.ValidateName(System.String)">
            <summary>Determines if the provided string is a well-formatted font family Name.</summary>
            <returns>true if the string is a well-formatted font family name; otherwise, false.</returns>
            <param name="name">The string to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.ValidateName(System.String,System.Boolean)">
            <summary>Determines if the provided string is a well-formatted font family Name; if the "throwException" parameter is true then an Exception is thrown if the string is not valid.</summary>
            <returns>true if the string is a well-formatted font family name; otherwise, false.</returns>
            <param name="name">The string to validate.</param>
            <param name="throwException">If true, an exception is thrown if the string is not valid.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.ValidateSize">
            <summary>Determines if the provided value is a valid font size.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.ValidateSize(System.Single)">
            <summary>Determines if the provided value is a valid font size.</summary>
            <returns>true if the value is a valid font size; otherwise, false.</returns>
            <param name="size">The value to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FontDefinition.ValidateSize(System.Single,System.Boolean)">
            <summary>Determines if the provided value is a valid font size; if the "throwException" parameter is true then an Exception is thrown if the value is not valid.</summary>
            <returns>true if the value is a valid font size; otherwise, false.</returns>
            <param name="size">The value to validate.</param>
            <param name="throwException">If true, an exception is thrown if the value is not valid.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.FontDefinition.Bold">
            <summary>Gets or sets a value that indicates whether the font is bold.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.FontDefinition.Italic">
            <summary>Gets or sets a value that indicates whether the font is italic.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.FontDefinition.Name">
            <summary>Gets or sets the name of the font family.</summary>
            <remarks>    Font name can be both a specific font family name (e.g.     "Arial") or a generic font family name.     The supported generic font family names are:                       "GenericSansSerif" (corresponds to          FontFamily.GenericSansSerif)         "GenericSerif" (corresponds to          FontFamily.GenericSerif)         "GenericMonospace" (corresponds to          FontFamily.GenericMonospace)     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.FontDefinition.Size">
            <summary>Gets or sets the font size.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.FontDefinition.Strikeout">
            <summary>Gets or sets a value that indicates whether the font is strikethrough.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.FontDefinition.Underline">
            <summary>Gets or sets a value that indicates whether the font is underlined.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.FontDefinition.Unit">
            <summary>Gets or sets the graphic unit in which the Size of the font is measured.</summary>
            <remarks>    If the value of the Unit parameter is null, then the     default unit is used.     Example:     Assuming to work with a TextWatermark filter.     If TextWatermark.Font.Unit is null, then the default unit is     specified by the TextWatermark.Unit property.</remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.FormatEncoderParams">
            <summary>Specifies the file format to use during the encoding process of an image.</summary>
            <remarks>For more information about  FormatEncoderParams please see: How Piczard Works (paragraph: "Customize the image format of output images").</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.FormatEncoderParams.Clone">
            <summary>Creates a copy of the FormatEncoderParams.</summary>
            <returns>A copy of the FormatEncoderParams.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.FormatEncoderParams.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FormatEncoderParams.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.FormatEncoderParams.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:CodeCarvings.Piczard.FormatEncoderParams.Description">
            <summary>Gets a short description that describes the image format.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.FormatEncoderParams.FileExtension">
            <summary>Gets the default file extension associated with the image format.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.FormatEncoderParams.ImageFormatId">
            <summary>Gets the Guid that uniquely identify the image format.</summary>
            <remarks>    The Guids that uniquely identify the default image     formats are available through the      Guid property of the System.Drawing.Imaging.ImageFormat     class.     In particular:                       Bmp: System.Drawing.Imaging.ImageFormat.Bmp.Guid         =         b96b3cab-0728-11d3-9d7b-0000f81ef32e         Gif: System.Drawing.Imaging.ImageFormat.Gif.Guid         =         b96b3cb0-0728-11d3-9d7b-0000f81ef32e         Jpeg: System.Drawing.Imaging.ImageFormat.Jpeg.Guid         =         b96b3cae-0728-11d3-9d7b-0000f81ef32e         Png: System.Drawing.Imaging.ImageFormat.Png.Guid         =         b96b3caf-0728-11d3-9d7b-0000f81ef32e         Tiff: System.Drawing.Imaging.ImageFormat.Tiff.Guid         =         b96b3cb1-0728-11d3-9d7b-0000f81ef32e     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.FormatEncoderParams.IsTransparencySupported">
            <summary>Gets a value indicating whether the image format supports transparency.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.FormatEncoderParams.MimeType">
            <summary>Gets the default MIME type associated with the image format.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.FreeCropConstraint">
            <summary>Represents a CropConstraint that allows to crop areas without a fixed aspect ratio. This class cannot be inherited.</summary>
            <remarks>    For more information please see:                       Automatic Image         Crop (paragraph: "Free size crop constraint")         Interactively         crop and/or resize an image     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.FreeCropConstraint.#ctor">
            <summary>Initializes a new instance of the FreeCropConstraint class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.FreeCropConstraint.#ctor">
            <summary>Initializes a new instance of the FreeCropConstraint class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.FreeCropConstraint.#ctor(CodeCarvings.Piczard.GfxUnit,System.Nullable`1{System.Single},System.Nullable`1{System.Single},System.Nullable`1{System.Single},System.Nullable`1{System.Single})">
            <summary>Initializes a new instance of the FreeCropConstraint class and sets the limits (min-max width and height).</summary>
            <param name="unit">The graphics unit in which the limits (MinWidth, MaxWidth, MinHeight and MaxHeight) are expressed.</param>
            <param name="minWidth">The minimum width of the crop area. If the value is null then no limit is set.</param>
            <param name="maxWidth">The maximum width of the crop area. If the value is null then no limit is set.</param>
            <param name="minHeight">The minimum height of the crop area. If the value is null then no limit is set.</param>
            <param name="maxHeight">The maximum height of the crop area. If the value is null then no limit is set.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FreeCropConstraint.#ctor(System.Nullable`1{System.Int32},System.Nullable`1{System.Int32},System.Nullable`1{System.Int32},System.Nullable`1{System.Int32})">
            <summary>Initializes a new instance of the FreeCropConstraint class and sets the limits (min-max width and height - expressed in pixels).</summary>
            <param name="minWidth">The minimum width of the crop area. If the value is null then no limit is set.</param>
            <param name="maxWidth">The maximum width of the crop area. If the value is null then no limit is set.</param>
            <param name="minHeight">The minimum height of the crop area. If the value is null then no limit is set.</param>
            <param name="maxHeight">The maximum height of the crop area. If the value is null then no limit is set.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FreeCropConstraint.Clone">
            <summary>Creates a copy of the FreeCropConstraint filter.</summary>
            <returns>A copy of the FreeCropConstraint filter.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.FreeCropConstraint.FromJSON">
            <summary>Deserializes a new instance of the FreeCropConstraint class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.FreeCropConstraint.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the FreeCropConstraint class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FreeCropConstraint.FromJSON(System.String)">
            <summary>Deserializes a new instance of the FreeCropConstraint class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FreeCropConstraint.ValidateSizeLimit">
            <summary>Determines if the provided value is a valid size limit (width or height).</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.FreeCropConstraint.ValidateSizeLimit(System.Nullable`1{System.Single})">
            <summary>Determines if the provided value is a valid size limit (width or height).</summary>
            <returns>true if the value is a valid size limit; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.FreeCropConstraint.ValidateSizeLimit(System.Nullable`1{System.Single},System.Boolean)">
            <summary>Determines if the provided value is a valid size limit (width or height); if the "throwException" parameter is true then an Exception is thrown if the value is not valid.</summary>
            <returns>true if the value is a valid size limit; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
            <param name="throwException">If true, an Exception is thrown if the value is not valid.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.FreeCropConstraint.MaxHeight">
            <summary>Gets the maximum height of the crop area.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.FreeCropConstraint.MaxWidth">
            <summary>Gets the maximum width of the crop area.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.FreeCropConstraint.MinHeight">
            <summary>Gets the minimum height of the crop area.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.FreeCropConstraint.MinWidth">
            <summary>Gets the minimum width of the crop area.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.GenericFormatEncoderParams">
            <summary>Represents any file format that does not have a specific FormatEncoderParams class (such as JpegFormatEncoderParams or GifFormatEncoderParams). This class cannot be inherited.</summary>
            <remarks>    The GenericFormatEncoderParams class cannot be directly     instantiated.     Piczard automatically initializes a new instance of the     GenericFormatEncoderParams class if no specific     FormatEncoderParams class is available for a certain image     format.     For more information about      FormatEncoderParams please see: How Piczard Works (paragraph:     "Customize the image format of output images").</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.GenericFormatEncoderParams.Clone">
            <summary>Creates a copy of the GenericFormatEncoderParams.</summary>
            <returns>A copy of the GenericFormatEncoderParams.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.GenericFormatEncoderParams.FromJSON">
            <summary>Deserializes a new instance of the GenericFormatEncoderParams class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.GenericFormatEncoderParams.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the GenericFormatEncoderParams class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.GenericFormatEncoderParams.FromJSON(System.String)">
            <summary>Deserializes a new instance of the GenericFormatEncoderParams class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.GfxUnitConverter">
            <summary>Provides helper methods concerning conversion of graphics units (GfxUnit). This class cannot be inherited.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.GfxUnitConverter.Convert">
            <summary>Converts a measurement expressed in one GfxUnit to another GfxUnit.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.GfxUnitConverter.Convert(System.Single,CodeCarvings.Piczard.GfxUnit,CodeCarvings.Piczard.GfxUnit,System.Single)">
            <summary>Converts a measurement expressed in one GfxUnit to another GfxUnit.</summary>
            <returns>The measurement converted to the chosen graphics unit.</returns>
            <param name="sourceValue">The source value to convert.</param>
            <param name="sourceUnit">The graphics unit in which the source value is expressed.</param>
            <param name="destUnit">The graphics unit in which the value must be converted.</param>
            <param name="resolution">The resolution expressed in DPI (Dots Per Inch).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.GfxUnitConverter.Convert(System.Drawing.PointF,CodeCarvings.Piczard.GfxUnit,CodeCarvings.Piczard.GfxUnit,System.Single)">
            <summary>Converts a measurement expressed in one GfxUnit to another GfxUnit.</summary>
            <returns>The measurement converted to the chosen graphics unit.</returns>
            <param name="sourceValue">The source value to convert.</param>
            <param name="sourceUnit">The graphics unit in which the source value is expressed.</param>
            <param name="destUnit">The graphics unit in which the value must be converted.</param>
            <param name="resolution">The resolution expressed in DPI (Dots Per Inch).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.GfxUnitConverter.Convert(System.Drawing.SizeF,CodeCarvings.Piczard.GfxUnit,CodeCarvings.Piczard.GfxUnit,System.Single)">
            <summary>Converts a measurement expressed in one GfxUnit to another GfxUnit.</summary>
            <returns>The measurement converted to the chosen graphics unit.</returns>
            <param name="sourceValue">The source value to convert.</param>
            <param name="sourceUnit">The graphics unit in which the source value is expressed.</param>
            <param name="destUnit">The graphics unit in which the value must be converted.</param>
            <param name="resolution">The resolution expressed in DPI (Dots Per Inch).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.GfxUnitConverter.Convert(System.Drawing.RectangleF,CodeCarvings.Piczard.GfxUnit,CodeCarvings.Piczard.GfxUnit,System.Single)">
            <summary>Converts a measurement expressed in one GfxUnit to another GfxUnit.</summary>
            <returns>The measurement converted to the chosen graphics unit.</returns>
            <param name="sourceValue">The source value to convert.</param>
            <param name="sourceUnit">The graphics unit in which the source value is expressed.</param>
            <param name="destUnit">The graphics unit in which the value must be converted.</param>
            <param name="resolution">The resolution expressed in DPI (Dots Per Inch).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.GfxUnitConverter.Convert(System.Nullable`1{System.Single},CodeCarvings.Piczard.GfxUnit,CodeCarvings.Piczard.GfxUnit,System.Single)">
            <summary>Converts a measurement expressed in one GfxUnit to another GfxUnit.</summary>
            <returns>The measurement converted to the chosen graphics unit.</returns>
            <param name="sourceValue">The source value to convert.</param>
            <param name="sourceUnit">The graphics unit in which the source value is expressed.</param>
            <param name="destUnit">The graphics unit in which the value must be converted.</param>
            <param name="resolution">The resolution expressed in DPI (Dots Per Inch).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.GfxUnitConverter.ConvertAndRound">
            <summary>Converts a measurement expressed in one GfxUnit to another GfxUnit and then round it to the nearest integer.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.GfxUnitConverter.ConvertAndRound(System.Single,CodeCarvings.Piczard.GfxUnit,CodeCarvings.Piczard.GfxUnit,System.Single)">
            <summary>Converts a measurement expressed in one GfxUnit to another GfxUnit and then round it to the nearest integer.</summary>
            <returns>The measurement converted to the chosen graphics unit and then rounded it to the nearest integer.</returns>
            <param name="sourceValue">The source value to convert and round.</param>
            <param name="sourceUnit">The graphics unit in which the source value is expressed.</param>
            <param name="destUnit">The graphics unit in which the value must be converted.</param>
            <param name="resolution">The resolution expressed in DPI (Dots Per Inch).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.GfxUnitConverter.ConvertAndRound(System.Drawing.PointF,CodeCarvings.Piczard.GfxUnit,CodeCarvings.Piczard.GfxUnit,System.Single)">
            <summary>Converts a measurement expressed in one GfxUnit to another GfxUnit and then round it to the nearest integer.</summary>
            <returns>The measurement converted to the chosen graphics unit and then rounded it to the nearest integer.</returns>
            <param name="sourceValue">The source value to convert and round.</param>
            <param name="sourceUnit">The graphics unit in which the source value is expressed.</param>
            <param name="destUnit">The graphics unit in which the value must be converted.</param>
            <param name="resolution">The resolution expressed in DPI (Dots Per Inch).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.GfxUnitConverter.ConvertAndRound(System.Drawing.SizeF,CodeCarvings.Piczard.GfxUnit,CodeCarvings.Piczard.GfxUnit,System.Single)">
            <summary>Converts a measurement expressed in one GfxUnit to another GfxUnit and then round it to the nearest integer.</summary>
            <returns>The measurement converted to the chosen graphics unit and then rounded it to the nearest integer.</returns>
            <param name="sourceValue">The source value to convert and round.</param>
            <param name="sourceUnit">The graphics unit in which the source value is expressed.</param>
            <param name="destUnit">The graphics unit in which the value must be converted.</param>
            <param name="resolution">The resolution expressed in DPI (Dots Per Inch).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.GfxUnitConverter.ConvertAndRound(System.Drawing.RectangleF,CodeCarvings.Piczard.GfxUnit,CodeCarvings.Piczard.GfxUnit,System.Single)">
            <summary>Converts a measurement expressed in one GfxUnit to another GfxUnit and then round it to the nearest integer.</summary>
            <returns>The measurement converted to the chosen graphics unit and then rounded it to the nearest integer.</returns>
            <param name="sourceValue">The source value to convert and round.</param>
            <param name="sourceUnit">The graphics unit in which the source value is expressed.</param>
            <param name="destUnit">The graphics unit in which the value must be converted.</param>
            <param name="resolution">The resolution expressed in DPI (Dots Per Inch).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.GfxUnitConverter.ConvertAndRound(System.Nullable`1{System.Single},CodeCarvings.Piczard.GfxUnit,CodeCarvings.Piczard.GfxUnit,System.Single)">
            <summary>Converts a measurement expressed in one GfxUnit to another GfxUnit and then round it to the nearest integer.</summary>
            <returns>The measurement converted to the chosen graphics unit and then rounded it to the nearest integer.</returns>
            <param name="sourceValue">The source value to convert and round.</param>
            <param name="sourceUnit">The graphics unit in which the source value is expressed.</param>
            <param name="destUnit">The graphics unit in which the value must be converted.</param>
            <param name="resolution">The resolution expressed in DPI (Dots Per Inch).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.GfxUnitConverter.ConvertGfxUnitToGraphicsUnit(CodeCarvings.Piczard.GfxUnit)">
            <summary>Converts a unit of measure used by Piczard (GfxUnit) into the corresponding unit of measure used by the System.Drawing objects (GraphicsUnit).</summary>
            <returns>The corresponding unit of measure.</returns>
            <remarks>If it's not possible to convert the unit of measure (for example "Centimeter" is available only in the GfxUnit enumeration but not in GraphicsUnit) then an Exception is thrown. In order to avoid that any Exception is thrown may be useful to invoke the GetCanConvertGfxUnitToGraphicsUnit method before invoking the ConvertGfxUnitToGraphicsUnit method.</remarks>
            <param name="unit">The unit of measure to convert.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.GfxUnitConverter.ConvertGraphicsUnitToGfxUnit(System.Drawing.GraphicsUnit)">
            <summary>Converts a unit of measure used by the System.Drawing objects (GraphicsUnit) into the corresponding unit of measure used by Piczard (GfxUnit).</summary>
            <returns>The corresponding unit of measure.</returns>
            <remarks>If it's not possible to convert the unit of measure (for example "Display" is available only in the GraphicsUnit enumeration but not in GfxUnit) then an Exception is thrown. In order to avoid that any Exception is thrown may be useful to invoke the GetCanConvertGraphicsUnitToGfxUnit method before invoking the ConvertGraphicsUnitToGfxUnit method.</remarks>
            <param name="unit">The unit of measure to convert.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.GfxUnitConverter.GetCanConvertGfxUnitToGraphicsUnit(CodeCarvings.Piczard.GfxUnit)">
            <summary>Gets a value indicating whether it is possible to convert a unit of measure used by Piczard (GfxUnit) into the corresponding unit of measure used by the System.Drawing objects (GraphicsUnit).</summary>
            <returns>true if GfxUnit can be converted to GraphicsUnit; otherwise, false.</returns>
            <remarks>    Not every unit of measure can be converted.     For example "Centimeter" is available only in the GfxUnit     enumeration but not in GraphicsUnit.</remarks>
            <param name="unit">The unit of measure to convert.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.GfxUnitConverter.GetCanConvertGraphicsUnitToGfxUnit(System.Drawing.GraphicsUnit)">
            <summary>Gets a value indicating whether it is possible to convert a unit of measure used by the System.Drawing objects (GraphicsUnit) into the corresponding unit of measure used by Piczard (GfxUnit).</summary>
            <remarks>    Not every unit of measure can be converted.     For example "Display" is available only in the GraphicsUnit enumeration but not in     GfxUnit.</remarks>
            <returns>true if GraphicsUnit can be converted to GfxUnit; otherwise, false.</returns>
            <param name="unit">The unit of measure to convert.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.GifFormatEncoderParams">
            <summary>Represents a FormatEncoderParams class that can save images in the Gif format.</summary>
            <remarks>For more information about  FormatEncoderParams please see: How Piczard Works (paragraph: "Customize the image format of output images").</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.GifFormatEncoderParams.#ctor">
            <summary>Initializes a new instance of the GifFormatEncoderParams class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.GifFormatEncoderParams.#ctor">
            <summary>Initializes a new instance of the GifFormatEncoderParams class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.GifFormatEncoderParams.#ctor(System.Int32)">
            <summary>Initializes a new instance of the GifFormatEncoderParams class and sets the maximum number of colors the quantized image can contain.</summary>
            <param name="maxColors">The maximum number of colors the quantized image can contain.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.GifFormatEncoderParams.Clone">
            <summary>Creates a copy of the GifFormatEncoderParams.</summary>
            <returns>A copy of the GifFormatEncoderParams.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.GifFormatEncoderParams.FromJSON">
            <summary>Deserializes a new instance of the GifFormatEncoderParams class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.GifFormatEncoderParams.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the GifFormatEncoderParams class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.GifFormatEncoderParams.FromJSON(System.String)">
            <summary>Deserializes a new instance of the GifFormatEncoderParams class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.GifFormatEncoderParams.MaxColors">
            <summary>Gets or sets the maximum number of colors the quantized image can contain.</summary>
            <remarks>This property is ignored if QuantizeImage is set to false.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.GifFormatEncoderParams.QuantizeImage">
            <summary>Gets or sets a value indicating whether the image must be quantized.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.ImageArchiver">
            <summary>Provides methods for loading/storing image files and managing image formats. This class cannot be inherited.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.GetDefaultFormatEncoderParams">
            <summary>Initializes a new instance of the FormatEncoderParams class representing the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.GetDescriptionFromImageFormatId(System.Guid)">
            <summary>Gets a short description that describes a particular image format.</summary>
            <returns>A short description (e.g. "(JPG) Joint Photographic Experts Group") that describes the image format; null in case the image format is unknown.</returns>
            <param name="imageFormatId">The Guid that identifies the image format.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.GetEncoderInfoFromImageFormat(System.Guid)">
            <summary>Gets an instance of the  System.Drawing.Imaging.ImageCodecInfo class associated with an image format.</summary>
            <returns>An instance of the  System.Drawing.Imaging.ImageCodecInfo class associated with the image format; null in case the image format is unknown.</returns>
            <param name="imageFormatId">The Guid that identifies the image format.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.GetFileExtensionFromImageFormatId(System.Guid)">
            <summary>Gets the default file extension associated with a particular image format.</summary>
            <returns>The default file extension (e.g. ".jpg") associated with the image format; null in case the image format is unknown.</returns>
            <param name="imageFormatId">The Guid that identifies the image format.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.GetFormatEncoderParams(System.Guid)">
            <summary>Gets a  FormatEncoderParams object able to handle a particular image format. Initializes a new instance of the FormatEncoderParams class.</summary>
            <remarks>For details about the image format id please see FormatEncoderParams.ImageFormatId</remarks>
            <returns>An instance of a specific FormatEncoderParams class if it's available (e.g. JpegFormatEncoderParams for the Jpeg format); otherwise an instance of the GenericFormatEncoderParams class. An instance of a specific FormatEncoderParams class if it's available (e.g. JpegFormatEncoderParams for the Jpeg format); otherwise an instance of the GenericFormatEncoderParams class.</returns>
            <param name="imageFormatId">The Guid that identifies the image format.The Guid that uniquely identify the image format.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.GetFormatEncoderParamsFromFileExtension">
            <summary>Initializes a new instance of the FormatEncoderParams class by determining the image format from the file extension.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.GetFormatEncoderParamsFromFileExtension(System.String,System.Guid)">
            <summary>Initializes a new instance of the FormatEncoderParams class by determining the image format from the file extension; if the file extension is unknown then the provided default image format Guid is used.</summary>
            <returns>An instance of a specific FormatEncoderParams class if it's available (e.g. JpegFormatEncoderParams for the Jpeg format); otherwise an instance of the GenericFormatEncoderParams class.</returns>
            <param name="fileExtension">The file extension from which to calculate the image format (e.g. ".jpeg" or ".jpg").</param>
            <param name="defaultImageFormatId">The Guid of the image format to use if the provided file extension is unknown.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.GetFormatEncoderParamsFromFileExtension(System.String)">
            <summary>Initializes a new instance of the FormatEncoderParams class by determining the image format from the file extension; if the file extension is unknown then the default image format is used (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <returns>An instance of a specific FormatEncoderParams class if it's available (e.g. JpegFormatEncoderParams for the Jpeg format); otherwise an instance of the GenericFormatEncoderParams class.</returns>
            <param name="fileExtension">The file extension from which to calculate the image format (e.g. ".jpeg" or ".jpg").</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.GetFormatEncoderParamsFromFilePath">
            <summary>Initializes a new instance of the FormatEncoderParams class by determining the image format from the file extension of the provided file path.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.GetFormatEncoderParamsFromFilePath(System.String,System.Guid)">
            <summary>Initializes a new instance of the FormatEncoderParams class by determining the image format from the file extension of the provided file path; if the file extension is unknown then the provided default image format Guid is used.</summary>
            <returns>An instance of a specific FormatEncoderParams class if it's available (e.g. JpegFormatEncoderParams for the Jpeg format); otherwise an instance of the GenericFormatEncoderParams class.</returns>
            <param name="filePath">The file path containing the file extension from which to calculate the image format (e.g. "c:\temp\myimage.jpg").</param>
            <param name="defaultImageFormatId">The Guid of the image format to use if the provided file extension is unknown.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.GetFormatEncoderParamsFromFilePath(System.String)">
            <summary>Initializes a new instance of the FormatEncoderParams class by determining the image format from the file extension of the provided file path; if the file extension is unknown then the default image format is used (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <returns>An instance of a specific FormatEncoderParams class if it's available (e.g. JpegFormatEncoderParams for the Jpeg format); otherwise an instance of the GenericFormatEncoderParams class.</returns>
            <param name="filePath">The file path containing the file extension from which to calculate the image format (e.g. "c:\temp\myimage.jpg").</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.GetHandledFileExtensions">
            <summary>Gets an array containing the file extensions of all the image formats handled by Piczard and from the installed plugins.</summary>
            <returns>An array of handled file extensions (e.g. {".jpeg", ".jpg", ".png"}).</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.GetHandledImageFormats">
            <summary>Gets an array containing all the Guids that identify the image formats handled by Piczard and from the installed plugins.</summary>
            <returns>An array of supported image format Guids.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.GetHandledMimeTypes">
            <summary>Gets an array containing the MIME types of all the image formats handled by Piczard and from the installed plugins.</summary>
            <returns>An array of handled MIME types (e.g. {"image/jpeg", "image/png"}).</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.GetImageFormat(System.Guid)">
            <summary>Gets an instance of the  System.Drawing.Imaging.ImageFormat class associated with an image format.</summary>
            <returns>An instance of the  System.Drawing.Imaging.ImageFormat class associated with the image format.</returns>
            <param name="imageFormatId">The Guid that identifies the image format.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.GetImageFormatIdFromFileExtension(System.String)">
            <summary>Gets the image format associated with a particular file extension.</summary>
            <returns>The Guid of the image format associated with the file extension; null in case the file extension is unknown.</returns>
            <param name="fileExtension">The file extension (e.g. ".jpg").</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.GetImageFormatTransparencySupport(System.Guid)">
            <summary>Gets a value indicating whether a particular image format supports transparency.</summary>
            <returns>true if the image format supports transparency; otherwise false. null in case the image format is unknown.</returns>
            <param name="imageFormatId">The Guid that identifies the image format.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.GetMimeTypeFromImageFormatId(System.Guid)">
            <summary>Gets the default MIME type associated with a particular image format.</summary>
            <returns>The MIME type (e.g. "image/jpeg") associated with the image format; null in case the image format is unknown.</returns>
            <param name="imageFormatId">The Guid that identifies the image format.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.LoadImage">
            <summary>Loads an image from the file system, a Stream or an array of bytes.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.LoadImage(System.Object,System.Boolean,System.Boolean)">
            <summary>Loads an image from the file system, a Stream or an array of bytes, optionally using embedded color management information and validating the image data.</summary>
            <returns>The Image this method creates encapsulated in an instance of the LoadedImage class.</returns>
            <param name="source">A string (file path), a Stream or an array of bytes containing the image data.</param>
            <param name="useEmbeddedColorManagement">true to use embedded color management information; otherwise, false.</param>
            <param name="validateImageData">true to validate the image data; otherwise, false.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.LoadImage(System.Object,System.Boolean)">
            <summary>Loads an image from the file system, a Stream or an array of bytes, optionally using embedded color management information.</summary>
            <returns>The Image this method creates encapsulated in an instance of the LoadedImage class.</returns>
            <param name="source">A string (file path), a Stream or an array of bytes containing the image data.</param>
            <param name="useEmbeddedColorManagement">true to use embedded color management information; otherwise, false.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.LoadImage(System.Object)">
            <summary>Loads an image from the file system, a Stream or an array of bytes.</summary>
            <returns>The Image this method creates encapsulated in an instance of the LoadedImage class.</returns>
            <param name="source">A string (file path), a Stream or an array of bytes containing the image data.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.SaveImageToByteArray">
            <summary>Saves an Image to a byte array.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.SaveImageToByteArray(System.Drawing.Image,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Saves an Image to a byte array, using the specified  FormatEncoderParams.</summary>
            <returns>The image saved as array of bytes.</returns>
            <param name="image">The Image to save.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.SaveImageToByteArray(System.Drawing.Image)">
            <summary>Saves an Image to a byte array, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <returns>The image saved as array of bytes.</returns>
            <param name="image">The Image to save.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.SaveImageToFileSystem">
            <summary>Saves an Image to the file system.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.SaveImageToFileSystem(System.Drawing.Image,System.String,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Saves an Image to the file system, using the specified  FormatEncoderParams</summary>
            <param name="image">The Image to save.</param>
            <param name="filePath">A string that contains the name of the file to which to save the Image.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.SaveImageToFileSystem(System.Drawing.Image,System.String)">
            <summary>Saves an Image to the file system; the file format is automatically calculated from the file extension. If the file format cannot be calculated, then the default image format is used (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <param name="image">The Image to save.</param>
            <param name="filePath">A string that contains the name of the file to which to save the Image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.SaveImageToStream">
            <summary>Saves an Image to a Stream.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.SaveImageToStream(System.Drawing.Image,System.IO.Stream,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Saves an Image to a Stream, using the specified  FormatEncoderParams.</summary>
            <param name="image">The Image to save.</param>
            <param name="stream">The open Stream where the Image will be saved.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.SaveImageToStream(System.Drawing.Image,System.IO.Stream)">
            <summary>Saves an Image to a Stream, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <param name="image">The Image to save.</param>
            <param name="stream">The open Stream where the Image will be saved.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.TransmitImageFileToWebResponse">
            <summary>Writes the specified image file directly to an HTTP response output stream without buffering it in memory.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.TransmitImageFileToWebResponse(System.String,System.Web.HttpResponse)">
            <summary>Writes the specified file directly to the provided HTTP response output stream without buffering it in memory.</summary>
            <param name="filePath">The path of the file containing the image to transmit.</param>
            <param name="response">The HttpResponse object to which the image has to be written.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.TransmitImageFileToWebResponse(System.String)">
            <summary>Writes the specified file directly to the  current HTTP response output stream without buffering it in memory.</summary>
            <param name="filePath">The path of the file containing the image to transmit.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.TransmitImageToWebResponse">
            <summary>Encodes and writes the specified image directly to an HTTP response output stream.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.TransmitImageToWebResponse(System.Drawing.Image,System.Web.HttpResponse,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Encodes and writes the specified image directly to the provided HTTP response output stream, using the specified  FormatEncoderParams.</summary>
            <param name="image">The Image to transmit.</param>
            <param name="response">The HttpResponse object to which the image has to be written.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.TransmitImageToWebResponse(System.Drawing.Image,System.Web.HttpResponse)">
            <summary>Encodes and writes the specified image directly to the provided HTTP response output stream, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <param name="image">The Image to transmit.</param>
            <param name="response">The HttpResponse object to which the image has to be written.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.TransmitImageToWebResponse(System.Drawing.Image,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Encodes and writes the specified image directly to the current HTTP response output stream, using the specified  FormatEncoderParams.</summary>
            <param name="image">The Image to transmit.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.TransmitImageToWebResponse(System.Drawing.Image)">
            <summary>Encodes and writes the specified image directly to the  current HTTP response output stream, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <param name="image">The Image to transmit.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.ValidateImageFormatId">
            <summary>Determines if the provided Guid is a valid image format id.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.ValidateImageFormatId(System.Guid)">
            <summary>Determines if the provided Guid is a valid image format id.</summary>
            <param name="imageFormatId">The value to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageArchiver.ValidateImageFormatId(System.Guid,System.Boolean)">
            <summary>Determines if the provided Guid is a valid image format id; if the "throwException" parameter is true then an Exception is thrown if the value is not valid.</summary>
            <returns>true if the Guid is a valid image format id; otherwise, false.</returns>
            <param name="imageFormatId">The value to validate.</param>
            <param name="throwException">If true, an exception is thrown if the value is not valid.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.ImageCrop">
            <summary>Represents an ImageProcessingFilter that allows to manually crop an image. This class cannot be inherited.</summary>
            <remarks>For more information please see: Manual Image Crop.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.#ctor">
            <summary>Initializes a new instance of the ImageCrop class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.#ctor">
            <summary>Initializes a new instance of the ImageCrop class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>Initializes a new instance of the ImageCrop class and sets the crop rectangle.</summary>
            <param name="x">The X coordinate of the crop Rectangle.</param>
            <param name="y">The Y coordinate of the crop Rectangle.</param>
            <param name="width">The width of the crop Rectangle.</param>
            <param name="height">The height of the crop Rectangle.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,CodeCarvings.Piczard.BackgroundColor)">
            <summary>Initializes a new instance of the ImageCrop class and sets the crop rectangle; the specified color is used to fill the eventual canvas area.</summary>
            <param name="x">The X coordinate of the crop Rectangle.</param>
            <param name="y">The Y coordinate of the crop Rectangle.</param>
            <param name="width">The width of the crop Rectangle.</param>
            <param name="height">The height of the crop Rectangle.</param>
            <param name="canvasColor">The color used to fill the eventual canvas area.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.#ctor(System.Nullable`1{System.Drawing.Rectangle})">
            <summary>Initializes a new instance of the ImageCrop class and sets the crop rectangle.</summary>
            <param name="rectangle">    The coordinates and the size of the rectangular area to     crop. If null the entire source image is cropped.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.#ctor(System.Nullable`1{System.Drawing.Rectangle},CodeCarvings.Piczard.BackgroundColor)">
            <summary>Initializes a new instance of the ImageCrop class and sets the crop rectangle; the specified color is used to fill the eventual canvas area.</summary>
            <param name="rectangle">    The coordinates and the size of the rectangular area to     crop. If null the entire source image is cropped.</param>
            <param name="canvasColor">The color used to fill the eventual canvas area.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.Calculate">
            <summary>Initializes a new instance of the ImageCrop class by converting a rectangle expressed in any GfxUnit.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.Calculate(CodeCarvings.Piczard.GfxUnit,System.Drawing.RectangleF,System.Single)">
            <summary>Initializes a new instance of the ImageCrop class by converting a rectangle expressed in any GfxUnit; the specified resolution (DPI) is used to convert the measurement.</summary>
            <returns>The instance of the ImageCrop class.</returns>
            <param name="unit">The graphics unit in which the rectangle is expressed.</param>
            <param name="rectangle">The crop rectangle to convert.</param>
            <param name="resolution">The resolution (DPI) used during the conversion to pixel of the rectangle.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.Calculate(CodeCarvings.Piczard.GfxUnit,System.Drawing.RectangleF)">
            <summary>Initializes a new instance of the ImageCrop class by converting a rectangle expressed in any GfxUnit; the default resolution (96 DPI) is used to convert the measurement.</summary>
            <returns>The instance of the ImageCrop class.</returns>
            <param name="unit">The graphics unit in which the rectangle is expressed.</param>
            <param name="rectangle">The crop rectangle to convert.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.Clone">
            <summary>Creates a copy of the ImageCrop filter.</summary>
            <returns>A copy of the ImageCrop filter.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.FromJSON">
            <summary>Deserializes a new instance of the ImageCrop class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the ImageCrop class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.FromJSON(System.String)">
            <summary>Deserializes a new instance of the ImageCrop class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.GetImageProcessingJob">
            <summary>Gets an instance of the ImageProcessingJob class that can be used to process the image; the current filter is added to the Filters collection of the ImageProcessingJob object.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.GetImageProcessingJob(System.Single)">
            <summary>Gets an instance of the ImageProcessingJob class that can be used to process the image; the current filter is added to the Filters collection of the ImageProcessingJob object and the specified OutputResolution (DPI) is used.</summary>
            <returns>An instance of the ImageProcessingJob class that can apply the current ImageProcessingFilter.</returns>
            <param name="outputResolution">The resolution (DPI) of the images that are produced by the ImageProcessingJob object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.GetIsNeutral(System.Drawing.Size)">
            <summary>Gets a value indicating whether the ImageProcessingFilter is neutral (does not alter source images having the specified size).</summary>
            <returns>true, if the ImageProcessingFilter does not alter source images having the specified size; otherwise, false.</returns>
            <param name="imageSize">The size of the source image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.Validate">
            <summary>Validates the current ImageCrop filter to ensure that all the parameters are correctly configured (e.g. the Rectangle.Width is not higher than CoreSettings.Drawing.MaxImageSize.Width).</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.Validate(System.Boolean)">
            <summary>Validates the current ImageCrop filter to ensure that all the parameters are correctly configured (e.g. the Rectangle.Width is not higher than CoreSettings.Drawing.MaxImageSize.Width); if the "throwException" parameter is true then an Exception is thrown if the ImageCrop is not valid.</summary>
            <returns>true if the ImageCrop filter is valid; otherwise, false.</returns>
            <remarks>The Validate method always returns false (or throw an exception) if the Rectangle property is null.</remarks>
            <param name="throwException">If true, an exception is thrown if the ImageCrop filter is not valid.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.Validate">
            <summary>Validates the current ImageCrop filter to ensure that all the parameters are correctly configured (e.g. the Rectangle.Width is not higher than CoreSettings.Drawing.MaxImageSize.Width).</summary>
            <returns>true if the ImageCrop filter is valid; otherwise, false.</returns>
            <remarks>The Validate method always returns false if the Rectangle property is null.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.ValidateRectangle">
            <summary>Determines if the provided crop rectangle is valid.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.ValidateRectangle(System.Nullable`1{System.Drawing.Rectangle})">
            <summary>Determines if the provided crop rectangle is valid.</summary>
            <returns>true if the crop rectangle is valid; otherwise, false.</returns>
            <param name="rectangle">The rectangle to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageCrop.ValidateRectangle(System.Nullable`1{System.Drawing.Rectangle},System.Boolean)">
            <summary>Determines if the provided crop rectangle is valid; if the "throwException" parameter is true then an Exception is thrown if the rectangle is not valid.</summary>
            <returns>true if the crop rectangle is valid; otherwise, false.</returns>
            <param name="rectangle">The rectangle to validate.</param>
            <param name="throwException">If true, an Exception is thrown if the rectangle is not valid.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageCrop.CanvasColor">
            <summary>Gets or sets the color used to fill the eventual canvas area.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageCrop.Rectangle">
            <summary>    Gets or sets the coordinates and the size of the     rectangular area to crop. If null the entire source image is     cropped.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.ImageProcessingFilter">
            <summary>Represents the abstract class from which every Piczard filter must inherit.</summary>
            <remarks>    Please see: How Piczard     Works.     For information about how to implement a custom image     processing filter please see: How To     Develop A Custom Image Processing Filter.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.Apply(CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs)">
            <summary>Applies the current ImageProcessingFilter.</summary>
            <remarks>    This method must be implemented in every     ImageProcessingFilter class.     It is automatically called by Piczard for example when the     GetProcessedImage method is invoked.                       The Apply method takes as input (source Image) the property         ImageProcessingActionExecuteArgs.Image.         After the image has been processed, the Apply method         method must store the output Image in the property         ImageProcessingActionExecuteArgs.Image.         In this way the next ImageProcessingFilter in the chain         (ImageProcessingJob.Filters) will use it as input.         When a new value is set for the property         ImageProcessingActionExecuteArgs.Image, the previous one is         automatically disposed.               Please see:                       How         To Develop A Custom Image Processing Filter         The Example A.401 - "Custom filters"         / MyCustomFilter1.     </remarks>
            <param name="args">An instance of the ImageProcessingActionExecuteArgs class that encapsulates data concerning the image processing workflow.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.GetImageProcessingJob">
            <summary>Gets an instance of the ImageProcessingJob class that can be used to process the image; the current filter is added to the Filters collection of the ImageProcessingJob object.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.GetImageProcessingJob(System.Single)">
            <summary>Gets an instance of the ImageProcessingJob class that can be used to process the image; the current filter is added to the Filters collection of the ImageProcessingJob object and the specified OutputResolution (DPI) is used.</summary>
            <returns>An instance of the ImageProcessingJob class that can apply the current ImageProcessingFilter.</returns>
            <param name="outputResolution">The resolution (DPI) of the images that are produced by the ImageProcessingJob object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.GetImageProcessingJob">
            <summary>Gets an instance of the ImageProcessingJob class that can be used to process the image; the current filter is added to the Filters collection of the ImageProcessingJob object and the default OutputResolution (96 DPI) is used.</summary>
            <returns>An instance of the ImageProcessingJob class that can apply the current ImageProcessingFilter.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.GetProcessedImage">
            <summary>Applies the current ImageProcessingFilter to the specified image and returns the result as a Bitmap object.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.GetProcessedImage(System.Object,System.Single,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current ImageProcessingFilter to the specified image and returns the result as a Bitmap object; the specified output resolution (DPI) is used. BackgroundColor and quantization are applied according to the specified FormatEncoderParams.</summary>
            <returns>The image processed by the current ImageProcessingFilter.</returns>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="outputResolution">The output resolution (DPI) used to process the image.</param>
            <param name="hintFormatEncoderParams">A FormatEncoderParams object used to guess the right BackgroundColor and quantization mode to apply to the output image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.GetProcessedImage(System.Object,System.Single)">
            <summary>Applies the current ImageProcessingFilter to the specified image and returns the result as a Bitmap object; the specified output resolution (DPI) is used.</summary>
            <returns>The image processed by the current ImageProcessingFilter.</returns>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="outputResolution">The output resolution (DPI) used to process the image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.GetProcessedImage(System.Object,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current ImageProcessingFilter to the specified image and returns the result as a Bitmap object; the default resolution (96 DPI) is used. BackgroundColor and quantization are applied according to the specified FormatEncoderParams.</summary>
            <returns>The image processed by the current ImageProcessingFilter.</returns>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="hintFormatEncoderParams">A FormatEncoderParams object used to guess the right BackgroundColor and quantization mode to apply to the output image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.GetProcessedImage(System.Object)">
            <summary>Applies the current ImageProcessingFilter to the specified image and returns the result as a Bitmap object; the default resolution (96 DPI) is used.</summary>
            <returns>The image processed by the current ImageProcessingFilter.</returns>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.LoadImageProcessingActions(CodeCarvings.Piczard.Processing.ImageProcessingActionLoadArgs)">
            <summary>Initializes and loads one more ImageProcessingAction objects that will be used during the image processing workflow.</summary>
            <remarks>    This method is automatically called by Piczard for     example when the GetProcessedImage method is invoked (before     ImageProcessingFilter.Apply).                       By default, the LoadImageProcessingActions         Initializes a new instance of the         ImageProcessingFilterAction class associated with the         current ImageProcessingFilter.         Subsequently, the ImageProcessingFilterAction object         is added to the Actions property of the         ImageProcessingActionLoadArgs parameter.         After the method LoadImageProcessingActions is         invoked on every ImageProcessingFilter instance of the         ImageProcessingJob.Filters collection, the image is         processed:         The ImageProcessingFilter.Apply method is invoked for every         ImageProcessingFilterAction contained in the         ImageProcessingActionLoadArgs.Actions property.               Please see:                       How         To Develop A Custom Image Processing Filter         The Example A.401 - "Custom filters"         / MyAggretatedFilters.     </remarks>
            <param name="args">An instance of the ImageProcessingActionLoadArgs class that encapsulates data concerning the "LoadActions" phase of the image processing workflow.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.SaveProcessedImageToByteArray">
            <summary>Applies the current  ImageProcessingFilter to the specified image and saves the result Bitmap to a byte array.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.SaveProcessedImageToByteArray(System.Object,CodeCarvings.Piczard.FormatEncoderParams,System.Single)">
            <summary>Applies the current  ImageProcessingFilter to the specified image and saves the result Bitmap to a byte array, using the provided  FormatEncoderParams and output resolution (DPI).</summary>
            <returns>The image processed by the current ImageProcessingFilter saved as array of bytes.</returns>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
            <param name="outputResolution">The output resolution (DPI) used to process the image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.SaveProcessedImageToByteArray(System.Object,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current  ImageProcessingFilter to the specified image and saves the result Bitmap to a byte array, using the provided  FormatEncoderParams and the default output resolution (96 DPI).</summary>
            <returns>The image processed by the current ImageProcessingFilter saved as array of bytes.</returns>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.SaveProcessedImageToByteArray(System.Object)">
            <summary>Applies the current  ImageProcessingFilter to the specified image and saves the result Bitmap to a byte array, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId) and the default output resolution (96 DPI).</summary>
            <returns>The image processed by the current ImageProcessingFilter saved as array of bytes.</returns>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.SaveProcessedImageToFileSystem">
            <summary>Applies the current  ImageProcessingFilter to the specified image and saves the result Bitmap to the file system.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.SaveProcessedImageToFileSystem(System.Object,System.String,CodeCarvings.Piczard.FormatEncoderParams,System.Single)">
            <summary>Applies the current  ImageProcessingFilter to the specified image and saves the result Bitmap to the file system, using the provided  FormatEncoderParams and output resolution (DPI).</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="destFilePath">A string that contains the name of the file to which to save the processed Image.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
            <param name="outputResolution">The output resolution (DPI) used to process the image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.SaveProcessedImageToFileSystem(System.Object,System.String,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current  ImageProcessingFilter to the specified image and saves the result Bitmap to the file system, using the provided  FormatEncoderParams and the default output resolution (96 DPI).</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="destFilePath">A string that contains the name of the file to which to save the processed Image.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.SaveProcessedImageToFileSystem(System.Object,System.String)">
            <summary>Applies the current  ImageProcessingFilter to the specified image and saves the result Bitmap to the file system, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId) and the default output resolution (96 DPI).</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="destFilePath">A string that contains the name of the file to which to save the processed Image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.SaveProcessedImageToStream">
            <summary>Applies the current  ImageProcessingFilter to the specified image and saves the result Bitmap to a Stream.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.SaveProcessedImageToStream(System.Object,System.IO.Stream,CodeCarvings.Piczard.FormatEncoderParams,System.Single)">
            <summary>Applies the current  ImageProcessingFilter to the specified image and saves the result Bitmap to a Stream, using the provided  FormatEncoderParams and output resolution (DPI).</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="destStream">    The open Stream where the processed Image will be saved.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
            <param name="outputResolution">The output resolution (DPI) used to process the image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.SaveProcessedImageToStream(System.Object,System.IO.Stream,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current  ImageProcessingFilter to the specified image and saves the result Bitmap to a Stream, using the provided  FormatEncoderParams and the default output resolution (96 DPI).</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="destStream">The open Stream where the processed Image will be saved.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.SaveProcessedImageToStream(System.Object,System.IO.Stream)">
            <summary>Applies the current  ImageProcessingFilter to the specified image and saves the result Bitmap to a Stream, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId) and the default output resolution (96 DPI).</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="destStream">    The open Stream where the processed Image will be saved.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.TransmitProcessedImageToWebResponse">
            <summary>Applies the current  ImageProcessingFilter to the specified image using default output resolution (96 DPI), then encodes and writes the result Bitmap directly to an HTTP response output stream.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.TransmitProcessedImageToWebResponse(System.Object,System.Web.HttpResponse,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current  ImageProcessingFilter to the specified image using default output resolution (96 DPI), then encodes and writes the result Bitmap directly to the provided HTTP response output stream, using the specified  FormatEncoderParams.</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="response">The HttpResponse object to which the image has to be written.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.TransmitProcessedImageToWebResponse(System.Object,System.Web.HttpResponse)">
            <summary>Applies the current  ImageProcessingFilter to the specified image using default output resolution (96 DPI), then encodes and writes the result Bitmap directly to the provided HTTP response output stream, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="response">The HttpResponse object to which the image has to be written.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.TransmitProcessedImageToWebResponse(System.Object,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current  ImageProcessingFilter to the specified image using default output resolution (96 DPI), then encodes and writes the result Bitmap directly to the  current HTTP response output stream, using the specified  FormatEncoderParams.</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilter.TransmitProcessedImageToWebResponse(System.Object)">
            <summary>Applies the current  ImageProcessingFilter to the specified image using default output resolution (96 DPI), then encodes and writes the result Bitmap directly to the  current HTTP response output stream, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageProcessingFilter.FilterFullName">
            <summary>Gets the full name of the ImageProcessingFilter.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageProcessingFilter.FilterName">
            <summary>Gets the name of the ImageProcessingFilter.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageProcessingFilter.FilterVersion">
            <summary>Gets the Version of the ImageProcessingFilter.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.ImageProcessingFilterCollection">
            <summary>Represents a collection of ImageProcessingFilter. This class cannot be inherited.</summary>
            <remarks>    Since version 1.1.3.1 of Piczard the class     ImageProcessingFilterCollection is an image     processing filter (inherits from ImageProcessingFilter, not     longer from     System.Collections.ObjectModel.Collection&lt;T&gt;).     This class allows to easily apply multiple image     filters.     For more information please see:                       How         To Apply More Than One filter     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilterCollection.#ctor">
            <summary>Initializes a new instance of the ImageProcessingFilterCollection class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilterCollection.#ctor">
            <summary>Initializes a new instance of the ImageProcessingFilterCollection class that is empty.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilterCollection.#ctor(System.Collections.Generic.IList`1{CodeCarvings.Piczard.ImageProcessingFilter})">
            <summary>Initializes a new instance of the ImageProcessingFilterCollection class as a wrapper for the specified list.</summary>
            <param name="list">The list that is wrapped by the new collection.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilterCollection.Add">
            <summary>Adds one or more ImageProcessingFilter objects to the end of the ImageProcessingFilterCollection.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilterCollection.Add(System.Collections.Generic.IEnumerable`1{CodeCarvings.Piczard.ImageProcessingFilter})">
            <summary>Adds multiple ImageProcessingFilter objects to the end of the ImageProcessingFilterCollection.</summary>
            <param name="items">The objects to be added to the end of the ImageProcessingFilterCollection.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilterCollection.Add(CodeCarvings.Piczard.ImageProcessingFilter)">
            <summary>Adds one ImageProcessingFilter object to the end of the ImageProcessingFilterCollection.</summary>
            <param name="item">The object to be added to the end of the ImageProcessingFilterCollection.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilterCollection.Clear">
            <summary>Removes all elements from the ImageProcessingFilterCollection</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilterCollection.Clone">
            <summary>Creates a copy of the ImageProcessingFilterCollection.</summary>
            <returns>A copy of the ImageProcessingFilterCollection.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilterCollection.Contains(CodeCarvings.Piczard.ImageProcessingFilter)">
            <summary>Determines whether an element is in the ImageProcessingFilterCollection.</summary>
            <returns>true if item is found in the ImageProcessingFilterCollection; otherwise, false.</returns>
            <param name="item">The object to locate in the ImageProcessingFilterCollection.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilterCollection.CopyTo(CodeCarvings.Piczard.ImageProcessingFilter[],System.Int32)">
            <summary>Copies the entire ImageProcessingFilterCollection to an one-dimensional Array, starting at the specified index of the target array.</summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from ImageProcessingFilterCollection. The Array must have zero-based indexing.</param>
            <param name="index">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilterCollection.FromJSON">
            <summary>Deserializes a new instance of the ImageProcessingFilterCollection class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilterCollection.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the ImageProcessingFilterCollection class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilterCollection.FromJSON(System.String)">
            <summary>Deserializes a new instance of the ImageProcessingFilterCollection class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilterCollection.GetEnumerator">
            <summary>Returns an enumerator that iterates through the ImageProcessingFilterCollection.</summary>
            <returns>An IEnumerator&lt;ImageProcessingFilter&gt; for the ImageProcessingFilterCollection.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilterCollection.IndexOf(CodeCarvings.Piczard.ImageProcessingFilter)">
            <summary>Searches for the specified object and returns the zero-based index of the first occurrence within the entire ImageProcessingFilterCollection.</summary>
            <returns>The zero-based index of the first occurrence of item within the entire ImageProcessingFilterCollection, if found; otherwise, -1.</returns>
            <param name="item">The object to locate in the ImageProcessingFilterCollection.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilterCollection.Insert">
            <summary>Inserts one or more elements into the ImageProcessingFilterCollection at the specified index.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilterCollection.Insert(System.Int32,System.Collections.Generic.IEnumerable`1{CodeCarvings.Piczard.ImageProcessingFilter})">
            <summary>Inserts multiple elements into the ImageProcessingFilterCollection at the specified index.</summary>
            <param name="index">The zero-based index at which the first item should be inserted.</param>
            <param name="items">The objects to insert.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilterCollection.Insert(System.Int32,CodeCarvings.Piczard.ImageProcessingFilter)">
            <summary>Inserts one element into the ImageProcessingFilterCollection at the specified index.</summary>
            <param name="index">The zero-based index at which item should be inserted.</param>
            <param name="item">The object to insert.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilterCollection.Remove(CodeCarvings.Piczard.ImageProcessingFilter)">
            <summary>Removes the first occurrence of a specific object from the ImageProcessingFilterCollection.</summary>
            <returns>true if item is successfully removed; otherwise, false. This method also returns false if item was not found in the original ImageProcessingFilterCollection.</returns>
            <param name="item">The object to remove from the ImageProcessingFilterCollection.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilterCollection.RemoveAt(System.Int32)">
            <summary>Removes the element at the specified index of the ImageProcessingFilterCollection.</summary>
            <param name="index">The zero-based index of the element to remove.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingFilterCollection.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageProcessingFilterCollection.Count">
            <summary>Gets the number of elements actually contained in the ImageProcessingFilterCollection.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageProcessingFilterCollection.Item(System.Int32)">
            <summary>Gets or sets the element at the specified index.</summary>
            <param name="index">The zero-based index of the element to get or set.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.ImageProcessingJob">
            <summary>Represents an object that allows to process an image by applying one ore more ImageProcessingFilter objects. This class cannot be inherited.</summary>
            <remarks>Since version 1.1.3.1 of Piczard, it's possible to use the ImageProcessingFilterCollection class (instead of ImageProcessingJob) in order to apply multiple image filters.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.#ctor">
            <summary>Initializes a new instance of the ImageProcessingJob class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.#ctor">
            <summary>Initializes a new instance of the ImageProcessingJob class;</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.#ctor(System.Collections.Generic.IEnumerable`1{CodeCarvings.Piczard.ImageProcessingFilter})">
            <summary>Initializes a new instance of the ImageProcessingJob class and adds all the specified ImageProcessingFilter objects to the Filters collection.</summary>
            <param name="filters">The ImageProcessingFilter objects that have to process the image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.#ctor(System.Collections.Generic.IEnumerable`1{CodeCarvings.Piczard.ImageProcessingFilter},System.Single)">
            <summary>Initializes a new instance of the ImageProcessingJob class; adds all the specified ImageProcessingFilter objects to the Filters collection and sets the OutputResolution (DPI).</summary>
            <param name="filters">The ImageProcessingFilter objects that have to process the image.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are produced by the ImageProcessingJob object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.#ctor(System.Single)">
            <summary>Initializes a new instance of the ImageProcessingJob class and sets the OutputResolution (DPI).</summary>
            <param name="outputResolution">of the images that are produced by the</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.FromJSON">
            <summary>Deserializes a new instance of the ImageProcessingJob class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the ImageProcessingJob class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.FromJSON(System.String)">
            <summary>Deserializes a new instance of the ImageProcessingJob class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.GetProcessedImage">
            <summary>Applies all the filters to the specified image and returns the result as a Bitmap object.Applies all the filters to the specified image and returns the result as a Bitmap object.</summary>
            <returns>The processed image.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.GetProcessedImage(System.Object,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies all the filters to the specified image and returns the result as a Bitmap object. BackgroundColor and quantization are applied according to the specified FormatEncoderParams.</summary>
            <returns>The processed image.</returns>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="hintFormatEncoderParams">A FormatEncoderParams object used to guess the right BackgroundColor and quantization mode to apply to the output image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.GetProcessedImage(System.Object)">
            <summary>Applies all the filters to the specified image and returns the result as a Bitmap object.</summary>
            <returns>The processed image.</returns>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.SaveProcessedImageToByteArray">
            <summary>Applies all the filters to the specified image and saves the result Bitmap to a byte array.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.SaveProcessedImageToByteArray(System.Object,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies all the filters to the specified image and saves the result Bitmap to a byte array, using the provided  FormatEncoderParams.</summary>
            <returns>The processed image saved as array of bytes.</returns>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.SaveProcessedImageToByteArray(System.Object)">
            <summary>Applies all the filters to the specified image and saves the result Bitmap to a byte array, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <returns>The processed image saved as array of bytes.</returns>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.SaveProcessedImageToFileSystem">
            <summary>Applies all the filters to the specified image and saves the result Bitmap to the file system.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.SaveProcessedImageToFileSystem(System.Object,System.String,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies all the filters to the specified image and saves the result Bitmap to the file system, using the provided  FormatEncoderParams.</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="destFilePath">A string that contains the name of the file to which to save the processed Image.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.SaveProcessedImageToFileSystem(System.Object,System.String)">
            <summary>Applies all the filters to the specified image and saves the result Bitmap to the file system, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="destFilePath">A string that contains the name of the file to which to save the processed Image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.SaveProcessedImageToStream">
            <summary>Applies all the filters to the specified image and saves the result Bitmap to a Stream.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.SaveProcessedImageToStream(System.Object,System.IO.Stream,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies all the filters to the specified image and saves the result Bitmap to a Stream, using the provided  FormatEncoderParams.</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="destStream">    The open Stream where the processed Image will be saved.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.SaveProcessedImageToStream(System.Object,System.IO.Stream)">
            <summary>Applies all the filters to the specified image and saves the result Bitmap to a Stream, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="destStream">    The open Stream where the processed Image will be saved.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.TransmitProcessedImageToWebResponse">
            <summary>Applies all the filters to the specified image, then encodes and writes the result Bitmap directly to an HTTP response output stream.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.TransmitProcessedImageToWebResponse(System.Object,System.Web.HttpResponse,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies all the filters to the specified image, then encodes and writes the result Bitmap directly to the provided HTTP response output stream, using the provided  FormatEncoderParams.</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="response">The HttpResponse object to which the image has to be written.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.TransmitProcessedImageToWebResponse(System.Object,System.Web.HttpResponse)">
            <summary>Applies all the filters to the specified image, then encodes and writes the result Bitmap directly to the provided HTTP response output stream, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="response">The HttpResponse object to which the image has to be written.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.TransmitProcessedImageToWebResponse(System.Object,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies all the filters to the specified image, then encodes and writes the result Bitmap directly to the  current HTTP response output stream, using the provided  FormatEncoderParams.</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageProcessingJob.TransmitProcessedImageToWebResponse(System.Object)">
            <summary>Applies all the filters to the specified image, then encodes and writes the result Bitmap directly to the  current HTTP response output stream, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageProcessingJob.Filters">
            <summary>Gets or sets the collection of filters that has to be applied during the image processing.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageProcessingJob.ImageBackColor">
            <summary>Gets or sets the color used to fill the image background.</summary>
            <remarks>Please see: Image Processing Job (Controlling the background color of images generated by Piczard)</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageProcessingJob.OutputResolution">
            <summary>Gets or sets the resolution (DPI) of the images that are produced by the ImageProcessingJob object.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageProcessingJob.PreApplyImageBackColor">
            <summary>Gets or sets a value indicating whether the background color (ImageBackColor) must be applied before every ImageProcessingFilter specified in the Filters collection.</summary>
            <remarks>Please see: Image Processing Job (Controlling the background color of images generated by Piczard)</remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.ImageQuantizer">
            <summary>Provides methods for image quantization. This class cannot be inherited.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageQuantizer.GetPerformImageQuantization(System.Drawing.Image,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Gets a value indicating whether an Image has to be quantized before saving; the result is calculated according to the settings contained in the specified FormatEncoderParams object.</summary>
            <returns>true if the Image has to be quantized before saving; otherwise, false.</returns>
            <param name="image">The Image that has to be checked for image quantization.</param>
            <param name="formatEncoderParams">The FormatEncoderParams object containing settings that control the image quantization.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageQuantizer.GetQuantizedImage">
            <summary>Gets a quantized copy of an Image.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageQuantizer.GetQuantizedImage(System.Drawing.Image,System.Int32)">
            <summary>Gets a quantized copy of an Image using the specified maximum color number.</summary>
            <returns>A new Bitmap object containing a quantized version of the source Image.</returns>
            <param name="image">The Image to quantize.</param>
            <param name="maxColors">An integer value indicating the "maximum number of colors" passed to quantization algorithms.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageQuantizer.GetQuantizedImage(System.Drawing.Image,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Gets a quantized copy of an Image using the settings contained in the specified FormatEncoderParams object.</summary>
            <returns>A new Bitmap object containing a quantized version of the source Image.</returns>
            <param name="image">The Image to quantize.</param>
            <param name="formatEncoderParams">The FormatEncoderParams object containing settings that control the image quantization.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageQuantizer.GetQuantizedImage(System.Drawing.Image)">
            <summary>Gets a quantized copy of an Image using the default settings (CoreSettings.ImageQuantizer.DefaultMaxColors).</summary>
            <returns>A new Bitmap object containing a quantized version of the source Image.</returns>
            <param name="image">The Image to quantize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageQuantizer.ValidateMaxColors">
            <summary>Determines if the provided value can be passed to quantization algorithms as maximum color number.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageQuantizer.ValidateMaxColors(System.Int32)">
            <summary>Determines if the provided value can be passed to quantization algorithms as maximum color number.</summary>
            <returns>true if the value is valid; otherwise, false.</returns>
            <param name="maxColors">The value to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageQuantizer.ValidateMaxColors(System.Int32,System.Boolean)">
            <summary>Determines if the provided value can be passed to quantization algorithms as maximum color number; if the "throwException" parameter is true then an Exception is thrown if the value is not valid.</summary>
            <returns>true if the value is valid; otherwise, false.</returns>
            <param name="maxColors">The value to validate.</param>
            <param name="throwException">If true, an Exception is thrown if the value is not valid.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.ImageSelection">
            <summary>Represents an ImageProcessingFilter that allows to manually transform (resize/rotate/flip) and then crop an image. This class cannot be inherited.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.#ctor">
            <summary>Initializes a new instance of the ImageSelection class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.#ctor">
            <summary>Initializes a new instance of the ImageSelection.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.#ctor(CodeCarvings.Piczard.ImageCrop)">
            <summary>Initializes a new instance of the ImageSelection class and sets the Crop parameters.</summary>
            <param name="crop">An ImageCrop filter.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.#ctor(CodeCarvings.Piczard.ImageTransformation)">
            <summary>Initializes a new instance of the ImageSelection class and sets the Transformation parameters</summary>
            <param name="transformation">An ImageTransformation filter.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.#ctor(CodeCarvings.Piczard.ImageTransformation,CodeCarvings.Piczard.ImageCrop)">
            <summary>Initializes a new instance of the ImageSelection class and sets the Transformation and the Crop parameters.</summary>
            <param name="transformation">An ImageTransformation filter.</param>
            <param name="crop">An ImageCrop filter.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.CalculateCropRectangle">
            <summary>Calculates the Crop Rectangle (in case its value is null).</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.CalculateCropRectangle(System.Drawing.Size,System.Single,CodeCarvings.Piczard.CropConstraint)">
            <summary>Calculates the crop Rectangle (in case its value is null) according to the provided CropConstraint settings and using the specified resolution (DPI).</summary>
            <remarks>If the value of the Crop.Rectangle property is null then this method changes its value. If the value of the Crop.Rectangle property is not null then this method do nothing.</remarks>
            <param name="sourceImageSize">The Size of the source image expressed in pixels.</param>
            <param name="outputResolution">The output image resolution (DPI).</param>
            <param name="cropConstraint">An (optional) CropConstraint filter that defines the constraints to use to calculate the Rectangle.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.CalculateCropRectangle(System.Drawing.Size,CodeCarvings.Piczard.CropConstraint)">
            <summary>Calculates the crop Rectangle (in case its value is null) according to the provided CropConstraint settings and using the default resolution (96 DPI).</summary>
            <remarks>If the value of the Crop.Rectangle property is null then this method changes its value. If the value of the Crop.Rectangle property is not null then this method do nothing.</remarks>
            <param name="sourceImageSize">The Size of the source image expressed in pixels.</param>
            <param name="cropConstraint">An (optional) CropConstraint filter that defines the constraints to use to calculate the Rectangle.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.CalculateCropRectangle(System.Drawing.Size,System.Single)">
            <summary>Calculates the crop Rectangle (in case its value is null) using the specified resolution (DPI).</summary>
            <remarks>If the value of the Crop.Rectangle property is null then this method changes its value. If the value of the Crop.Rectangle property is not null then this method do nothing.</remarks>
            <param name="sourceImageSize">The Size of the source image expressed in pixels.</param>
            <param name="outputResolution">The output image resolution (DPI).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.CalculateCropRectangle(System.Drawing.Size)">
            <summary>Calculates the crop Rectangle (in case its value is null) using the default resolution (96 DPI).</summary>
            <remarks>If the value of the Crop.Rectangle property is null then this method changes its value. If the value of the Crop.Rectangle property is not null then this method do nothing.</remarks>
            <param name="sourceImageSize">The Size of the source image expressed in pixels.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.Clone">
            <summary>Creates a copy of the ImageSelection filter.</summary>
            <returns>A copy of the ImageSelection filter.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.FromJSON">
            <summary>Deserializes a new instance of the ImageSelection class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the ImageSelection class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.FromJSON(System.String)">
            <summary>Deserializes a new instance of the ImageSelection class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.GetIsNeutral(System.Drawing.Size)">
            <summary>Gets a value indicating whether the ImageProcessingFilter is neutral (does not alter source images having the specified size).</summary>
            <returns>true, if the ImageProcessingFilter does not alter source images having the specified size; otherwise, false.</returns>
            <param name="imageSize">The size of the source image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.GetSourceRectangle(System.Drawing.Size)">
            <summary>Gets the coordinates (X/Y) and the size (Width/Height) of the selected portion of source image.</summary>
            <returns>The ImageCrop.Rectangle recalculated so that it relates to the source image before the Transformation filter is applied. If the ImageCrop.Rectangle is null, then this method returns a new Rectangle having coordinates X=0, Y=0 and the same size of the source image.</returns>
            <param name="imageSize">The Size of the source image expressed in pixels.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.Validate">
            <summary>Validates the current ImageSelection filter to ensure that all the parameters are correctly configured (e.g. the Crop.Rectangle.Width is not higher than CoreSettings.Drawing.MaxImageSize.Width).</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.Validate(System.Drawing.Size,System.Boolean)">
            <summary>Validates the current ImageSelection filter to ensure that all the parameters are correctly configured (e.g. the Crop.Rectangle.Width is not higher than CoreSettings.Drawing.MaxImageSize.Width); the provided source image Size is used to validate the Transformation parameters; if the "throwException" parameter is true then an Exception is thrown if the ImageSelection is not valid.</summary>
            <returns>true if the ImageSelection filter is valid; otherwise, false.</returns>
            <param name="sourceImageSize">The Size of the source image expressed in pixels.</param>
            <param name="throwException">If true, an exception is thrown if the ImageSelection filter is not valid.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.Validate(System.Drawing.Size)">
            <summary>Validates the current ImageSelection filter to ensure that all the parameters are correctly configured (e.g. the Crop.Rectangle.Width is not higher than CoreSettings.Drawing.MaxImageSize.Width); the provided source image Size is used to validate the Transformation parameters.</summary>
            <returns>true if the ImageSelection filter is valid; otherwise, false.</returns>
            <param name="sourceImageSize">The Size of the source image expressed in pixels.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.Validate(System.Boolean)">
            <summary>Validates the current ImageSelection filter to ensure that all the parameters are correctly configured (e.g. the Crop.Rectangle.Width is not higher than CoreSettings.Drawing.MaxImageSize.Width); if the "throwException" parameter is true then an Exception is thrown if the ImageSelection is not valid.</summary>
            <returns>    true if the ImageSelection filter is valid; otherwise,     false.</returns>
            <param name="throwException">    If true, an exception is thrown if the ImageSelection     filter is not valid.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageSelection.Validate">
            <summary>Validates the current ImageSelection filter to ensure that all the parameters are correctly configured (e.g. the Crop.Rectangle.Width is not higher than CoreSettings.Drawing.MaxImageSize.Width).</summary>
            <returns>    true if the ImageSelection filter is valid; otherwise,     false.</returns>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageSelection.Crop">
            <summary>Gets or sets the crop parameters.</summary>
            <remarks>The ImageCrop filter is always applied after the ImageTransformation filter.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageSelection.Transformation">
            <summary>Gets or sets the transformation parameters.</summary>
            <remarks>The ImageTransformation filter is always applied before the ImageCrop filter.</remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.ImageTransformation">
            <summary>Represents an ImageProcessingFilter that allows to Resize, Rotate and/or Flip an image. This class cannot be inherited.</summary>
            <remarks>    For more information please see:                       Manual Image         Resize         Rotate &amp;         Flip An Image     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.#ctor">
            <summary>Initializes a new instance of the ImageTransformation class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.#ctor">
            <summary>Initializes a new instance of the ImageTransformation class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.#ctor(System.Single)">
            <summary>Initializes a new instance of the ImageTransformation class and sets the ResizeFactor.</summary>
            <param name="resizeFactor">    The resize percentage to apply to the source image (100 =     no resize).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.#ctor(System.Single,System.Single)">
            <summary>Initializes a new instance of the ImageTransformation class and sets the ResizeFactor and the RotationAngle.</summary>
            <param name="resizeFactor">    The resize percentage to apply to the source image (100 =     no resize).</param>
            <param name="rotationAngle">The rotation angle to apply to the source image (the allowed values are: 0, 90, 180 and 270 degrees).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.#ctor(System.Single,System.Single,System.Boolean,System.Boolean)">
            <summary>Initializes a new instance of the ImageTransformation class and sets all the properties explicitly.</summary>
            <param name="resizeFactor">    The resize percentage to apply to the source image (100 =     no resize).</param>
            <param name="rotationAngle">The rotation angle to apply to the source image (the allowed values are: 0, 90, 180 and 270 degrees).</param>
            <param name="flipH">If true then the image is horizontally flipped (left &lt;-&gt; right).</param>
            <param name="flipV">If true then the image is vertically flipped (top &lt;-&gt; bottom).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.Clone">
            <summary>Creates a copy of the ImageTransformation filter.</summary>
            <returns>A copy of the ImageTransformation filter.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.FromJSON">
            <summary>Deserializes a new instance of the ImageTransformation class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the ImageTransformation class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.FromJSON(System.String)">
            <summary>Deserializes a new instance of the ImageTransformation class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.GetAdjustedPoint">
            <summary>Recalculates a Point (X/Y coordinates) by applying the specified parameters of the current ImageTransformation object.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.GetAdjustedPoint(System.Drawing.Point,System.Boolean,System.Drawing.Size,System.Boolean,System.Boolean)">
            <summary>Recalculates a Point (X/Y coordinates) by applying the specified parameters of the current ImageTransformation object;</summary>
            <returns>The recalculated Point.</returns>
            <param name="point">The Point to recalculate.</param>
            <param name="backward">If true then parameters are applied backwards (e.g. if RotationAngle is 90 clockwise, then original Point is rotated of 90 degrees counterclockwise).</param>
            <param name="imageSize">The Size of the source image expressed in pixels.</param>
            <param name="applyResizeFactor">If true then consider ResizeFactor during the recalculation of the Point.</param>
            <param name="applyRotateFlip">If true then consider RotationAngle, FlipH and FlipV during the recalculation of the Point.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.GetAdjustedPoint(System.Drawing.Point,System.Boolean,System.Drawing.Size)">
            <summary>Recalculates a Point (X/Y coordinates) by applying all the parameters of the current ImageTransformation object.</summary>
            <returns>The recalculated Point.</returns>
            <param name="point">The Point to recalculate.</param>
            <param name="backward">If true then parameters are applied backwards (e.g. if RotationAngle is 90 clockwise, then original Point is rotated of 90 degrees counterclockwise).</param>
            <param name="imageSize">The Size of the source image expressed in pixels.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.GetAdjustedRectangle">
            <summary>Recalculates a Rectangle (X/Y coordinates and Size) by applying the specified parameters of the current ImageTransformation object.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.GetAdjustedRectangle(System.Drawing.Rectangle,System.Boolean,System.Drawing.Size,System.Boolean,System.Boolean)">
            <summary>Recalculates a Rectangle (X/Y coordinates and Size) by applying the specified parameters of the current ImageTransformation object.</summary>
            <returns>The recalculated Rectangle.</returns>
            <param name="rectangle">The Rectangle to recalculate.</param>
            <param name="backward">If true then parameters are applied backwards (e.g. if RotationAngle is 90 clockwise, then original Rectangle is rotated of 90 degrees counterclockwise).</param>
            <param name="imageSize">The Size of the source image expressed in pixels.</param>
            <param name="applyResizeFactor">If true then consider ResizeFactor during the recalculation of the Rectangle.</param>
            <param name="applyRotateFlip">If true then consider RotationAngle, FlipH and FlipV during the recalculation of the Rectangle.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.GetAdjustedRectangle(System.Drawing.Rectangle,System.Boolean,System.Drawing.Size)">
            <summary>Recalculates a Rectangle (X/Y coordinates and Size) by applying all the parameters of the current ImageTransformation object.</summary>
            <returns>The recalculated Rectangle.</returns>
            <param name="rectangle">The Rectangle to recalculate.</param>
            <param name="backward">If true then parameters are applied backwards (e.g. if RotationAngle is 90 clockwise, then original Rectangle is rotated of 90 degrees counterclockwise).</param>
            <param name="imageSize">The Size of the source image expressed in pixels.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.GetAdjustedSize">
            <summary>Recalculates a Size (Width/Height) by applying the specified parameters of the current ImageTransformation object.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.GetAdjustedSize(System.Drawing.Size,System.Boolean,System.Boolean,System.Boolean)">
            <summary>Recalculates a Size (Width/Height) by applying the specified parameters of the current ImageTransformation object.</summary>
            <returns>The recalculated Size.</returns>
            <param name="size">The Size to recalculate.</param>
            <param name="backward">If true then parameters are applied backwards (e.g. if RotationAngle is 90 clockwise, then original Size is rotated of 90 degrees counterclockwise).</param>
            <param name="applyResizeFactor">If true then consider ResizeFactor during the recalculation of the Size.</param>
            <param name="applyRotateFlip">If true then consider RotationAngle, FlipH and FlipV during the recalculation of the Size.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.GetAdjustedSize(System.Drawing.Size,System.Boolean)">
            <summary>Recalculates a Size (Width/Height) by applying all the parameters of the current ImageTransformation object.</summary>
            <returns>The recalculated Size.</returns>
            <param name="size">The Size to recalculate.</param>
            <param name="backward">If true then parameters are applied backwards (e.g. if RotationAngle is 90 clockwise, then original Size is rotated of 90 degrees counterclockwise).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.GetResizedValue">
            <summary>Applies the current ResizeFactor to the specified value.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.GetResizedValue(System.Single,System.Boolean)">
            <summary>Applies the current ResizeFactor to the specified value.</summary>
            <returns>The recalculated value.</returns>
            <param name="value">The value to recalculate.</param>
            <param name="backward">If true then ResizeFactor is applied backwards (e.g. if ResizeFactor is 50, then original value is multiplied by 2).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.GetResizedValue(System.Int32,System.Boolean)">
            <summary>Applies the current ResizeFactor to the specified value.</summary>
            <returns>The recalculated value.</returns>
            <param name="value">The value to recalculate.</param>
            <param name="backward">If true then ResizeFactor is applied backwards (e.g. if ResizeFactor is 50, then original value is multiplied by 2).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.Validate">
            <summary>Validates the current ImageTransformation filter to ensure that all the parameters are correctly configured (e.g. the image Size - after the ImageTransformation parameters are applied - is not higher than CoreSettings.Drawing.MaxImageSize).</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.Validate(System.Drawing.Size,System.Boolean)">
            <summary>Validates the current ImageTransformation filter to ensure that all the parameters are correctly configured (e.g. the image Size - after the ImageTransformation parameters are applied - is not higher than CoreSettings.Drawing.MaxImageSize); the provided source image Size is used to validate the Transformation parameters; if the "throwException" parameter is true then an Exception is thrown if the ImageTransformation is not valid.</summary>
            <returns>true if the ImageTransformation filter is valid; otherwise, false.</returns>
            <param name="sourceImageSize">The Size of the source image expressed in pixels.</param>
            <param name="throwException">If true, an exception is thrown if the ImageTransformation filter is not valid.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.Validate(System.Drawing.Size)">
            <summary>Validates the current ImageTransformation filter to ensure that all the parameters are correctly configured (e.g. the image Size - after the ImageTransformation parameters are applied - is not higher than CoreSettings.Drawing.MaxImageSize); the provided source image Size is used to validate the Transformation parameters.</summary>
            <returns>true if the ImageTransformation filter is valid; otherwise, false.</returns>
            <param name="sourceImageSize">The Size of the source image expressed in pixels.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.Validate(System.Boolean)">
            <summary>Validates the current ImageTransformation filter to ensure that all the parameters are correctly configured (e.g. the image Size - after the ImageTransformation parameters are applied - is not higher than CoreSettings.Drawing.MaxImageSize); if the "throwException" parameter is true then an Exception is thrown if the ImageTransformation is not valid.</summary>
            <returns>true if the ImageTransformation filter is valid; otherwise, false.</returns>
            <param name="throwException">If true, an exception is thrown if the ImageTransformation filter is not valid.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.Validate">
            <summary>Validates the current ImageTransformation filter to ensure that all the parameters are correctly configured (e.g. the image Size - after the ImageTransformation parameters are applied - is not higher than CoreSettings.Drawing.MaxImageSize).</summary>
            <returns>true if the ImageTransformation filter is valid; otherwise, false.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.ValidateResizeFactor">
            <summary>Determines if the provided value is a valid resize factor.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.ValidateResizeFactor(System.Single)">
            <summary>Determines if the provided value is a valid resize factor.</summary>
            <returns>true if the value is a valid resize factor; otherwise, false.</returns>
            <param name="resizeFactor">The value to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.ValidateResizeFactor(System.Single,System.Boolean)">
            <summary>Determines if the provided value is a valid resize factor; if the "throwException" parameter is true then an Exception is thrown if the value is not valid.</summary>
            <returns>true if the value is a valid resize factor; otherwise, false.</returns>
            <param name="resizeFactor">The value to validate.</param>
            <param name="throwException">If true, an exception is thrown if the value is not valid.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.ValidateRotationAngle">
            <summary>Determines if the provided value is a valid rotation angle.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.ValidateRotationAngle(System.Single)">
            <summary>Determines if the provided value is a valid rotation angle.</summary>
            <returns>true if the value is a valid rotation angle; otherwise, false.</returns>
            <param name="rotationAngle">The value to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ImageTransformation.ValidateRotationAngle(System.Single,System.Boolean)">
            <summary>Determines if the provided value is a valid rotation angle; if the "throwException" parameter is true then an Exception is thrown if the value is not valid.</summary>
            <returns>true if the value is a valid rotation angle; otherwise, false.</returns>
            <param name="rotationAngle">The value to validate.</param>
            <param name="throwException">If true, an exception is thrown if the value is not valid.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageTransformation.FlipH">
            <summary>Gets or sets a value indicating whether the mage has to be horizontally flipped (left &lt;-&gt; right).</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageTransformation.FlipHorizontal">
            <summary>Initializes a new instance of the ImageTransformation class that allows to horizontally flip an image.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageTransformation.FlipHorizontalAndVertical">
            <summary>Initializes a new instance of the ImageTransformation class that allows to horizontally and vertically flip an image.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageTransformation.FlipV">
            <summary>Gets or sets a value indicating whether the mage has to be vertically flipped (top &lt;-&gt; bottom).</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageTransformation.FlipVertical">
            <summary>Initializes a new instance of the ImageTransformation class that allows to vertically flip an image.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageTransformation.IsNeutral">
            <summary>Gets a value indicating whether the ImageProcessingFilter is neutral (does not alter source images).</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageTransformation.ResizeFactor">
            <summary>Gets or sets the resize percentage to apply to the image (100 = no resize).</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageTransformation.Rotate180">
            <summary>Initializes a new instance of the ImageTransformation class that allows to rotate by 180° clockwise an image.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageTransformation.Rotate270">
            <summary>Initializes a new instance of the ImageTransformation class that allows to rotate by 270° clockwise an image.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageTransformation.Rotate90">
            <summary>Initializes a new instance of the ImageTransformation class that allows to rotate by 90° clockwise an image.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.ImageTransformation.RotationAngle">
            <summary>Gets or sets the rotation angle (degrees - clockwise) to apply to the image.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.IncompatiblePiczardVersionException">
            <summary>The exception that is thrown when an object (e.g. a Plugin) is not compatible with the version of Piczard in use. This class cannot be inherited.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.IncompatiblePiczardVersionException.#ctor">
            <summary>Initializes a new instance of the IncompatiblePiczardVersionException class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.IncompatiblePiczardVersionException.#ctor">
            <summary>Initializes a new instance of the IncompatiblePiczardVersionException class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.IncompatiblePiczardVersionException.#ctor(System.String)">
            <summary>Initializes a new instance of the IncompatiblePiczardVersionException class with a specified error message.</summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.IncompatiblePiczardVersionException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the IncompatiblePiczardVersionException class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.InvalidImageSizeException">
            <summary>The exception that is thrown when Size (width and/or height - e.g.  System.Drawing.Image.Size) is higher than CoreSettings.Drawing.MaxImageSize. This class cannot be inherited.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.InvalidImageSizeException.#ctor">
            <summary>Initializes a new instance of the InvalidImageSizeException class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.InvalidImageSizeException.#ctor">
            <summary>Initializes a new instance of the InvalidImageSizeException class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.InvalidImageSizeException.#ctor(System.String)">
            <summary>Initializes a new instance of the InvalidImageSizeException class with a specified error message.</summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.InvalidImageSizeException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the InvalidImageSizeException class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.InvalidSourceException">
            <summary>The exception that is thrown when Piczard is unable to load an image from an object passed as source (e.g. ImageProcessingFilter .GetProcessedImage). This class cannot be inherited.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.InvalidSourceException.#ctor">
            <summary>Initializes a new instance of the InvalidSourceException class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.InvalidSourceException.#ctor">
            <summary>Initializes a new instance of the InvalidSourceException class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.InvalidSourceException.#ctor(System.String)">
            <summary>Initializes a new instance of the InvalidSourceException class with a specified error message.</summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.InvalidSourceException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the InvalidSourceException class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.JpegFormatEncoderParams">
            <summary>Represents a FormatEncoderParams class that can save images in the Jpeg format.</summary>
            <remarks>For more information about  FormatEncoderParams please see: How Piczard Works (paragraph: "Customize the image format of output images").</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.JpegFormatEncoderParams.#ctor">
            <summary>Initializes a new instance of the JpegFormatEncoderParams class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.JpegFormatEncoderParams.#ctor">
            <summary>Initializes a new instance of the JpegFormatEncoderParams class and sets the default Jpeg Quality (CoreSettings.Drawing.DefaultJpegQuality).</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.JpegFormatEncoderParams.#ctor(System.Int32)">
            <summary>Initializes a new instance of the JpegFormatEncoderParams class and sets the specified Jpeg Quality.</summary>
            <param name="quality">The quality used to compress a Jpeg image; valid values are between 1 (min quality / file size) and 100 (max quality / file size).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.JpegFormatEncoderParams.Clone">
            <summary>Creates a copy of the JpegFormatEncoderParams.</summary>
            <returns>A copy of the JpegFormatEncoderParams.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.JpegFormatEncoderParams.FromJSON">
            <summary>Deserializes a new instance of the JpegFormatEncoderParams class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.JpegFormatEncoderParams.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the JpegFormatEncoderParams class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.JpegFormatEncoderParams.FromJSON(System.String)">
            <summary>Deserializes a new instance of the JpegFormatEncoderParams class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.JpegFormatEncoderParams.ValidateQuality">
            <summary>Determines if the provided value is a valid Jpeg Quality factor.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.JpegFormatEncoderParams.ValidateQuality(System.Int32)">
            <summary>Determines if the provided value is a valid Jpeg quality factor.</summary>
            <returns>true if the value is a valid Jpeg quality factor; otherwise, false.</returns>
            <param name="quality">The value to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.JpegFormatEncoderParams.ValidateQuality(System.Int32,System.Boolean)">
            <summary>Determines if the provided value is a valid Jpeg quality factor; if the "throwException" parameter is true then an Exception is thrown if the value is not valid.</summary>
            <returns>true if the value is a valid Jpeg quality factor; otherwise, false.</returns>
            <param name="quality">The value to validate.</param>
            <param name="throwException">If true, an exception is thrown if the value is not valid.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.JpegFormatEncoderParams.Quality">
            <summary>Gets or sets the Jpeg quality.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.LoadedImage">
            <summary>Represents an Image object loaded by Piczard.</summary>
            <remarks>    The class encapsulates both the Image and the source from which the Image is loaded (e.g. a Stream object).     The class is useful because, as indicated in the MSDN     documentation (http://msdn.microsoft.com/en-us/library/93z9ee4x.aspx),     "You must keep the stream open for the lifetime of the     Image".     When the Dispose method of a LoadedImage instance is     invoked, then both the Image and its source are automatically     disposed.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.LoadedImage.#ctor">
            <summary>Initializes a new instance of the LoadedImage class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.LoadedImage.#ctor(System.Drawing.Image)">
            <summary>Initializes a new instance of the LoadedImage class by encapsulating an Image object and sets the FormatId property to the Guid of the  System.Drawing.Image.RawFormat.</summary>
            <param name="image">The Image encapsulated in the LoadedImage instance.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.LoadedImage.#ctor(System.Drawing.Image,System.Guid)">
            <summary>Initializes a new instance of the LoadedImage class by encapsulating an Image object and sets the specified FormatId.</summary>
            <param name="image">The Image encapsulated in the LoadedImage instance.</param>
            <param name="imageFormatId">The Guid that identifies the image format.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.LoadedImage.#ctor(System.Drawing.Image,System.Guid,System.Object)">
            <summary>Initializes a new instance of the LoadedImage class by encapsulating an Image object and sets the specified FormatId; the provided object is associated to the LoadedImage instance as DisposableSource.</summary>
            <param name="image">The Image encapsulated in the LoadedImage instance.</param>
            <param name="imageFormatId">The Guid that identifies the image format.</param>
            <param name="disposableSource">The object from which the Image has been loaded.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.LoadedImage.#ctor(System.Drawing.Image,System.Object)">
            <summary>Initializes a new instance of the LoadedImage class by encapsulating an Image object and sets the FormatId property to the Guid of the  System.Drawing.Image.RawFormat; the provided object is associated to the LoadedImage instance as DisposableSource.</summary>
            <param name="image">The Image encapsulated in the LoadedImage instance.</param>
            <param name="disposableSource">The object from which the Image has been loaded.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.LoadedImage.Dispose">
            <summary>Releases all resources used by this LoadedImage object.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.LoadedImage.DisposableSource">
            <summary>Gets the object from which the Image has been loaded.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.LoadedImage.DisposeSource">
            <summary>Gets or sets a value indicating whether the DisposableSource object has to be automatically disposed when the LoadedImage.Dispose method is invoked..</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.LoadedImage.FormatId">
            <summary>Gets the format of the Image.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.LoadedImage.Image">
            <summary>Gets the Image encapsulated in this LoadedImage instance.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.LoadedImage.Resolution">
            <summary>Gets the resolution, in pixels per inch, of the Image.</summary>
            <remarks>Piczard takes into consideration only the  VerticalResolution of the Image, not the  HorizontalResolution.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.LoadedImage.Size">
            <summary>Gets the Size of the Image.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Measure">
            <summary>Represents a measurement of length - absolute (AbsMeasure, e.g. "50 pixels", "2 inches", etc...) or relative to another measurement (RelMeasure, e.g. "200").</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Measure.Clone">
            <summary>Creates a copy of the Measure object.</summary>
            <returns>A copy of the Measure object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Measure.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Measure.FromJSON">
            <summary>Deserializes a new instance of the Measure Class class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Measure.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the Measure Class class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to deserialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Measure.FromJSON(System.String)">
            <summary>Deserializes a new instance of the Measure Class class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to deserialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Measure.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Measure.GetRoundedValue(System.Single,CodeCarvings.Piczard.GfxUnit,CodeCarvings.Piczard.GfxUnit,System.Single)">
            <summary>Computes the absolute value of the Measure, converts it to the specified graphics unit and then round it to the nearest integer.</summary>
            <returns>The calculated measurement converted to the chosen graphics unit and then rounded it to the nearest integer.</returns>
            <param name="baseValue">The base value to use when the Measure is relative (RelMeasure). If the Measure is absolute (AbsMeasure) then this parameter is ignored.</param>
            <param name="baseUnit">The graphics unit in which the base value is expressed. If the Measure is absolute (AbsMeasure) then this parameter is ignored.</param>
            <param name="unit">The graphics unit in which the value must be converted.</param>
            <param name="resolution">The resolution expressed in DPI (Dots Per Inch).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Measure.GetValue(System.Single,CodeCarvings.Piczard.GfxUnit,CodeCarvings.Piczard.GfxUnit,System.Single)">
            <summary>Computes the absolute value of the Measure and converts it to the specified graphics unit.</summary>
            <returns>The calculated measurement converted to the chosen graphics unit.</returns>
            <param name="baseValue">The base value to use when the Measure is relative (RelMeasure). If the Measure is absolute (AbsMeasure) then this parameter is ignored.</param>
            <param name="baseUnit">The graphics unit in which the base value is expressed. If the Measure is absolute (AbsMeasure) then this parameter is ignored.</param>
            <param name="unit">The graphics unit in which the value must be converted.</param>
            <param name="resolution">The resolution expressed in DPI (Dots Per Inch).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Measure.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:CodeCarvings.Piczard.NoopFilter">
            <summary>Represents an ImageProcessingFilter that perform no operation. This class cannot be inherited.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.NoopFilter.#ctor">
            <summary>Initializes a new instance of the NoopFilter class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.NoopFilter.Clone">
            <summary>Creates a copy of the NoopFilter.</summary>
            <returns>A copy of the NoopFilter.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.NoopFilter.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.NoopFilter.FromJSON">
            <summary>Deserializes a new instance of the NoopFilter class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.NoopFilter.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the NoopFilter class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.NoopFilter.FromJSON(System.String)">
            <summary>Deserializes a new instance of the NoopFilter class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.NoopFilter.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="P:CodeCarvings.Piczard.NoopFilter.Instance">
            <summary>Gets an instance of the NoopFilter class.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.PngFormatEncoderParams">
            <summary>Represents a FormatEncoderParams class that can save images in the Png format.</summary>
            <remarks>For more information about  FormatEncoderParams please see: How Piczard Works (paragraph: "Customize the image format of output images").</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.PngFormatEncoderParams.#ctor">
            <summary>Initializes a new instance of the PngFormatEncoderParams class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.PngFormatEncoderParams.#ctor">
            <summary>Initializes a new instance of the PngFormatEncoderParams class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.PngFormatEncoderParams.#ctor(System.Boolean)">
            <summary>Initializes a new instance of the PngFormatEncoderParams class and sets a value indicating whether to use palette-indexed colors.</summary>
            <param name="convertToIndexed">true to use palette-indexed colors; otherwise, false.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.PngFormatEncoderParams.Clone">
            <summary>Creates a copy of the PngFormatEncoderParams.</summary>
            <returns>A copy of the PngFormatEncoderParams.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.PngFormatEncoderParams.FromJSON">
            <summary>Deserializes a new instance of the PngFormatEncoderParams class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.PngFormatEncoderParams.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the PngFormatEncoderParams class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.PngFormatEncoderParams.FromJSON(System.String)">
            <summary>Deserializes a new instance of the PngFormatEncoderParams class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.PngFormatEncoderParams.ConvertToIndexed">
            <summary>Gets or sets a value indicating whether to use palette-indexed colors.</summary>
            <remarks>    If ConvertToIndexed is true then the image is quantized     before saving.     The specified maximum number of colors is passed to the     quantization algorithms.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.PngFormatEncoderParams.MaxColors">
            <summary>Gets or sets the maximum number of colors the quantized image can contain.</summary>
            <remarks>This property is ignored if ConvertToIndexed is set to false.</remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.RelMeasure">
            <summary>Represents a relative measurement of length (respect to another measurement, e.g. "200").</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.RelMeasure.#ctor">
            <summary>Initializes a new instance of the RelMeasure class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.RelMeasure.#ctor">
            <summary>Initializes a new instance of the RelMeasure class and sets its value to 0.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.RelMeasure.#ctor(System.Single)">
            <summary>Initializes a new instance of the RelMeasure class and sets its value.</summary>
            <param name="value">The Value of the measurement.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.RelMeasure.Clone">
            <summary>Creates a copy of the RelMeasure object.</summary>
            <returns>A copy of the RelMeasure object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.RelMeasure.FromJSON">
            <summary>Deserializes a new instance of the RelMeasure class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.RelMeasure.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the RelMeasure class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to deserialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.RelMeasure.FromJSON(System.String)">
            <summary>Deserializes a new instance of the RelMeasure class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to deserialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.RelMeasure.GetRoundedValue(System.Single,CodeCarvings.Piczard.GfxUnit,CodeCarvings.Piczard.GfxUnit,System.Single)">
            <summary>Computes the absolute value of the RelMeasure, converts it to the specified graphics unit and then round it to the nearest integer.</summary>
            <returns>The calculated measurement converted to the chosen graphics unit and then rounded it to the nearest integer.</returns>
            <param name="baseValue">The base value to which the percent rate of the Value is applied.</param>
            <param name="baseUnit">The graphics unit in which the base value is expressed.</param>
            <param name="unit">The graphics unit in which the value must be converted.</param>
            <param name="resolution">The resolution expressed in DPI (Dots Per Inch).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.RelMeasure.GetValue">
            <summary>Computes the absolute value of the RelMeasure.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.RelMeasure.GetValue(System.Single)">
            <summary>Computes the absolute value of the RelMeasure.</summary>
            <returns>The calculated measurement.</returns>
            <param name="baseValue">The base value to which the percent rate of the Value is applied.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.RelMeasure.GetValue(System.Single,CodeCarvings.Piczard.GfxUnit,CodeCarvings.Piczard.GfxUnit,System.Single)">
            <summary>Computes the absolute value of the RelMeasure and converts it to the specified graphics unit.</summary>
            <returns>The calculated measurement converted to the chosen graphics unit.</returns>
            <param name="baseValue">The base value to which the percent rate of the Value is applied.</param>
            <param name="baseUnit">The graphics unit in which the base value is expressed.</param>
            <param name="unit">The graphics unit in which the value must be converted.</param>
            <param name="resolution">The resolution expressed in DPI (Dots Per Inch).</param>
        </member>
        <member name="P:CodeCarvings.Piczard.RelMeasure.Value">
            <summary>Gets ors sets the value of the RelMeasure expressed in percentage.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.ResizeConstraint">
            <summary>Represents an ImageProcessingFilter that allows to automatically resize an image.</summary>
            <remarks>For more information please see: Automatic Image Resize.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.ResizeConstraint.Clone">
            <summary>Creates a copy of the ResizeConstraint filter.</summary>
            <returns>A copy of the ResizeConstraint filter.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.ResizeConstraint.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ResizeConstraint.FromJSON">
            <summary>Deserializes a new instance of the ResizeConstraint class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.ResizeConstraint.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the ResizeConstraint class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ResizeConstraint.FromJSON(System.String)">
            <summary>Deserializes a new instance of the ResizeConstraint class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ResizeConstraint.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="T:CodeCarvings.Piczard.ScaledResizeConstraint">
            <summary>Represents a ResizeConstraint that allows to proportionally resize an image maintaining unchanged its original aspect ratio. This class cannot be inherited.</summary>
            <remarks>    This ResizeConstraint creates images of variable     size.     The source image is proportionally scaled so it can be entirely     contained within a fixed size rectangle.     For more information please see: Automatic Image Resize     (paragraph: "Scaled resize constraint").</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.ScaledResizeConstraint.#ctor">
            <summary>Initializes a new instance of the ScaledResizeConstraint class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ScaledResizeConstraint.#ctor(CodeCarvings.Piczard.GfxUnit,System.Single,System.Single)">
            <summary>Initializes a new instance of the ScaledResizeConstraint class.</summary>
            <param name="unit">The graphics unit in which the maximum image size is expressed.</param>
            <param name="maxWidth">The width of the rectangle in which the image must stay.</param>
            <param name="maxHeight">The height of the rectangle in which the image must stay.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ScaledResizeConstraint.#ctor(CodeCarvings.Piczard.GfxUnit,System.Drawing.SizeF)">
            <summary>Initializes a new instance of the ScaledResizeConstraint class.</summary>
            <param name="unit">The graphics unit in which the maximum image size is expressed.</param>
            <param name="maxSize">The size of the rectangle in which the image must stay.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ScaledResizeConstraint.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance of the ScaledResizeConstraint class; the default value is used for the Unit property (Pixel).</summary>
            <param name="maxWidth">The width of the rectangle in which the image must stay.</param>
            <param name="maxHeight">The height of the rectangle in which the image must stay.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ScaledResizeConstraint.Clone">
            <summary>Creates a copy of the ScaledResizeConstraint filter.</summary>
            <returns>A copy of the ScaledResizeConstraint filter.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.ScaledResizeConstraint.FromJSON">
            <summary>Deserializes a new instance of the ScaledResizeConstraint class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.ScaledResizeConstraint.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the ScaledResizeConstraint class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ScaledResizeConstraint.FromJSON(System.String)">
            <summary>Deserializes a new instance of the ScaledResizeConstraint class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ScaledResizeConstraint.GetMaxHeight">
            <summary>Initializes a new instance of the ScaledResizeConstraint class that allows to generate an image with a fixed height and a variable width.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ScaledResizeConstraint.GetMaxHeight(System.Int32)">
            <summary>Initializes a new instance of the ScaledResizeConstraint class that allows to generate an image with a fixed height and a variable width; the size is expressed in pixels.</summary>
            <returns>The instance of the ScaledResizeConstraint class.</returns>
            <remarks>    If you want to obtain an image with a fixed height     and a variable width, then you can set a very high value     for the MaxSize.Width property.     The GetMaxWidth method allow to get an instance of the     ScaledResizeConstraint class with the MaxSize.Width property     set to the max value allowed by Piczard     (Core.Drawing.MaxImageSize.Width).</remarks>
            <param name="maxHeight">The height of the rectangle in which the image must stay.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ScaledResizeConstraint.GetMaxHeight(CodeCarvings.Piczard.GfxUnit,System.Single,System.Single)">
            <summary>Initializes a new instance of the ScaledResizeConstraint class that allows to generate an image with a fixed height and a variable width; the size is expressed in the specified graphics unit.</summary>
            <returns>The instance of the ScaledResizeConstraint class.</returns>
            <remarks>    If you want to obtain an image with a fixed height     and a variable width, then you can set a very high value     for the MaxSize.Width property.     The GetMaxWidth method allow to get an instance of the     ScaledResizeConstraint class with the MaxSize.Width property     set to the max value allowed by Piczard     (Core.Drawing.MaxImageSize.Width).</remarks>
            <param name="unit">The graphics unit in which the maximum image size is expressed.</param>
            <param name="maxHeight">The height of the rectangle in which the image must stay.</param>
            <param name="resolution">The output resolution (DPI) required in order to translate the Core.Drawing.MaxImageSize.Width value (expressed in pixels) to the specified graphics unit.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ScaledResizeConstraint.GetMaxWidth">
            <summary>Initializes a new instance of the ScaledResizeConstraint class that allows to generate an image with a fixed width and a variable height.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ScaledResizeConstraint.GetMaxWidth(System.Int32)">
            <summary>Initializes a new instance of the ScaledResizeConstraint class that allows to generate an image with a fixed width and a variable height; the size is expressed in pixels.</summary>
            <returns>The instance of the ScaledResizeConstraint class.</returns>
            <remarks>         If you want to obtain an image with a fixed width     and a variable height, then you can set a very high     value for the MaxSize.Height property.     The GetMaxWidth method allow to get an instance of the     ScaledResizeConstraint class with the MaxSize.Height property     set to the max value allowed by Piczard     (Core.Drawing.MaxImageSize.Height).</remarks>
            <param name="maxWidth">The width of the rectangle in which the image must stay.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ScaledResizeConstraint.GetMaxWidth(CodeCarvings.Piczard.GfxUnit,System.Single,System.Single)">
            <summary>Initializes a new instance of the ScaledResizeConstraint class that allows to generate an image with a fixed width and a variable height; the size is expressed in the specified graphics unit.</summary>
            <returns>The instance of the ScaledResizeConstraint class.</returns>
            <remarks>    If you want to obtain an image with a fixed width     and a variable height, then you can set a very high     value for the MaxSize.Height property.     The GetMaxWidth method allow to get an instance of the     ScaledResizeConstraint class with the MaxSize.Height property     set to the max value allowed by Piczard     (Core.Drawing.MaxImageSize.Height).</remarks>
            <param name="unit">The graphics unit in which the maximum image size is expressed.</param>
            <param name="maxWidth">The width of the rectangle in which the image must stay.</param>
            <param name="resolution">The output resolution (DPI) required in order to translate the Core.Drawing.MaxImageSize.Height value (expressed in pixels) to the specified graphics unit.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ScaledResizeConstraint.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.ScaledResizeConstraint.ValidateMaxSize">
            <summary>Determines if the provided value is a valid maximum image size.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.ScaledResizeConstraint.ValidateMaxSize(System.Drawing.SizeF)">
            <summary>Determines if the provided value is a valid maximum image size.</summary>
            <returns>true if the value is a valid maximum image size; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.ScaledResizeConstraint.ValidateMaxSize(System.Drawing.SizeF,System.Boolean)">
            <summary>Determines if the provided value is a valid maximum image size; if the "throwException" parameter is true then an Exception is thrown if the value is not valid.</summary>
            <returns>true if the value is a valid maximum image size; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
            <param name="throwException">If true, an exception is thrown if the value is not valid.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.ScaledResizeConstraint.EnlargeSmallImages">
            <summary>Gets or sets a value indicating if images that are smaller than the provided MaxSize are resized.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.ScaledResizeConstraint.MaxSize">
            <summary>Gets or sets the size of the rectangle in which the image must stay.</summary>
            <remarks>The value is expressed in the current Unit Property of measure of the ScaledResizeConstraint instance.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.ScaledResizeConstraint.Unit">
            <summary>Gets or sets the graphic unit in which MaxSize is measured.</summary>
        </member>
        <member name="N:CodeCarvings.Piczard.Configuration">
            <summary>The CodeCarvings.Piczard.Configuration namespace contains the types that provide the programming model for handling Piczard configuration data.</summary>
            <remarks>    Please see:                       Core Settings         Web Settings         Example Config         File (Non-Web Project)         Example Config         File (Web Project)     </remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Configuration.CoreSettings">
            <summary>Provides access to the Piczard core settings. This class cannot be inherited.</summary>
            <remarks>    The      CoreSettings class Handles the access to the codeCarvings.piczard/coreSettings section for the current application's     configuration.Please see also:                       Core Settings         Example Config         File (Non-Web Project)         Example Config         File (Web Project)                  WebSettings class     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.CoreSettings.Drawing">
            <summary>Gets the DrawingSettings data for the current application's configuration.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.CoreSettings.ImageArchiver">
            <summary>Gets the ImageArchiverSettings data for the current application's configuration.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.CoreSettings.ImageQuantizer">
            <summary>Gets the ImageQuantizerSettings data for the current application's configuration.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.CoreSettings.Plugins">
            <summary>Gets the PluginSettings data for the current application's configuration.</summary>
            <remarks>    Please see:                       Piczard         Plugins Overview         How To         Register A Plugin         How To         Develop A Custom Plugin     </remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Configuration.CoreSettingsSectionHandler">
            <summary>Handles the access to the codeCarvings.piczard/coreSettings section for the current application's configuration. This class cannot be inherited.</summary>
            <remarks>    For more information about configuring Piczard please     see:                       Core Settings         Example Config         File (Non-Web Project)         Example Config         File (Web Project)     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Configuration.CoreSettingsSectionHandler.#ctor">
            <summary>Initializes a new instance of the CoreSettingsSectionHandler class.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Configuration.DrawingSettings">
            <summary>Encapsulates the drawing settings of Piczard . This class cannot be inherited.</summary>
            <remarks>    For more information about configuring Piczard please     see:                       Core Settings         Example Config         File (Non-Web Project)         Example Config         File (Web Project)     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.DrawingSettings.DefaultImageProcessingFilterDrawMode">
            <summary>Gets the default ImageProcessingFilterDrawMode used by ImageProcessingFilters that implement the IMultiDrawModeImageProcessingFilter interface.</summary>
            <remarks>    Computer graphics is a CPU intensive operation.     In order to process images quickly, sometimes is necessary to     use pointers     or other advanced techniques.     Unfortunately not every environment allow to use these     advanced techniques (for example, ASP.NET Medium Trust does not     permit the use of pointers)     This property allows to configure the default way that     image processing filters (implmenting the     IMultiDrawModeImageProcessingFilter interface) process     images.     For example, if your application runs in an ASP.NET     Medium Trust environment and you receive errors, you can try to     set DefaultImageProcessingFilterDrawMode to     ImageProcessingFilterDrawMode.Slow in the configuration     file.          Please see also:     IMultiDrawModeImageProcessingFilter.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.DrawingSettings.MaxImageSize">
            <summary>Gets the maximum Size (expressed in pixels) of an Image.</summary>
            <remarks>Please note that this values is not the maximum Image Size supported by Windows GDI+ (the graphics library that Piczard rely on). If you want to change this setting, you should configure the new value according to the computer/server resources (e.g. free RAM memory).</remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Configuration.ImageArchiverSettings">
            <summary>Encapsulates the settings of Piczard that control the loading and saving of images. This class cannot be inherited.</summary>
            <remarks>    For more information about configuring Piczard please     see:                       Core Settings         Example Config         File (Non-Web Project)         Example Config         File (Web Project)     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.ImageArchiverSettings.DefaultImageFormatId">
            <summary>Gets the default image format id.</summary>
            <remarks>    For additional information about default image formats     please refer to:                       System.Drawing.Imaging.ImageFormat                  System.Drawing.Imaging.ImageFormat.Guid     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.ImageArchiverSettings.DefaultJpegQuality">
            <summary>Gets the default jpeg quality.</summary>
            <remarks>Valid values are between 1 (min quality / file size) and 100 (max quality / file size).</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.ImageArchiverSettings.DefaultLoadImageUseEmbeddedColorManagement">
            <summary>Gets a value indicating whether to use the Embedded Color Management by default.</summary>
            <remarks>For more information about embedded color management please refer to: Image.FromStream (Stream, Boolean, Boolean) method</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.ImageArchiverSettings.DefaultLoadImageValidateImageData">
            <summary>Gets a value indicating whether to validate the image data by default.</summary>
            <remarks>For more information about about image data validation please refer to: Image.FromStream (Stream, Boolean, Boolean) method</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.ImageArchiverSettings.DefaultQuantizeGifImages">
            <summary>Gets a value indicating whether Gif images are quantized by default.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.ImageArchiverSettings.LoadImageFileShare">
            <summary>Gets the FileShare used by Piczard to open a file for reading.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.ImageArchiverSettings.SaveImageFileShare">
            <summary>Gets the FileShare used by Piczard to open a file for writing.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Configuration.ImageQuantizerSettings">
            <summary>Encapsulates the settings of Piczard that control the image quantization process. This class cannot be inherited.</summary>
            <remarks>    For more information about configuring Piczard please     see:                       Core Settings         Example Config         File (Non-Web Project)         Example Config         File (Web Project)     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.ImageQuantizerSettings.DefaultMaxColors">
            <summary>Gets the default "maximum number of colors" value passed to quantization algorithms.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Configuration.PictureTrimmerSettings">
            <summary>Encapsulates the PictureTrimmer settings. This class cannot be inherited.</summary>
            <remarks>    For more information about configuring Piczard please     see:                       Core Settings         Example Config         File (Non-Web Project)         Example Config         File (Web Project)     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.PictureTrimmerSettings.AutoLoadPiczardClientLibrary">
            <summary>Gets a value indicating whether PictureTrimmer controls automatically load the client-side library (JavaScript).</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.PictureTrimmerSettings.ContentImageJpegQuality">
            <summary>Gets the Jpeg quality of the images generated for the PictureTrimmer GUI.</summary>
            <remarks>    This property is used by the     PictureTrimmerCore.GetContentImageFormatEncoderParams method in     order to setup the JpegFormatEncoderParams objects used to save     images generated for the PictureTrimmer GUI.          For further information about the images generated for     the PictureTrimmer GUI (content images) please see:                       PictureTrimmerCore.GetContentImageJob method         PictureTrimmerCore.GetContentImageFormatEncoderParams         method     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.PictureTrimmerSettings.ContentImageMaxSize">
            <summary>Gets the maximum Size (expressed in pixels) of the images generated for the PictureTrimmer GUI.</summary>
            <remarks>    This property is used by the     PictureTrimmerCore.GetContentImageJob method in order to setup     the ImageProcessingJob objects able to generate the images     generated for the PictureTrimmer GUI.     It is not advisable to use images that are too big to     avoid large files that require long download times.          For further information about the images generated for     the PictureTrimmer GUI (content images) please see:                       PictureTrimmerCore.GetContentImageJob method         PictureTrimmerCore.GetContentImageFormatEncoderParams         method     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.PictureTrimmerSettings.UseTemporaryFiles">
            <summary>Gets a value indicating whether PictureTrimmer controls can use temporary files.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Configuration.PluginSettings">
            <summary>Encapsulates the plugin settings of Piczard. This class cannot be inherited.</summary>
            <remarks>    Please see:                       Piczard         Plugins Overview         How To         Register A Plugin         How To         Develop A Custom Plugin          For more information about configuring Piczard please     see:                       Core Settings         Example Config         File (Non-Web Project)         Example Config         File (Web Project)     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.PluginSettings.InstalledPlugins">
            <summary>Gets a read-only collection of installed Plugins.</summary>
            <remarks>    Please see:                       Piczard         Plugins Overview         How To         Register A Plugin         How To         Develop A Custom Plugin     </remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Configuration.TemporaryFileManagerSettings">
            <summary>Encapsulates the temporary file manager settings of Piczard. This class cannot be inherited.</summary>
            <remarks>    For more information about configuring Piczard please     see:                       Web Settings         Example Config         File (Web Project)     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.TemporaryFileManagerSettings.AutoDeleteFiles">
            <summary>Gets a value indicating whether to automatically delete temporary files.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.TemporaryFileManagerSettings.FileNamePrefix">
            <summary>Gets the prefix used to create temporary files.</summary>
            <remarks>    Piczard uses the      FileNamePrefix also to identify temporary files that have     to be deleted.     Be sure to not choose a prefix used by non-temporary     files.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.TemporaryFileManagerSettings.FolderPath">
            <summary>Gets the path of the folder where Piczard stores its temporary files.</summary>
            <remarks>Piczard automatically translates relative paths into absolute paths.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.TemporaryFileManagerSettings.MaxFileLifeTime">
            <summary>Gets the number of minutes after which temporary files can be deleted.</summary>
            <remarks>The value of  MaxFileLifeTime must be greater than 0.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.TemporaryFileManagerSettings.UseMultiThreading">
            <summary>Gets a value indicating whether to use a separate thread to delete temporary files.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Configuration.WebResourceSettings">
            <summary>Encapsulates the web resource settings of Piczard. This class cannot be inherited.</summary>
            <remarks>    For more information about configuring Piczard please     see:                       Web Settings         Example Config         File (Web Project)     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.WebResourceSettings.EnableCompression">
            <summary>Gets a value indicating whether Piczard automatically compress web resources.</summary>
            <remarks>    Currently only the file containing the Piczard javascript     code is compressed.     If http compression is already configured on server or     application, then it is suggested to set     enableCompression to false in the     configuration file.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.WebResourceSettings.MainHttpHandlerUrl">
            <summary>Gets the URL of the HttpHandler that provides access to the Piczard web resources.</summary>
            <remarks>    The value of the MainHttpHandlerUrl property must be     configured according to the HttpHandler path set in the     configuration file.     For more information about registration of HttpHandlers     please refer to:                       http://msdn.microsoft.com/en-us/library/bya7fh0a.aspx         http://msdn.microsoft.com/en-us/library/ms689475.aspx     </remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Configuration.WebSettings">
            <summary>Provides access to the Piczard web settings. This class cannot be inherited.</summary>
            <remarks>    The      WebSettings class Handles the access to the codeCarvings.piczard/webSettings section for the current application's     configuration.Please see also:                       Web Settings         Example Config         File (Web Project)                  CoreSettings class     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.WebSettings.PictureTrimmer">
            <summary>Gets the PictureTrimmerSettings data for the current application's configuration.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.WebSettings.TemporaryFileManager">
            <summary>Gets the TemporaryFileManagerSettings data for the current application's configuration.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Configuration.WebSettings.WebResource">
            <summary>Gets the WebResourceSettings data for the current application's configuration.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Configuration.WebSettingsSectionHandler">
            <summary>Handles the access to the codeCarvings.piczard/webSettings section for the current application's configuration. This class cannot be inherited.</summary>
            <remarks>    For more information about configuring Piczard please     see:                       Web Settings         Example Config         File (Web Project)     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Configuration.WebSettingsSectionHandler.#ctor">
            <summary>Initializes a new instance of the WebSettingsSectionHandler class.</summary>
        </member>
        <member name="N:CodeCarvings.Piczard.Filters.Colors">
            <summary>The CodeCarvings.Piczard.Filters.Colors namespace contains built-in filters that allow to manipulate image colors.</summary>
            <remarks>Please see: Adjust And Change Image Colors.</remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Filters.Colors.ColorMatrixFilter">
            <summary>Represents an ImageProcessingFilter that allows to manipulate image colors by applying one or more  System.Drawing.Imaging.ColorMatrix objects to an image. It is also the base class from which each filter that works with color matrices must inherit.</summary>
            <remarks>    For information about this filter please see: Adjust And Change Image     Colors (paragraph: "Color matrix filter").</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ColorMatrixFilter.#ctor">
            <summary>Initializes a new instance of the ColorMatrixFilter class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ColorMatrixFilter.#ctor">
            <summary>Initializes a new instance of the ColorMatrixFilter class; no ColorMatrix is applied.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ColorMatrixFilter.#ctor(System.Drawing.Imaging.ColorMatrix)">
            <summary>Initializes a new instance of the ColorMatrixFilter class; one ColorMatrix is applied.</summary>
            <param name="colorMatrix">The ColorMatrix object to apply to the Image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ColorMatrixFilter.#ctor(System.Drawing.Imaging.ColorMatrix[])">
            <summary>Initializes a new instance of the ColorMatrixFilter class; multiple Color Matrices are applied.</summary>
            <param name="colorMatrices">An array of ColorMatrix objects to apply - in sequence - to the Image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ColorMatrixFilter.Clone">
            <summary>Creates a copy of the ColorMatrixFilter.</summary>
            <returns>A copy of the ColorMatrixFilter.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ColorMatrixFilter.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ColorMatrixFilter.FromJSON">
            <summary>Deserializes a new instance of the ColorMatrixFilter class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ColorMatrixFilter.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the ColorMatrixFilter class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ColorMatrixFilter.FromJSON(System.String)">
            <summary>Deserializes a new instance of the ColorMatrixFilter class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ColorMatrixFilter.GetColorMatrices">
            <summary>Gets the ColorMatrix objects to apply - in sequence - to the Image.</summary>
            <returns>An array of ColorMatrix objects to apply to the Image.</returns>
            <remarks>This method can be overridden by sub-classes to customize the color matrices that has to be applied to the Image.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ColorMatrixFilter.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ColorMatrixFilter.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:CodeCarvings.Piczard.Filters.Colors.DefaultColorFilters">
            <summary>Specifies the available built-in color filters. This class cannot be inherited.</summary>
            <remarks>    For information about this filter please see: Adjust And Change Image     Colors (paragraph: "Default color filters").</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.DefaultColorFilters.Clone">
            <summary>Creates a copy of the DefaultColorFilters object.</summary>
            <returns>A copy of the DefaultColorFilters object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.DefaultColorFilters.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.DefaultColorFilters.FromJSON">
            <summary>Deserializes a new instance of the DefaultColorFilters class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.DefaultColorFilters.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the DefaultColorFilters class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.DefaultColorFilters.FromJSON(System.String)">
            <summary>Deserializes a new instance of the DefaultColorFilters class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.DefaultColorFilters.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.DefaultColorFilters.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:CodeCarvings.Piczard.Filters.Colors.DefaultColorFilters.Grayscale">
            <summary>Gets an instance of the DefaultColorFilters class that allows to convert an Image to grayscale.</summary>
            <remarks>    For information about this filter please see: Adjust And Change Image     Colors (paragraph: "Default color filters").</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Filters.Colors.DefaultColorFilters.Invert">
            <summary>Gets an instance of the DefaultColorFilters class that allows to invert the colors of an Image.</summary>
            <remarks>    For information about this filter please see: Adjust And Change Image     Colors (paragraph: "Default color filters").</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Filters.Colors.DefaultColorFilters.Sepia">
            <summary>Gets an instance of the DefaultColorFilters class that allows to apply a sepia tone to an Image.</summary>
            <remarks>    For information about this filter please see: Adjust And Change Image     Colors (paragraph: "Default color filters").</remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter">
            <summary>Represents an ImageProcessingFilter that allows to change Brightness, Contrast, Hue and/or Saturation of an Image. This class cannot be inherited.</summary>
            <remarks>For information about this filter please see: Adjust And Change Image Colors (paragraph: "Image adjustments filter").</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.#ctor">
            <summary>Initializes a new instance of the ImageAdjustmentsFilter class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.#ctor">
            <summary>    Initializes a new instance of the ImageAdjustmentsFilter     class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.#ctor(System.Single,System.Single)">
            <summary>Initializes a new instance of the ImageAdjustmentsFilter class and sets the specified Brightness and Contrast values.</summary>
            <param name="brightness">The brightness adjustment factor [-150..+150].</param>
            <param name="contrast">The contrast adjustment factor [-50..+50].</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>Initializes a new instance of the ImageAdjustmentsFilter class and sets all the properties explicitly.</summary>
            <param name="brightness">The brightness adjustment factor [-150..+150].</param>
            <param name="contrast">The contrast adjustment factor [-50..+50].</param>
            <param name="hue">The hue adjustment factor [-180..+180].</param>
            <param name="saturation">The saturation adjustment factor [-100..+100].</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.Clone">
            <summary>Creates a copy of the ImageAdjustmentsFilter.</summary>
            <returns>A copy of the ImageAdjustmentsFilter.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.FromJSON">
            <summary>Deserializes a new instance of the ImageAdjustmentsFilter class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the ImageAdjustmentsFilter class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.FromJSON(System.String)">
            <summary>Deserializes a new instance of the ImageAdjustmentsFilter class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.GetColorMatrix">
            <summary>Gets a ColorMatrix object that allows to apply all the parameters contained in this instance (Brightness, Contrast, Hue and Saturation) to an Image.</summary>
            <returns>An instance of the ColorMatrix object that can be used in conjunction with the  ImageAttributes class.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.ValidateBrightness">
            <summary>Determines if the provided brightness adjustment factor is valid.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.ValidateBrightness(System.Single)">
            <summary>Determines if the provided brightness adjustment factor is valid.</summary>
            <returns>true if the brightness adjustment factor is valid; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.ValidateBrightness(System.Single,System.Boolean)">
            <summary>Determines if the provided brightness adjustment factor is valid; if the "throwException" parameter is true then an Exception is thrown if the value is not valid.</summary>
            <returns>true if the brightness adjustment factor is valid; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
            <param name="throwException">If true, an Exception is thrown if the value is not valid.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.ValidateContrast">
            <summary>Determines if the provided contrast adjustment factor is valid.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.ValidateContrast(System.Single)">
            <summary>Determines if the provided contrast adjustment factor is valid.</summary>
            <returns>true if the contrast adjustment factor is valid; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.ValidateContrast(System.Single,System.Boolean)">
            <summary>Determines if the provided contrast adjustment factor is valid; if the "throwException" parameter is true then an Exception is thrown if the value is not valid.</summary>
            <returns>true if the contrast adjustment factor is valid; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
            <param name="throwException">If true, an Exception is thrown if the value is not valid.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.ValidateHue">
            <summary>Determines if the provided hue adjustment factor is valid.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.ValidateHue(System.Single)">
            <summary>Determines if the provided hue adjustment factor is valid.</summary>
            <returns>true if the hue adjustment factor is valid; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.ValidateHue(System.Single,System.Boolean)">
            <summary>Determines if the provided hue adjustment factor is valid; if the "throwException" parameter is true then an Exception is thrown if the value is not valid.</summary>
            <returns>true if the hue adjustment factor is valid; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
            <param name="throwException">If true, an Exception is thrown if the value is not valid.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.ValidateSaturation">
            <summary>Determines if the provided saturation adjustment factor is valid.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.ValidateSaturation(System.Single)">
            <summary>Determines if the provided saturation adjustment factor is valid.</summary>
            <returns>true if the saturation adjustment factor is valid; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.ValidateSaturation(System.Single,System.Boolean)">
            <summary>Determines if the provided saturation adjustment factor is valid; if the "throwException" parameter is true then an Exception is thrown if the value is not valid.</summary>
            <returns>true if the saturation adjustment factor is valid; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
            <param name="throwException">If true, an Exception is thrown if the value is not valid.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.Brightness">
            <summary>Gets or sets a value that allows to change the brightness of an entire Image.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.Contrast">
            <summary>Gets or sets a value that allows to change the contrast of an entire Image.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.Hue">
            <summary>Gets or sets a value that allows to change the colors of an entire Image.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.IsNeutral">
            <summary>    Gets a value indicating whether the ImageProcessingFilter     is neutral (does not alter source images).</summary>
            <remarks>    The method returns true if all the parameters     (Brightness, Contrast, Hue and Saturation) are set to     zero.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.Saturation">
            <summary>Gets or sets a value that allows to enrich or dull the colors of an entire Image.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.MaxBrightness">
            <summary>Represents the largest possible value for the Brightness property. This field is constant.</summary>
            <remarks>The value of this constant is +150.</remarks>
        </member>
        <member name="F:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.MaxContrast">
            <summary>Represents the largest possible value for the Contrast property. This field is constant.</summary>
            <remarks>The value of this constant is +50.</remarks>
        </member>
        <member name="F:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.MaxHue">
            <summary>Represents the largest possible value for the Hue property. This field is constant.</summary>
            <remarks>The value of this constant is +180.</remarks>
        </member>
        <member name="F:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.MaxSaturation">
            <summary>Represents the largest possible value for the Saturation property. This field is constant.</summary>
            <remarks>The value of this constant is +100.</remarks>
        </member>
        <member name="F:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.MinBrightness">
            <summary>Represents the smallest possible value for the Brightness property. This field is constant.</summary>
            <remarks>The value of this constant is -150.</remarks>
        </member>
        <member name="F:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.MinContrast">
            <summary>Represents the smallest possible value for the Contrast property. This field is constant.</summary>
            <remarks>The value of this constant is -50.</remarks>
        </member>
        <member name="F:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.MinHue">
            <summary>Represents the smallest possible value for the Hue property. This field is constant.</summary>
            <remarks>The value of this constant is -180.</remarks>
        </member>
        <member name="F:CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter.MinSaturation">
            <summary>Represents the smallest possible value for the Saturation property. This field is constant.</summary>
            <remarks>The value of this constant is -100.</remarks>
        </member>
        <member name="N:CodeCarvings.Piczard.Filters.Watermarks">
            <summary>The CodeCarvings.Piczard.Filters.Watermarks namespace contains built-in filters that allow to apply watermarks to images.</summary>
            <remarks>Please see: Apply A Watermark.</remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Filters.Watermarks.ImageWatermark">
            <summary>Represents a Watermark of the type image.</summary>
            <remarks>    For information about this filter please see: Apply A Watermark (paragraph:     "Image watermark").</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.ImageWatermark.#ctor">
            <summary>Initializes a new instance of the ImageWatermark class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.ImageWatermark.#ctor(System.Byte[])">
            <summary>Initializes a new instance of the ImageWatermark class; the Image is loaded from the byte array when the watermark is applied (and then automatically disposed).</summary>
            <param name="imageFileBytes">    The byte array containing the watermark image to load and     apply.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.ImageWatermark.#ctor(System.Byte[],System.Drawing.ContentAlignment)">
            <summary>Initializes a new instance of the ImageWatermark class; the Image is loaded from the byte array when the watermark is applied (and then automatically disposed); the specified ContentAlignment is used.</summary>
            <param name="imageFileBytes">    The byte array containing the watermark image to load and     apply.</param>
            <param name="contentAlignment">The alignment of the watermark with respect to the source image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.ImageWatermark.#ctor(System.Drawing.Image)">
            <summary>Initializes a new instance of the ImageWatermark class; the Image is not disposed after the watermark has been applied.</summary>
            <param name="image">The Image object to apply as watermark.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.ImageWatermark.#ctor(System.Drawing.Image,System.Drawing.ContentAlignment)">
            <summary>Initializes a new instance of the ImageWatermark class; the Image is not disposed after the watermark has been applied; the specified ContentAlignment is used.</summary>
            <param name="image">The Image object to apply as watermark.</param>
            <param name="contentAlignment">The alignment of the watermark with respect to the source image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.ImageWatermark.#ctor(System.String)">
            <summary>Initializes a new instance of the ImageWatermark class; the Image is loaded from the file system when the watermark is applied (and then automatically disposed).</summary>
            <param name="imageFilePath">The path of the file containing the watermark image to load and apply.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.ImageWatermark.#ctor(System.String,System.Drawing.ContentAlignment)">
            <summary>Initializes a new instance of the ImageWatermark class; the Image is loaded from the file system when the watermark is applied (and then automatically disposed); the specified ContentAlignment is used.</summary>
            <param name="imageFilePath">The path of the file containing the watermark image to load and apply.</param>
            <param name="contentAlignment">The alignment of the watermark with respect to the source image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.ImageWatermark.ApplyImageWatermark">
            <summary>Applies the watermark to the Image.Applies the current ImageWatermark.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.ImageWatermark.ApplyImageWatermark(CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs,System.Drawing.Image)">
            <summary>Applies the current ImageWatermark.</summary>
            <param name="args">An instance of the ImageProcessingActionExecuteArgs class that encapsulates data concerning the image processing.</param>
            <param name="image">The Image object to apply as watermark.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.ImageWatermark.ApplyImageWatermark(CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs,System.Drawing.Graphics,System.Drawing.Image)">
            <summary>Applies the current ImageWatermark on the specified Graphics object.</summary>
            <param name="args">An instance of the ImageProcessingActionExecuteArgs class that encapsulates data concerning the image processing.</param>
            <param name="g">The Graphics object on which to draw the watermark.</param>
            <param name="image">The Image object to apply as watermark.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.ImageWatermark.ApplyWatermark(CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs)">
            <summary>Applies the current Watermark.</summary>
            <param name="args">An instance of the ImageProcessingActionExecuteArgs class that encapsulates data concerning the image processing.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.ImageWatermark.FromJSON">
            <summary>Deserializes a new instance of the ImageWatermark class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.ImageWatermark.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the ImageWatermark class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.ImageWatermark.FromJSON(System.String)">
            <summary>Deserializes a new instance of the ImageWatermark class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.ImageWatermark.ValidateAlpha">
            <summary>Determines if the provided alpha value is valid.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.ImageWatermark.ValidateAlpha(System.Single)">
            <summary>Determines if the provided alpha value is valid.</summary>
            <returns>true if the alpha value is valid; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.ImageWatermark.ValidateAlpha(System.Single,System.Boolean)">
            <summary>Determines if the provided alpha value is valid; if the "throwException" parameter is true then an Exception is thrown if the alpha value is not valid.</summary>
            <returns>true if the alpha value is valid; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
            <param name="throwException">If true, an Exception is thrown if the alpha value is not valid.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.Filters.Watermarks.ImageWatermark.Alpha">
            <summary>Gets or sets the transparency level of the watermark.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Filters.Watermarks.TextWatermark">
            <summary>Represents a Watermark of the type text.</summary>
            <remarks>    For information about this filter please see: Apply A Watermark (paragraph:     "Text watermark").</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.TextWatermark.#ctor">
            <summary>Initializes a new instance of the TextWatermark class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.TextWatermark.#ctor">
            <summary>Initializes a new instance of the TextWatermark class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.TextWatermark.#ctor(System.String)">
            <summary>Initializes a new instance of the TextWatermark class and sets the Text.</summary>
            <param name="text">The text to apply as watermark.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.TextWatermark.#ctor(System.String,System.Drawing.ContentAlignment)">
            <summary>Initializes a new instance of the TextWatermark class and sets the Text and the ContentAlignment</summary>
            <param name="text">The text to apply as watermark.</param>
            <param name="contentAlignment">The alignment of the watermark with respect to the source image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.TextWatermark.ApplyTextWatermark(CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs,System.Drawing.Graphics)">
            <summary>Applies the current TextWatermark on the specified Graphics object.</summary>
            <param name="args">An instance of the ImageProcessingActionExecuteArgs class that encapsulates data concerning the image processing.</param>
            <param name="g">The Graphics object on which to draw the watermark.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.TextWatermark.ApplyWatermark(CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs)">
            <summary>Applies the current Watermark.</summary>
            <param name="args">An instance of the ImageProcessingActionExecuteArgs class that encapsulates data concerning the image processing.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.TextWatermark.FromJSON">
            <summary>Deserializes a new instance of the TextWatermark class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.TextWatermark.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the TextWatermark class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.TextWatermark.FromJSON(System.String)">
            <summary>Deserializes a new instance of the TextWatermark class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.TextWatermark.ValidateTextContrast">
            <summary>Determines if the provided text contrast is valid.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.TextWatermark.ValidateTextContrast(System.Int32)">
            <summary>Determines if the provided text contrast is valid.</summary>
            <returns>true if the text contrast is valid; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.TextWatermark.ValidateTextContrast(System.Int32,System.Boolean)">
            <summary>Determines if the provided text contrast is valid; if the "throwException" parameter is true then an Exception is thrown if the text contrast is not valid.</summary>
            <returns>true if the text contrast is valid; otherwise, false.</returns>
            <param name="value">The value to validate.</param>
            <param name="throwException">If true, an Exception is thrown if the text contrast is not valid.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.Filters.Watermarks.TextWatermark.Font">
            <summary>Gets or sets the font to use when drawing the text.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Filters.Watermarks.TextWatermark.ForeColor">
            <summary>Gets or sets the color of the text.</summary>
            <remarks>The ForeColor property supports transparency. For example you can use semi-transparent texts, such as System.Drawing.Color.FromArgb(128, Color.Red).</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Filters.Watermarks.TextWatermark.StringFormat">
            <summary>Gets or sets additional text layout information (e.g. alignment, orientation and tab stops).</summary>
            <remarks>    Please note that the TextWatermark class does not     dispose eventual StringFormat objects.     JSONSerializer cannot serialize the StringFormat class.     For this reason you have to ensure that the StringFormat is     null before the TextWatermark object is serialized.     For more information about StringFormat please refer to:          http://msdn.microsoft.com/en-us/library/system.drawing.stringformat.aspx</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Filters.Watermarks.TextWatermark.Text">
            <summary>Gets or sets the text to apply as watermark.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Filters.Watermarks.TextWatermark.TextContrast">
            <summary>Gets or sets the gamma correction value used for rendering antialiased text.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Filters.Watermarks.TextWatermark.TextRenderingHint">
            <summary>Gets or sets the text quality (e.g. antialiasing)</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Filters.Watermarks.Watermark">
            <summary>Defines the base abstract class for the filters that allows to apply a watermark to images.</summary>
            <remarks>    For information about this filter please see: Apply A Watermark (paragraph:     "Watermark base class").</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.Watermark.Apply(CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs)">
            <summary>Applies the current ImageProcessingFilter.</summary>
            <param name="args">An instance of the ImageProcessingActionExecuteArgs class that encapsulates data concerning the image processing.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.Watermark.ApplyWatermark(CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs)">
            <summary>Applies the current Watermark.</summary>
            <param name="args">An instance of the ImageProcessingActionExecuteArgs class that encapsulates data concerning the image processing.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.Watermark.GetContentLocation(System.Drawing.Size,System.Drawing.Size,System.Single)">
            <summary>Gets the coordinates (X/Y expressed in pixels) of the watermark to apply.</summary>
            <returns>The coordinates (expressed in pixels) where the watermark should be placed.</returns>
            <param name="containerSize">The size of the source Image expressed in pixels.</param>
            <param name="contentSize">The size of the watermark expressed in pixels.</param>
            <param name="outputResolution">The output resolution (DPI) used to process the image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Filters.Watermarks.Watermark.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:CodeCarvings.Piczard.Filters.Watermarks.Watermark.ContentAlignment">
            <summary>Gets or sets the alignment of the watermark with respect to the source image.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Filters.Watermarks.Watermark.ContentDisplacement">
            <summary>Gets or sets a value that allows to shift the watermark from the location specified by the ContentAlignment property.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Filters.Watermarks.Watermark.Unit">
            <summary>Gets or sets the graphic unit in which sizes and locations are measured.</summary>
        </member>
        <member name="N:CodeCarvings.Piczard.Globalization">
            <summary>The CodeCarvings.Piczard.Globalization namespace contains support classes for the localization/customization of the Piczard GUI.</summary>
            <remarks>    Please see: Localizing And     Customizing Texts</remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Globalization.GlobalizationManager">
            <summary>Provides properties and methods for the localization/customization of the Piczard GUI. This class cannot be inherited.</summary>
            <remarks>    Please see:                       Localizing And         Customizing Texts         The IStaticLocalizationPlugin interface         The IDynamicLocalizationPlugin interface         The example A.402 - "Localize &amp;         customize texts".     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Globalization.GlobalizationManager.GetString">
            <summary>Gets a localized string.</summary>
            <remarks>    Please see: Localizing And     Customizing Texts</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Globalization.GlobalizationManager.GetString(System.String,System.String,System.String)">
            <summary>Gets a localized string for the specified culture and tag.</summary>
            <returns>The localized string.</returns>
            <remarks>    Please see: Localizing And     Customizing Texts</remarks>
            <param name="key">The key of the string to localize (e.g. "PPT_Popup_Button_Save").</param>
            <param name="culture">The name of the culture in which the string has to be localized (e.g. "en" or "it-IT").</param>
            <param name="tag">An optional string that can be used to pass extra parameters during the dynamic localization process. Please see:  PictureTrimmer.Tag property.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Globalization.GlobalizationManager.GetString(System.String,System.String)">
            <summary>Gets a localized string for the specified culture.</summary>
            <returns>The localized string.</returns>
            <remarks>    Please see: Localizing And     Customizing Texts</remarks>
            <param name="key">The key of the string to localize (e.g. "PPT_Popup_Button_Save").</param>
            <param name="culture">The name of the culture in which the string has to be localized (e.g. "en" or "it-IT").</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Globalization.GlobalizationManager.LoadDictionaryFromAssemblyXMLResource(System.Reflection.Assembly,System.String)">
            <summary>Loads a dictionary stored as assembly resource (XML ResX file).</summary>
            <returns>A Dictionary containing all the localized strings defined in the XML file.</returns>
            <remarks>             For more information about Resx File Format please see                  http://msdn.microsoft.com/en-us/library/ekyft91f(v=vs.71).aspx         For more information about manifest resources, see Microsoft         .NET Framework Resource Basics in the MSDN Library.         Please see also:                                   Localizing And             Customizing Texts             The Example A.402 - "Localize             &amp; customize texts" /             MyStaticLocalizationPlugin.              </remarks>
            <param name="assembly">The Assembly containing the ResX resource to load.</param>
            <param name="xmlResourcePath">The case-sensitive name of the manifest resource being requested.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Globalization.GlobalizationManager.LoadDictionaryFromXML(System.String)">
            <summary>Loads a dictionary from a XML (ResX) string.</summary>
            <returns>A Dictionary containing all the localized strings defined in the XML (ResX) string.</returns>
            <remarks>    For more information about Resx File Format please see          http://msdn.microsoft.com/en-us/library/ekyft91f(v=vs.71).aspx     Please see also:                       Localizing And         Customizing Texts         The Example A.402 - "Localize &amp;         customize texts" / MyStaticLocalizationPlugin.     </remarks>
            <param name="xml">The XML (ResX) string containing the dictionary to load.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Globalization.GlobalizationManager.LoadDictionaryFromXMLFile(System.String)">
            <summary>Loads a dictionary from a XML (ResX) file.</summary>
            <returns>A Dictionary containing all the localized strings defined in the XML (ResX) file.</returns>
            <remarks>    For more information about Resx File Format please see          http://msdn.microsoft.com/en-us/library/ekyft91f(v=vs.71).aspx     Please see also:                       Localizing And         Customizing Texts         The Example A.402 - "Localize &amp;         customize texts" / MyStaticLocalizationPlugin.     </remarks>
            <param name="filePath">The path of the XML (ResX) file lo load.</param>
        </member>
        <member name="F:CodeCarvings.Piczard.Globalization.GlobalizationManager.BuiltinCultures">
            <summary>Represents the names of all the built-in localizations available in Piczard. This field is constant.</summary>
            <remarks>    The value of this constant is {"en", "it"}.     Please see: Localizing And     Customizing Texts</remarks>
        </member>
        <member name="N:CodeCarvings.Piczard.Helpers">
            <summary>The CodeCarvings.Piczard.Helpers namespace contains various support classes and utilities.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Helpers.ImageHelper">
            <summary>Provides helper methods for managing images. This class cannot be inherited.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.ImageHelper.GetClonedBitmap">
            <summary>Gets a Bitmap containing a copy of the specified Image object</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.ImageHelper.GetClonedBitmap(System.Drawing.Image,System.Drawing.Imaging.PixelFormat)">
            <summary>Gets a Bitmap containing a copy of the specified Image object; the specified PixelFormat is used.</summary>
            <returns>A Bitmap object containing a copy of the source Image.</returns>
            <param name="image">The source Image to copy.</param>
            <param name="pixelFormat">The PixelFormat of the output Bitmap.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.ImageHelper.GetClonedBitmap(System.Drawing.Image)">
            <summary>Gets a Bitmap containing a copy of the specified Image object; the DefaultPixelFormat is used</summary>
            <returns>A Bitmap object containing a copy of the source Image.</returns>
            <param name="image">The source Image to copy.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.ImageHelper.GetImageResolution(System.Drawing.Image)">
            <summary>Gets the resolution, in pixels per inch, of the Image.</summary>
            <returns>The resolution, in pixels per inch, of the Image.</returns>
            <remarks>Only the  VerticalResolution of the Image is taken into consideration, not the  HorizontalResolution.</remarks>
            <param name="image">The image of which to get the resolution.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.ImageHelper.GetRotateFlipType(System.Single,System.Boolean,System.Boolean)">
            <summary>Gets the RotateFlipType value associated with the specified parameters.</summary>
            <param name="rotationAngle">The rotation angle (degrees - clockwise) to apply to the image. Valid values are: 0, 90, 180 or 270.</param>
            <param name="flipH">A value indicating whether the mage has to be horizontally flipped (left &lt;-&gt; right).</param>
            <param name="flipV">A value indicating whether the mage has to be vertically flipped (top &lt;-&gt; bottom).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.ImageHelper.SetGraphicsDefaultQuality(System.Drawing.Graphics)">
            <summary>Restore the default values for the  PixelOffsetMode,  SmoothingMode,  InterpolationMode and  CompositingQuality properties of the specified Graphics object.</summary>
            <remarks>    The following values are used:                                Graphics.PixelOffsetMode =          PixelOffsetMode.Default                  Graphics.SmoothingMode = SmoothingMode.None                  Graphics.InterpolationMode =          InterpolationMode.Bilinear                  Graphics.CompositingQuality =          CompositingQuality.Default     </remarks>
            <param name="g">The Graphics object of which to set the quality settings.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.ImageHelper.SetGraphicsMaxQuality(System.Drawing.Graphics)">
            <summary>Sets the values of the  PixelOffsetMode,  SmoothingMode,  InterpolationMode and  CompositingQuality properties of the specified Graphics object to ensure that the best quality will be used for the next drawing operations.</summary>
            <remarks>    The following values are used:                                Graphics.PixelOffsetMode =          PixelOffsetMode.HighQuality                  Graphics.SmoothingMode = SmoothingMode.HighQuality                  Graphics.InterpolationMode =          InterpolationMode.HighQualityBicubic                  Graphics.CompositingQuality =          CompositingQuality.AssumeLinear     </remarks>
            <param name="g">The Graphics object of which to set the quality settings.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.ImageHelper.SetImageResolution(System.Drawing.Bitmap,System.Single)">
            <summary>Sets the resolution, in pixels per inch, of the Image.</summary>
            <remarks>Both the  VerticalResolution and  HorizontalResolution properties of the Image object are updated.</remarks>
            <param name="image">The image of which to set the resolution.</param>
            <param name="resolution">The new resolution (DPI).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.ImageHelper.ValidateImageHeight">
            <summary>Determines whether a specified height is valid against the current MaxImageSize setting.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.ImageHelper.ValidateImageHeight(System.Int32)">
            <summary>Determines whether a specified height is valid against the current MaxImageSize setting.</summary>
            <returns>true if the height is valid; otherwise, false.</returns>
            <param name="value">The height to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.ImageHelper.ValidateImageHeight(System.Int32,System.Boolean)">
            <summary>Determines whether a specified height is valid against the current MaxImageSize setting - and - (optionally) raise an exception if the height is not valid.</summary>
            <returns>true if the height is valid.</returns>
            <param name="value">The height to validate.</param>
            <param name="throwException">If true, an exception is thrown if the height is not valid.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.ImageHelper.ValidateImageSize">
            <summary>Determines whether a specified Size is valid against the current MaxImageSize setting.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.ImageHelper.ValidateImageSize(System.Drawing.Size,System.Boolean)">
            <summary>Determines whether a specified Size is valid against the current MaxImageSize setting - and - (optionally) raise an exception if the Size is not valid.</summary>
            <returns>true if the Size is valid.</returns>
            <param name="value">The Size to validate.</param>
            <param name="throwException">If true, an exception is thrown if the Size is not valid.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.ImageHelper.ValidateImageSize(System.Drawing.Size)">
            <summary>Determines whether a specified Size is valid against the current MaxImageSize setting.</summary>
            <returns>true if the Size is valid; otherwise, false.</returns>
            <param name="value">The Size to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.ImageHelper.ValidateImageWidth">
            <summary>Determines whether a specified width is valid against the current MaxImageSize setting.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.ImageHelper.ValidateImageWidth(System.Int32)">
            <summary>Determines whether a specified width is valid against the current MaxImageSize setting.</summary>
            <returns>true if the width is valid; otherwise, false.</returns>
            <param name="value">The width to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.ImageHelper.ValidateImageWidth(System.Int32,System.Boolean)">
            <summary>Determines whether a specified width is valid against the current MaxImageSize setting - and - (optionally) raise an exception if the width is not valid.</summary>
            <returns>true if the width is valid.</returns>
            <param name="value">The width to validate.</param>
            <param name="throwException">If true, an exception is thrown if the width is not valid.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.ImageHelper.ValidateResolution">
            <summary>Determines if the provided value is a valid image resolution.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.ImageHelper.ValidateResolution(System.Single)">
            <summary>Determines if the provided value is a valid image resolution.</summary>
            <returns>true if the value is a valid image resolution; otherwise, false.</returns>
            <param name="resolution">The value to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.ImageHelper.ValidateResolution(System.Single,System.Boolean)">
            <summary>Determines if the provided value is a valid image resolution; if the "throwException" parameter is true then an Exception is thrown if the value is not valid.</summary>
            <returns>true if the value is a valid image resolution; otherwise, false.</returns>
            <param name="resolution">The value to validate.</param>
            <param name="throwException">If true, an exception is thrown if the value is not valid.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.Helpers.IOHelper">
            <summary>Provides helper methods for input/output. This class cannot be inherited.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.IOHelper.GetUniqueFileName">
            <summary>Returns a unique file name.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.IOHelper.GetUniqueFileName(System.String,System.String)">
            <summary>Returns an unique file name.</summary>
            <returns>The file name indicated in fileName if unique; otherwise this function returns fileName, appended with a number from 1 to 9999999, to make it unique.</returns>
            <param name="folderPath">Directory to look for file name in.</param>
            <param name="fileName">File name to check.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.IOHelper.GetUniqueFileName(System.String)">
            <summary>Returns an unique (random) file name.</summary>
            <returns>An unique (random) file name.</returns>
            <param name="folderPath">Directory to look for file name in.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.IOHelper.GetUniqueFilePath">
            <summary>Returns a unique file path.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.IOHelper.GetUniqueFilePath(System.String,System.String)">
            <summary>Returns an unique file path.</summary>
            <returns>The file path composed by the provided folder path plus the value returned by the GetUniqueFileName(String,String) method.</returns>
            <param name="folderPath">Directory to look for file name in.</param>
            <param name="fileName">File name to check.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.IOHelper.GetUniqueFilePath(System.String)">
            <summary>Returns an unique (random) file path.</summary>
            <returns>The file path composed by the provided folder path plus the value returned by the GetUniqueFileName(String) method.</returns>
            <param name="folderPath">Directory to look for file name in.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.IOHelper.TranslatePathToAbsolute(System.String)">
            <summary>Converts a path to an application absolute path.</summary>
            <returns>The absolute path</returns>
            <param name="path">The path to convert. Can be a virtual path, in this case the method returns the absolute path representation. If an absolute path is passed, then it is returned -without modifications- by the method.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.Helpers.SecurityHelper">
            <summary>Provides helper methods related to security. This class cannot be inherited.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.SecurityHelper.DecryptString">
            <summary>Decrypts a string encrypted with the  EncryptString method.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.SecurityHelper.DecryptString(System.String)">
            <summary>Decrypts a string encrypted with the  EncryptString method by using the current default encryption key.</summary>
            <returns>The decrypted string.</returns>
            <param name="str">The string to decrypt.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.SecurityHelper.DecryptString(System.String,System.String)">
            <summary>Decrypts a string encrypted with the  EncryptString method by using the specified encryption key.</summary>
            <returns>The decrypted string.</returns>
            <param name="str">The string to decrypt.</param>
            <param name="key">The encryption key used to encrypt the string.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.SecurityHelper.EncryptString">
            <summary>Encrypts a string.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.SecurityHelper.EncryptString(System.String,System.String)">
            <summary>Encrypts a string by using the current default encryption key.</summary>
            <returns>The encrypted string.</returns>
            <param name="str">The string to encrypt.</param>
            <param name="key">The encryption key to use to encrypt the string.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.SecurityHelper.EncryptString(System.String)">
            <summary>Encrypts a string by using the specified encryption key.</summary>
            <returns>The encrypted string.</returns>
            <param name="str">The string to encrypt.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.Helpers.StringConversionHelper">
            <summary>Provides helper methods for converting instances of various types to and from string. This class cannot be inherited. </summary>
            <remarks>The  InvariantCulture is used in order to convert any value to and from string.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.StringConversionHelper.BoolToString">
            <summary>Converts a bool value to a string.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.StringConversionHelper.BoolToString(System.Boolean,System.String,System.String)">
            <summary>Converts a bool value to a string using the specified tokens.</summary>
            <returns>A string that represents the specified value.</returns>
            <param name="value">The value to be converted to string.</param>
            <param name="trueValue">The string to return when the value is true.</param>
            <param name="falseValue">The string to return when the value is false.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.StringConversionHelper.BoolToString(System.Boolean)">
            <summary>Converts a bool value to a string.</summary>
            <returns>A string that represents the specified value.</returns>
            <param name="value">The value to be converted to string.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.StringConversionHelper.ColorToString(System.Drawing.Color,System.Boolean)">
            <summary>Converts a Color value to a string.</summary>
            <returns>A string that represents the specified value.</returns>
            <remarks>                      If addAlpha is true then the          Alpha component is serialized as the first 2         hexadecimal digits of the string (e.g. "AARRGGBB").         If addAlpha is false then the          Alpha component is not serialized (e.g.         "RRGGBB").     </remarks>
            <param name="color">The value to be converted to string.</param>
            <param name="addAlpha">if true the method serializes also the  Alpha component of the Color.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.StringConversionHelper.DecimalToString(System.Decimal)">
            <summary>Converts a decimal value to a string.</summary>
            <returns>A string that represents the specified value.</returns>
            <param name="value">The value to be converted to string.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.StringConversionHelper.DoubleToString(System.Double)">
            <summary>Converts a double precision value to a string.</summary>
            <returns>A string that represents the specified value.</returns>
            <param name="value">The value to be converted to string.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.StringConversionHelper.Int32ToString(System.Int32)">
            <summary>Converts an Int32 value to a string.</summary>
            <returns>A string that represents the specified value.</returns>
            <param name="value">The value to be converted to string.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.StringConversionHelper.Int64ToString(System.Int64)">
            <summary>Converts an Int64 value to a string.</summary>
            <returns>A string that represents the specified value.</returns>
            <param name="value">The value to be converted to string.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.StringConversionHelper.SingleToString(System.Single)">
            <summary>Converts a single precision value to a string.</summary>
            <returns>A string that represents the specified value.</returns>
            <param name="value">The value to be converted to string.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.StringConversionHelper.StringToBool">
            <summary>Converts a string to a bool value.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.StringConversionHelper.StringToBool(System.String,System.String,System.String,System.Boolean,System.Boolean)">
            <summary>Converts a string to a bool value using the specified tokens.</summary>
            <returns>The value converted from the provided string.</returns>
            <param name="value">A string that represents a bool value.</param>
            <param name="trueValue">The string that identifies the true value.</param>
            <param name="falseValue">The string that identifies the false value.</param>
            <param name="ignoreCase">true to ignore case during the comparison; otherwise, false.</param>
            <param name="defaultValue">The default value to return in case the provided string is not valid.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.StringConversionHelper.StringToBool(System.String)">
            <summary>Converts a string to a bool value.</summary>
            <returns>The value converted from the provided string.</returns>
            <remarks>Case is ignored during comparison. If the provided string is invalid, then this method returns false as default value.</remarks>
            <param name="value">A string that represents a bool value.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.StringConversionHelper.StringToColor(System.String)">
            <summary>Converts a string to a Color.</summary>
            <returns>The value converted from the provided string.</returns>
            <remarks>The string must contains the RGB or the ARGB components serialized as hexadecimal digits (e.g. "RRGGBB" or "AARRGGBB").</remarks>
            <param name="text">A string that represents a Color.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.StringConversionHelper.StringToDecimal(System.String)">
            <summary>Converts a string to a decimal value.</summary>
            <returns>The value converted from the provided string.</returns>
            <param name="text">A string that represents a decimal value.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.StringConversionHelper.StringToDouble(System.String)">
            <summary>Converts a string to a double precision value.</summary>
            <returns>The value converted from the provided string.</returns>
            <param name="text">A string that represents a double precision value.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.StringConversionHelper.StringToInt32(System.String)">
            <summary>Converts a string to an Int32 value.</summary>
            <returns>The value converted from the provided string.</returns>
            <param name="text">A string that represents an Int32 value.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.StringConversionHelper.StringToInt64(System.String)">
            <summary>Converts a string to an Int64 value.</summary>
            <returns>The value converted from the provided string.</returns>
            <param name="text">A string that represents an Int64 value.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Helpers.StringConversionHelper.StringToSingle(System.String)">
            <summary>Converts a string to a single precision value.</summary>
            <returns>The value converted from the provided string.</returns>
            <param name="text">A string that represents a single precision value.</param>
        </member>
        <member name="N:CodeCarvings.Piczard.Plugins">
            <summary>The CodeCarvings.Piczard.Plugins namespace provides classes and interfaces that support the Plugin infrastructure of Piczard.</summary>
            <remarks>    For more informatio about Piczard Plugins please     see:                       Piczard         Plugins Overview         How To         Register A Plugin         How To         Develop A Custom Plugin     </remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Plugins.IDynamicLocalizationPlugin">
            <summary>Defines methods that must be implemented by a Plugin class that handles dynamic localization. </summary>
            <remarks>    Please see:                       Localizing And         Customizing Texts         The example A.402 - "Localize &amp;         customize texts".         Piczard         Plugins Overview         How To         Develop A Custom Plugin     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.IDynamicLocalizationPlugin.GetString(System.String,System.String,System.String)">
            <summary>Gets a localized string.</summary>
            <returns>A  PluginOperationResult&lt;string&gt; that indicates if the Plugin has handled the request. In case of success (Handled=true) the  Value property contains the localized string.</returns>
            <param name="key">The key of the string to localize (e.g. "PPT_Popup_Button_Save").</param>
            <param name="culture">The name of the culture in which the string has to be localized (e.g. "en" or "it-IT").</param>
            <param name="tag">An optional string that can be used to pass extra parameters during the dynamic localization process. Please see:  PictureTrimmer.Tag property.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.Plugins.IImageArchiverPlugin">
            <summary>Defines methods that must be implemented by a Plugin class that wants to manage the loading and/or saving of a particular image format.</summary>
            <remarks>    Please see:                       Piczard         Plugins Overview         How To         Develop A Custom Plugin     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.IImageArchiverPlugin.GetDescriptionFromImageFormatId(System.Guid)">
            <summary>Gets a short description that describes a particular image format.</summary>
            <returns>A  PluginOperationResult&lt;string&gt; that indicates if the Plugin has handled the request. In case of success (Handled=true) the  Value property contains a short description (e.g. "(JPG) Joint Photographic Experts Group") that describes the image format.</returns>
            <param name="imageFormatId">The Guid that identifies the image format.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.IImageArchiverPlugin.GetFileExtensionFromImageFormatId(System.Guid)">
            <summary>Gets the default file extension associated with a particular image format.</summary>
            <returns>A  PluginOperationResult&lt;string&gt; that indicates if the Plugin has handled the request. In case of success (Handled=true) the  Value property contains the default file extension (e.g. ".jpg") associated with the image format.</returns>
            <param name="imageFormatId">The Guid that identifies the image format.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.IImageArchiverPlugin.GetFormatEncoderParams(System.Guid)">
            <summary>Gets a  FormatEncoderParams object able to handle a particular image format.</summary>
            <returns>A  PluginOperationResult&lt;FormatEncoderParams&gt; that indicates if the Plugin has handled the request. In case of success (Handled=true) the  Value property contains the  FormatEncoderParams associated with the image format.</returns>
            <param name="imageFormatId">The Guid that identifies the image format.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.IImageArchiverPlugin.GetHandledFileExtensions">
            <summary>Gets an array containing the file extensions of all the image formats handled by the Plugin.</summary>
            <returns>A  PluginOperationResult&lt;string[]&gt; that indicates if the Plugin has handled the request. In case of success (Handled=true) the  Value property contains an array of handled file extensions (e.g. {".jpeg", ".jpg", ".png"}).</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.IImageArchiverPlugin.GetHandledImageFormats">
            <summary>Gets an array containing all the Guids that identify the image formats handled by the Plugin.</summary>
            <returns>A  PluginOperationResult&lt;Guid[]&gt; that indicates if the Plugin has handled the request. In case of success (Handled=true) the  Value property contains an array of supported image format Guids.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.IImageArchiverPlugin.GetHandledMimeTypes">
            <summary>Gets an array containing the MIME types of all the image formats handled by the Plugin.</summary>
            <returns>A  PluginOperationResult&lt;string[]&gt; that indicates if the Plugin has handled the request. In case of success (Handled=true) the  Value property contains an array of handled MIME types (e.g. {"image/jpeg", "image/png"}).</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.IImageArchiverPlugin.GetImageFormatIdFromFileExtension(System.String)">
            <summary>Gets the image format associated with a particular file extension.</summary>
            <returns>A  PluginOperationResult&lt;Guid&gt; that indicates if the  Plugin has handled the request. In case of success (Handled=true) the  Value property contains the Guid of the image format associated with the file extension.</returns>
            <param name="fileExtension">The file extension (e.g. ".jpg").</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.IImageArchiverPlugin.GetImageFormatTransparencySupport(System.Guid)">
            <summary>Gets a value indicating whether a particular image format supports transparency.</summary>
            <returns>A  PluginOperationResult&lt;bool&gt; that indicates if the  Plugin has handled the request. In case of success (Handled=true) the  Value property contains true if the image format supports transparency; otherwise false.</returns>
            <param name="imageFormatId">The Guid that identifies the image format.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.IImageArchiverPlugin.GetMimeTypeFromImageFormatId(System.Guid)">
            <summary>Gets the default MIME type associated with a particular image format.</summary>
            <returns>A  PluginOperationResult&lt;string&gt; that indicates if the Plugin has handled the request. In case of success (Handled=true) the  Value property contains the MIME type (e.g. "image/jpeg") associated with the image format.</returns>
            <param name="imageFormatId">The Guid that identifies the image format.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.IImageArchiverPlugin.LoadImageFromByteArray(System.Byte[],System.Nullable`1{System.Boolean},System.Nullable`1{System.Boolean})">
            <summary>Loads an image from an array of bytes.</summary>
            <returns>A  PluginOperationResult&lt;LoadedImage&gt; that indicates if the Plugin has handled the request. In case of success (Handled=true) the  Value property contains the image encapsulated in an instance of the LoadedImage class.</returns>
            <param name="bytes">The byte array containing the image data.</param>
            <param name="useEmbeddedColorManagement">true to use color management information embedded in the image data; otherwise, false (null indicates to use the default value).</param>
            <param name="validateImageData">true to validate the image data; otherwise, false (null indicates to use the default value).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.IImageArchiverPlugin.LoadImageFromFileSystem(System.String,System.Nullable`1{System.Boolean},System.Nullable`1{System.Boolean},System.IO.FileShare)">
            <summary>Loads an image from the file system.</summary>
            <returns>A  PluginOperationResult&lt;LoadedImage&gt; that indicates if the Plugin has handled the request. In case of success (Handled=true) the  Value property contains the image encapsulated in an instance of the LoadedImage class.</returns>
            <param name="filePath">The path of the file containing the image to load.</param>
            <param name="useEmbeddedColorManagement">true to use color management information embedded in the image data; otherwise, false (null indicates to use the default value).</param>
            <param name="validateImageData">true to validate the image data; otherwise, false (null indicates to use the default value).</param>
            <param name="fileShare">The FileShare to use to open the file for reading.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.IImageArchiverPlugin.LoadImageFromStream(System.IO.Stream,System.Nullable`1{System.Boolean},System.Nullable`1{System.Boolean})">
            <summary>Loads an image from a Stream.</summary>
            <returns>A  PluginOperationResult&lt;LoadedImage&gt; that indicates if the Plugin has handled the request. In case of success (Handled=true) the  Value property contains the image encapsulated in an instance of the LoadedImage class.</returns>
            <param name="stream">An open Stream containing the image data.</param>
            <param name="useEmbeddedColorManagement">true to use color management information embedded in the image data; otherwise, false (null indicates to use the default value).</param>
            <param name="validateImageData">true to validate the image data; otherwise, false (null indicates to use the default value).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.IImageArchiverPlugin.SaveImageToByteArray(System.Drawing.Image,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Saves an Image to a byte array, using the specified  FormatEncoderParams.</summary>
            <returns>A  PluginOperationResult&lt;byte[]&gt; that indicates if the Plugin has handled the request. In case of success (Handled=true) the  Value property contains the image saved as array of bytes.</returns>
            <param name="image">The Image to save.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.IImageArchiverPlugin.SaveImageToFileSystem(System.Drawing.Image,System.String,CodeCarvings.Piczard.FormatEncoderParams,System.IO.FileShare)">
            <summary>Saves an Image to the file system, using the specified  FormatEncoderParams and FileShare.</summary>
            <returns>A  PluginOperationResult that indicates if the Plugin has handled the request.</returns>
            <param name="image">The Image to save.</param>
            <param name="filePath">A string that contains the name of the file to which to save the Image.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
            <param name="fileShare">The FileShare to use to open the file for writing.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.IImageArchiverPlugin.SaveImageToStream(System.Drawing.Image,System.IO.Stream,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Saves an Image to a Stream, using the specified  FormatEncoderParams.</summary>
            <returns>A  PluginOperationResult that indicates if the Plugin has handled the request.</returns>
            <param name="image">The Image to save.</param>
            <param name="stream">The open Stream where the Image will be saved.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.Plugins.IImageQuantizerPlugin">
            <summary>Defines methods that must be implemented by a Plugin class that handles custom image quantization.</summary>
            <remarks>    The quantization process is a technique that allows to     reduce the number of colors required to represent a digital     image.     For further information about color quantization please     see:                       http://en.wikipedia.org/wiki/Color_quantization         http://msdn.microsoft.com/en-us/library/aa479306.aspx               Please see also:                       Piczard         Plugins Overview         How To         Develop A Custom Plugin     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.IImageQuantizerPlugin.GetQuantizedImage">
            <summary>Gets a quantized copy of an Image.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.IImageQuantizerPlugin.GetQuantizedImage(System.Drawing.Image,System.Int32)">
            <summary>Gets a quantized copy of an Image using the specified maximum color number.</summary>
            <returns>A  PluginOperationResult&lt;Bitmap&gt; that indicates if the Plugin has handled the request. In case of success (Handled=true) the  Value property contains the quantized  Bitmap.</returns>
            <param name="image">The source image to quantize.</param>
            <param name="maxColors">The maximum number of colors the quantized image can contain (e.g. 256, 128, 64, 32, etc...).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.IImageQuantizerPlugin.GetQuantizedImage(System.Drawing.Image,CodeCarvings.Piczard.IQuantizableFormatEncoderParams)">
            <summary>Gets a quantized copy of an Image using the settings contained in the specified FormatEncoderParams object.</summary>
            <returns>A  PluginOperationResult&lt;Bitmap&gt; that indicates if the Plugin has handled the request. In case of success (Handled=true) the  Value property contains the quantized  Bitmap.</returns>
            <param name="image">The source image to quantize.</param>
            <param name="formatEncoderParams">The FormatEncoderParams object containing settings that control the image quantization.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.Plugins.IStaticLocalizationPlugin">
            <summary>Defines methods that must be implemented by a Plugin class that handles static localization.</summary>
            <remarks>    Please see:                       Localizing And         Customizing Texts         The example A.402 - "Localize &amp;         customize texts".         Piczard         Plugins Overview         How To         Develop A Custom Plugin     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.IStaticLocalizationPlugin.GetCultures">
            <summary>Gets an array containing the names of all the cultures handled by the Plugin.</summary>
            <returns>A  PluginOperationResult&lt;string[]&gt; that indicates if the Plugin has handled the request. In case of success (Handled=true) the  Value property contains an array of supported culture names (e.g. {"en", "it", "fr-CA", "fr-BE" }).</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.IStaticLocalizationPlugin.GetDictionary(System.String)">
            <summary>Gets a dictionary containing all the localized strings for a certain culture.</summary>
            <returns>A  PluginOperationResult&lt;Dictionary&lt;string, string&gt;&gt; that indicates if the Plugin has handled the request. In case of success (Handled=true) the  Value property contains the Dictionary with the localized strings.</returns>
            <param name="culture">The name of the culture that needs to be localized (e.g. "en" or "it-IT").</param>
        </member>
        <member name="T:CodeCarvings.Piczard.Plugins.Plugin">
            <summary>Represents the base class for Piczard plugins; all plugins must be objects that implement this class.</summary>
            <remarks>    Only Piczard can initialize a new instance of a      Plugin class.          Every      Plugin method that can be invoked by Piczard expects 2     types of results:                                Generic PluginOperationResult&lt;T&gt; - For methods         that produce a value.                  PluginOperationResult - For methods that do not produce         any value (void).          Moreover a      Plugin method can handle - or not handle - a particular     method invocation.     Example: if a Piczard      Plugin implements the      IDynamicLocalizationPlugin interface, then it contains the     following method:                       PluginOperationResult&lt;string&gt; GetString(string         key, string culture, string tag)          Supposing that such      Plugin handles only the "fr" language, then there are 2     kind of results:                                                     PluginOperationResult&lt;T&gt;                 with the                  Handled property set to true and the                  Value property valorized - if the culture                 parameter passed to the method by Piczard is equal                 to "fr".                                                             PluginOperationResult&lt;T&gt;                 with the                  Handled property set to false - if the culture                 parameter passed to the method by Piczard is not                 equal to "fr".                                For more informatio about Piczard Plugins please     see:                       Piczard         Plugins Overview         How To         Register A Plugin         How To         Develop A Custom Plugin     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Plugin.GetHandledResult">
            <summary>Instantiates a  PluginOperationResult object that can be returned as result by a Plugin method if the Plugin has handled the request.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Plugin.GetHandledResult``1(T)">
            <summary>Instantiates a generic  PluginOperationResult&lt;T&gt; object that can be returned as result by a Plugin method if the Plugin has handled the request..</summary>
            <returns>    A      PluginOperationResult&lt;T&gt; object that indicates that     the      Plugin has handled the request.     The      Value property contains the result of the request.</returns>
            <param name="value">The result that has to be returned by the Plugin method</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Plugin.GetHandledResult">
            <summary>Instantiates a  PluginOperationResult object that can be returned as result by a Plugin method if the Plugin has handled the request.</summary>
            <returns>A  PluginOperationResult object that indicates that the Plugin has handled the request.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Plugin.GetNotHandledResult">
            <summary>Instantiates a  PluginOperationResult object that can be returned as result by a Plugin method if the Plugin has not handled the request.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Plugin.GetNotHandledResult``1">
            <summary>Instantiates a generic  PluginOperationResult&lt;T&gt; object that can be returned as result by a Plugin method if the Plugin has not handled the request..</summary>
            <returns>A  PluginOperationResult&lt;T&gt; object that indicates that the Plugin has not handled the request.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Plugin.GetNotHandledResult">
            <summary>Instantiates a  PluginOperationResult object that can be returned as result by a Plugin method if the Plugin has not handled the request.</summary>
            <returns>A  PluginOperationResult object that indicates that the Plugin has not handled the request.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Plugin.Initialize(CodeCarvings.Piczard.Plugins.PluginInitializationArgs)">
            <summary>When overridden in a derived class, handles the initialization of the Piczard Plugin.</summary>
            <param name="initializationArgs">Argument that encapsulates the Plugin initialization settings.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Plugin.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:CodeCarvings.Piczard.Plugins.Plugin.PluginFullName">
            <summary>Gets the full name of the Plugin.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Plugins.Plugin.PluginIndex">
            <summary>Gets the index of the Plugin.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Plugins.Plugin.PluginName">
            <summary>Gets the name of the Plugin.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Plugins.Plugin.PluginVersion">
            <summary>Gets the Version of the Plugin.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Plugins.PluginConstructorArgs">
            <summary>Provides data for the constructor of the Plugin class. This class cannot be inherited.</summary>
            <remarks>    Only Piczard can initialize a new instance of a      PluginConstructorArgs class.     Please see: How To Develop A Custom     Plugin.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Plugins.PluginConstructorArgs.PluginIndex">
            <summary>Gets the index of the Plugin just instantiated.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Plugins.PluginInitializationArgs">
            <summary>Provides data for the  Initialize method of the Plugin class.</summary>
            <remarks>    Please see: How To Develop A Custom     Plugin.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.PluginInitializationArgs.ValidatePiczardVersion">
            <summary>Checks that  PluginVersion and PiczardVersion have the same major number.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.PluginInitializationArgs.ValidatePiczardVersion">
            <summary>Checks that  PluginVersion and Piczard PiczardVersion have the same major number.</summary>
            <returns>true if the major numbers are the same; otherwise false.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.PluginInitializationArgs.ValidatePiczardVersion(System.Boolean)">
            <summary>Checks that  PluginVersion and Piczard PiczardVersion have the same major number and - optionally - throw an exception.</summary>
            <returns>true if the major numbers are the same; otherwise false.</returns>
            <param name="throwException">if true, then a  IncompatibilePiczardVersionException is raised if the two major numbers are not the same.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.Plugins.PluginInitializationArgs.ConfigurationXmlNode">
            <summary>Retrieves the configuration XmlNode that contains the Plugin settings.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Plugins.PluginOperationResult">
            <summary>Represents the result of a Plugin operation; the operation does not produce any value (void); the  PluginOperationResult object indicates only if the Plugin has  Handled the operation.</summary>
            <remarks>    The      PluginOperationResult class cannot be instantiated     directly.     In order to create a new      PluginOperationResult object one of the following methods     must be invoked:                                GetHandledResult() method                  GetNotHandledResult() method          For more information please see: How To Develop A Custom     Plugin.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Plugins.PluginOperationResult.Handled">
            <summary>Gets a value indicating whether the Plugin has handled the operation or not.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Plugins.PluginOperationResult.Plugin">
            <summary>Gets the Plugin that has instantiated the PluginOperationResult object.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Plugins.PluginOperationResult`1">
            <summary>Represents the result of a Plugin operation; the operation produces a value of type T; the Generic PluginOperationResult&lt;T&gt; object also indicates if the Plugin has Handled the operation. This class cannot be inherited.</summary>
            <remarks>    The Generic PluginOperationResult&lt;T&gt; class cannot     be instantiated directly.     In order to create a new PluginOperationResult&lt;T&gt; object     one of the following methods must be invoked:                       Generic GetHandledResult(T) method         Generic GetNotHandledResult() method          For more information please see: How To Develop A Custom     Plugin.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Plugins.PluginOperationResult`1.Value">
            <summary>Gets the value produced by the Plugin operation.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Plugins.ReadOnlyPluginDictionary">
            <summary>Represents a read-only dictionary of Plugin. The key corresponds to the name of the Plugin (PluginName property). This class cannot be inherited.</summary>
            <remarks>For more information about Piczard Plugins please see: Piczard Plugins Overview</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.ReadOnlyPluginDictionary.#ctor(System.Collections.Generic.IDictionary`2{System.String,CodeCarvings.Piczard.Plugins.Plugin})">
            <summary>Initializes a new instance of the ReadOnlyPluginDictionary class that provides read-only access to the elements of the specified IDictionary&lt;string, Plugin&gt;.</summary>
            <param name="dictionary">The IDictionary&lt;string, Plugin&gt; whose elements are accessible through the read-only plugin dictionary.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.ReadOnlyPluginDictionary.Contains(System.Collections.Generic.KeyValuePair`2{System.String,CodeCarvings.Piczard.Plugins.Plugin})">
            <summary>Determines whether the  ReadOnlyPluginDictionary contains a specified KeyValuePair&lt;string, Plugin&gt;.</summary>
            <returns>true if KeyValuePair is found in the  ReadOnlyPluginDictionary; otherwise, false.</returns>
            <param name="item">The KeyValuePair&lt;string, Plugin&gt; to search for.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.ReadOnlyPluginDictionary.ContainsKey(System.String)">
            <summary>Determines whether the ReadOnlyPluginDictionary contains a Plugin with the specified name.</summary>
            <returns>true if the ReadOnlyPluginDictionary contains a Plugin with the specified PluginName; otherwise, false.</returns>
            <param name="key">The name of the Plugin.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.ReadOnlyPluginDictionary.CopyTo(System.Collections.Generic.KeyValuePair`2[],System.Int32)">
            <summary>Copies the elements of the  ReadOnlyPluginDictionary to an array of KeyValuePair&lt;TKey, TValue&gt; starting at a particular array index.</summary>
            <param name="array">The one-dimensional array that is the destination of the elements copied from  ReadOnlyPluginDictionary.</param>
            <param name="arrayIndex">The index in array at which copying begins.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.ReadOnlyPluginDictionary.GetEnumerator">
            <summary>Returns an enumerator that iterates through the  ReadOnlyPluginDictionary.</summary>
            <returns>An IEnumerator&lt;T&gt; object that can be used to iterate through the  ReadOnlyPluginDictionary.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.ReadOnlyPluginDictionary.TryGetValue(System.String,CodeCarvings.Piczard.Plugins.Plugin@)">
            <summary>Gets the Plugin associated with the specified  PluginName.</summary>
            <returns>true if the  ReadOnlyPluginDictionary contains a Plugin with the specified  PluginName; otherwise, false.</returns>
            <param name="key">The  PluginName of the Plugin to get.</param>
            <param name="value">When this method returns, contains the Plugin associated with the specified  PluginName, if the key is found; otherwise, null. This parameter is passed uninitialized.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.Plugins.ReadOnlyPluginDictionary.Count">
            <summary>Gets the number of Plugins contained in the  ReadOnlyPluginDictionary.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Plugins.ReadOnlyPluginDictionary.Item(System.String)">
            <summary>Gets a Plugin in the ReadOnlyPluginDictionary.</summary>
            <param name="key">The Name of the Plugin to get.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.Plugins.ReadOnlyPluginDictionary.Keys">
            <summary>Gets a collection containing the names of all the Plugins.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Plugins.ReadOnlyPluginDictionary.Values">
            <summary>Gets a collection containing all the Plugins in the ReadOnlyPluginDictionary.</summary>
        </member>
        <member name="N:CodeCarvings.Piczard.Plugins.Foundation">
            <summary>The CodeCarvings.Piczard.Plugins.Foundation namespace provides classes that support basic functions used as a last resort when no Plugin handles a particular request.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Plugins.Foundation.BuiltinImageArchiver">
            <summary>Provides built-in methods for loading/storing image files and managing image formats. This class cannot be inherited.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Foundation.BuiltinImageArchiver.GetDescriptionFromImageFormatId(System.Guid)">
            <summary>Gets a short description that describes a particular image format.</summary>
            <returns>A short description (e.g. "(JPG) Joint Photographic Experts Group") that describes the image format; null in case the image format is unknown.</returns>
            <param name="imageFormatId">The Guid that identifies the image format.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Foundation.BuiltinImageArchiver.GetFileExtensionFromImageFormatId(System.Guid)">
            <summary>Gets the default file extension associated with a particular image format.</summary>
            <returns>The default file extension (e.g. ".jpg") associated with the image format; null in case the image format is unknown.</returns>
            <param name="imageFormatId">The Guid that identifies the image format.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Foundation.BuiltinImageArchiver.GetFormatEncoderParams(System.Guid)">
            <summary>Gets a  FormatEncoderParams object able to handle a particular image format.</summary>
            <returns>An instance of a specific FormatEncoderParams class if it's available (e.g. JpegFormatEncoderParams for the Jpeg format); otherwise an instance of the GenericFormatEncoderParams class.</returns>
            <param name="imageFormatId">The Guid that identifies the image format.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Foundation.BuiltinImageArchiver.GetHandledFileExtensions">
            <summary>Gets an array containing the file extensions of all the image formats handled by Piczard.</summary>
            <returns>An array of handled file extensions (e.g. {".jpeg", ".jpg", ".png"}).</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Foundation.BuiltinImageArchiver.GetHandledImageFormats">
            <summary>Gets an array containing all the Guids that identify the image formats handled by Piczard.</summary>
            <returns>An array of supported image format Guids.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Foundation.BuiltinImageArchiver.GetHandledMimeTypes">
            <summary>Gets an array containing the MIME types of all the image formats handled by Piczard.</summary>
            <returns>An array of handled MIME types (e.g. {"image/jpeg", "image/png"}).</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Foundation.BuiltinImageArchiver.GetImageFormatIdFromFileExtension(System.String)">
            <summary>Gets the image format associated with a particular file extension.</summary>
            <returns>The Guid of the image format associated with the file extension; null in case the file extension is unknown.</returns>
            <param name="fileExtension">The file extension (e.g. ".jpg").</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Foundation.BuiltinImageArchiver.GetImageFormatTransparencySupport(System.Guid)">
            <summary>Gets a value indicating whether a particular image format supports transparency.</summary>
            <returns>true if the image format supports transparency; otherwise false. null in case the image format is unknown.</returns>
            <param name="imageFormatId">The Guid that identifies the image format.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Foundation.BuiltinImageArchiver.GetMimeTypeFromImageFormatId(System.Guid)">
            <summary>Gets the default MIME type associated with a particular image format.</summary>
            <returns>The MIME type (e.g. "image/jpeg") associated with the image format; null in case the image format is unknown.</returns>
            <param name="imageFormatId">The Guid that identifies the image format.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Foundation.BuiltinImageArchiver.LoadImageFromByteArray(System.Byte[],System.Nullable`1{System.Boolean},System.Nullable`1{System.Boolean})">
            <summary>Loads an image from an array of bytes.</summary>
            <returns>The Image this method creates encapsulated in an instance of the LoadedImage class.</returns>
            <param name="bytes">The byte array containing the image data.</param>
            <param name="useEmbeddedColorManagement">true to use color management information embedded in the image data; otherwise, false (null indicates to use the default value).</param>
            <param name="validateImageData">true to validate the image data; otherwise, false (null indicates to use the default value).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Foundation.BuiltinImageArchiver.LoadImageFromFileSystem(System.String,System.Nullable`1{System.Boolean},System.Nullable`1{System.Boolean},System.IO.FileShare)">
            <summary>Loads an image from the file system.</summary>
            <returns>The Image this method creates encapsulated in an instance of the LoadedImage class.</returns>
            <param name="filePath">The path of the file containing the image to load.</param>
            <param name="useEmbeddedColorManagement">true to use color management information embedded in the image data; otherwise, false (null indicates to use the default value).</param>
            <param name="validateImageData">true to validate the image data; otherwise, false (null indicates to use the default value).</param>
            <param name="fileShare">The FileShare to use to open the file for reading.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Foundation.BuiltinImageArchiver.LoadImageFromStream(System.IO.Stream,System.Nullable`1{System.Boolean},System.Nullable`1{System.Boolean})">
            <summary>Loads an image from a Stream.</summary>
            <returns>The Image this method creates encapsulated in an instance of the LoadedImage class.</returns>
            <param name="stream">An open Stream containing the image data.</param>
            <param name="useEmbeddedColorManagement">true to use color management information embedded in the image data; otherwise, false (null indicates to use the default value).</param>
            <param name="validateImageData">true to validate the image data; otherwise, false (null indicates to use the default value).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Foundation.BuiltinImageArchiver.SaveImageToByteArray(System.Drawing.Image,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Saves an Image to a byte array, using the specified  FormatEncoderParams.</summary>
            <returns>The image saved as array of bytes.</returns>
            <param name="image">The Image to save.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Foundation.BuiltinImageArchiver.SaveImageToFileSystem(System.Drawing.Image,System.String,CodeCarvings.Piczard.FormatEncoderParams,System.IO.FileShare)">
            <summary>Saves an Image to the file system, using the specified  FormatEncoderParams and FileShare.</summary>
            <param name="image">The Image to save.</param>
            <param name="filePath">A string that contains the name of the file to which to save the Image.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
            <param name="fileShare">The FileShare to use to open the file for writing.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Foundation.BuiltinImageArchiver.SaveImageToStream(System.Drawing.Image,System.IO.Stream,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Saves an Image to a Stream, using the specified  FormatEncoderParams.</summary>
            <param name="image">The Image to save.</param>
            <param name="stream">The open Stream where the Image will be saved.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.Plugins.Foundation.BuiltinImageQuantizer">
            <summary>Provides built-in methods for image quantization. This class cannot be inherited.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Foundation.BuiltinImageQuantizer.GetQuantizedImage">
            <summary>Gets a quantized copy of an Image.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Foundation.BuiltinImageQuantizer.GetQuantizedImage(System.Drawing.Image,System.Int32)">
            <summary>Gets a quantized copy of an Image using the specified maximum color number.</summary>
            <returns>A new Bitmap object containing a quantized version of the source Image.</returns>
            <param name="image">The Image to quantize.</param>
            <param name="maxColors">The maximum number of colors the quantized image can contain (e.g. 256, 128, 64, 32, etc...).</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Plugins.Foundation.BuiltinImageQuantizer.GetQuantizedImage(System.Drawing.Image,CodeCarvings.Piczard.IQuantizableFormatEncoderParams)">
            <summary>Gets a quantized copy of an Image using the settings contained in the specified FormatEncoderParams object.</summary>
            <returns>A new Bitmap object containing a quantized version of the source Image.</returns>
            <param name="image">The Image to quantize.</param>
            <param name="formatEncoderParam">The FormatEncoderParams object containing settings that control the image quantization.</param>
        </member>
        <member name="N:CodeCarvings.Piczard.Processing">
            <summary>The CodeCarvings.Piczard.Plugins.Core namespace provides classes that support the Image Processing infrastructure of Piczard.</summary>
            <remarks>Please see also: How To Develop A Custom Image Processing Filter</remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Processing.IMultiDrawModeImageProcessingFilter">
            <summary>Interface that must be implemented by ImageProcessingFilters that support different draw modes.</summary>
            <remarks>    Computer graphics is a CPU intensive operation.     In order to process images quickly, sometimes is necessary to     use pointers     or other advanced techniques.     Unfortunately not every environment allow to use these     advanced techniques.     For example, ASP.NET Medium Trust does not permit the use of     pointers.     By implementing this interface, a complex     ImageProcessingFilter can be optimized to run on different kind     of environments.     In case the environment does not allow to use certain     advanced drawing techniques (such as pointers), the filter can     use alternative drawing methods (probably much slow).</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.IMultiDrawModeImageProcessingFilter.DrawMode">
            <summary>Gets or sets the draw mode that ImageProcessingFilter must use.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Processing.ImageProcessingFilterDrawMode">
            <summary>Specifies the mode of drawing for an ImageProcessingFilter that supports multiple drawing modes.</summary>
            <remarks>    Please see also     IMultiDrawModeImageProcessingFilter.     Requires Piczard 1.1.x or higher.</remarks>
        </member>
        <member name="F:CodeCarvings.Piczard.Processing.ImageProcessingFilterDrawMode.Auto">
            <summary>The ImageProcessingFilter automatically detects the optimal draw mode (e.g. "Slow" if a non-full-trust environment prevents from using the "Fast" mode).</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Processing.ImageProcessingFilterDrawMode.Slow">
            <summary>Force the ImageProcessingFilter to use the slowest drawing mode to optimize compatibility with non full-trust environments.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Processing.ImageProcessingFilterDrawMode.Fast">
            <summary>Force the ImageProcessingFilter to use the fastest drawing mode (this could be not compatible with non-full-trust environments).</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Processing.ImageProcessingTarget">
            <summary>Specifies the type of result of an image processing workflow.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Processing.ImageProcessingTarget.MemoryBitmap">
            <summary>The generated image is not stored. A  System.Drawing.Bitmap object is returned.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Processing.ImageProcessingTarget.FileSystem">
            <summary>The generated image is stored in the file system.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Processing.ImageProcessingTarget.Stream">
            <summary>The generated image is written in a System.IO.Stream.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Processing.ImageProcessingTarget.ByteArray">
            <summary>The generated image is returned as a byte array.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Processing.ImageProcessingTarget.WebResponse">
            <summary>The generated image is transmitted through the  System.Web.HttpResponse object.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Processing.ApplyImageBackColorAction">
            <summary>Represents an ImageProcessingAction that allows to apply the ImageBackColor associated with the current ImageProcessingJob. This class cannot be inherited.</summary>
            <remarks>    Please see:                       Background         Color         How         To Develop A Custom Image Processing Filter     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ApplyImageBackColorAction.#ctor">
            <summary>Initializes a new instance of the ApplyImageBackColorAction class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ApplyImageBackColorAction.#ctor">
            <summary>Initializes a new instance of the ApplyImageBackColorAction class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ApplyImageBackColorAction.#ctor(System.Guid)">
            <summary>Initializes a new instance of the ApplyImageBackColorAction class and sets the ActionGuid.</summary>
            <param name="actionGuid">A Guid that uniquely identify the ImageProcessingAction.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ApplyImageBackColorAction.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="T:CodeCarvings.Piczard.Processing.ImageProcessingAction">
            <summary>Represents the abstract class from which every image processing action must inherit.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ImageProcessingAction.Execute(CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs)">
            <summary>Executes the current ImageProcessingAction (e.g. apply an ImageProcessingFilter in case this is an instance of the ImageProcessingFilterAction class).</summary>
            <param name="args">An instance of the ImageProcessingActionExecuteArgs class that encapsulates data concerning the image processing.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ImageProcessingAction.ActionGuid">
            <summary>Gets the Guid that uniquely identify the current ImageProcessingAction.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs">
            <summary>Encapsulates data concerning the image processing workflow. This class cannot be inherited.</summary>
            <remarks>Please see: How To Develop A Custom Image Processing Filter.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs.ApplyImageBackColor">
            <summary>Applies the ImageBackColor associated with the current ImageProcessingJob.</summary>
            <remarks>    Please see:                       Image Processing         Job (Controlling the background color of images         generated by Piczard)         How         To Develop A Custom Image Processing Filter     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs.ApplyImageBackColor">
            <summary>Applies the ImageBackColor associated with the current ImageProcessingJob to the current Image.</summary>
            <remarks>    Please see:                       Image Processing         Job (Controlling the background color of images         generated by Piczard)         How         To Develop A Custom Image Processing Filter     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs.ApplyImageBackColor(System.Drawing.Graphics)">
            <summary>Applies the ImageBackColor associated with the current ImageProcessingJob by invoking the  Clear method of the Graphics object.</summary>
            <remarks>    This method clears the entire drawing surface and fills     it with the background color.     Please see:                       Image Processing         Job (Controlling the background color of images         generated by Piczard)         How         To Develop A Custom Image Processing Filter     </remarks>
            <param name="g">The Graphics object to clear.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs.SetImageResolution">
            <summary>Sets the resolution (DPI) of the current Image to the value of the OutputResolution.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs.Actions">
            <summary>Gets a read-only collection containing all the image processing actions.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs.AppliedImageBackColorValue">
            <summary>Gets the Color applied as background to the image.</summary>
            <remarks>    Please see:                       Image Processing         Job (Controlling the background color of images         generated by Piczard)         How         To Develop A Custom Image Processing Filter     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs.CurrentAction">
            <summary>Gets a reference to the current ImageProcessingAction.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs.CurrentActionIndex">
            <summary>Gets the zero-based index of the current ImageProcessingAction inside the Actions collection.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs.FormatEncoderParams">
            <summary>Gets the  FormatEncoderParams object containing the image format parameters.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs.GlobalState">
            <summary>Gets a dictionary of state information that allows to share information across multiple ImageProcessingAction objects.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs.Image">
            <summary>Gets the current image.</summary>
            <remarks>    At the beginning of the image processing workflow the     Image property contains the source image.     Every ImageProcessingAction can alter this property, so that     the next ImageProcessingAction in the Actions list will use it     as input.     When a new value is set for the property Image, the     previous one is automatically disposed.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs.ImageProcessingJob">
            <summary>Gets the ImageProcessingJob to which the ImageProcessingActionExecuteArgs object is associated.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs.ImageProcessingTarget">
            <summary>Gets the type of result of the current image processing workflow.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs.IsLastAction">
            <summary>Gets a value indicating whether the current ImageProcessingAction is the last one to be executed.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ImageProcessingActionExecuteArgs.SourceImage">
            <summary>Gets the original source image.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Processing.ImageProcessingActionList">
            <summary>Represents a collection of ImageProcessingAction. This class cannot be inherited.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ImageProcessingActionList.#ctor">
            <summary>Initializes a new instance of the ImageProcessingActionList class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ImageProcessingActionList.#ctor">
            <summary>Initializes a new instance of the ImageProcessingActionList class that is empty.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ImageProcessingActionList.#ctor(System.Collections.Generic.IList`1{CodeCarvings.Piczard.Processing.ImageProcessingAction})">
            <summary>Initializes a new instance of the ImageProcessingActionList class as a wrapper for the specified list.</summary>
            <param name="list">The list that is wrapped by the new collection.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ImageProcessingActionList.Add">
            <summary>Adds one or more ImageProcessingAction objects to the end of the ImageProcessingActionList.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ImageProcessingActionList.Add(System.Collections.Generic.IEnumerable`1{CodeCarvings.Piczard.Processing.ImageProcessingAction})">
            <summary>Adds multiple ImageProcessingAction objects to the end of the ImageProcessingActionList.</summary>
            <param name="items">The objects to be added to the end of the ImageProcessingActionList.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ImageProcessingActionList.AsReadOnly">
            <summary>Returns a ReadOnlyImageProcessingActionList wrapper for the current collection.</summary>
            <returns>A ReadOnlyImageProcessingActionList that acts as a read-only wrapper around the current ImageProcessingActionList.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ImageProcessingActionList.Clone">
            <summary>Creates a copy of the ImageProcessingActionList.</summary>
            <returns>A copy of the ImageProcessingActionList.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ImageProcessingActionList.Contains">
            <summary>Determines whether an element is in the ImageProcessingActionList.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ImageProcessingActionList.Contains(System.Guid)">
            <summary>Determines whether an element is in the ImageProcessingActionList.</summary>
            <returns>true if item is found in the ImageProcessingActionList; otherwise, false.</returns>
            <param name="actionGuid">The Guid that uniquely identify the ImageProcessingAction.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ImageProcessingActionList.Item">
            <summary>Gets or sets an element.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ImageProcessingActionList.Item(System.Guid)">
            <summary>Gets the element with the specified ActionGuid.</summary>
            <param name="actionGuid">The Guid that uniquely identify the ImageProcessingAction.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.Processing.ImageProcessingActionLoadArgs">
            <summary>Encapsulates data concerning the "LoadActions" phase of the image processing workflow.. This class cannot be inherited.</summary>
            <remarks>Please see: How To Develop A Custom Image Processing Filter.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ImageProcessingActionLoadArgs.LoadImageProcessingActions(CodeCarvings.Piczard.ImageProcessingFilter)">
            <summary>Loads the required ImageProcessingAction objects to apply the specified ImageProcessingFilter.</summary>
            <remarks>Please see: How To Develop A Custom Image Processing Filter.</remarks>
            <param name="filter">The ImageProcessingFilter of which it's necessary to load the required ImageProcessingAction objects.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ImageProcessingActionLoadArgs.Actions">
            <summary>Gets the collection containing all the already loaded image processing actions.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ImageProcessingActionLoadArgs.FormatEncoderParams">
            <summary>Gets the  FormatEncoderParams object containing the image format parameters.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ImageProcessingActionLoadArgs.GlobalState">
            <summary>Gets a dictionary of state information that allows to share information across multiple ImageProcessingAction objects.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ImageProcessingActionLoadArgs.ImageProcessingJob">
            <summary>Gets the ImageProcessingJob to which the ImageProcessingActionLoadArgs object is associated.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ImageProcessingActionLoadArgs.ImageProcessingTarget">
            <summary>Gets the type of result of the current image processing workflow.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ImageProcessingActionLoadArgs.SourceImage">
            <summary>Gets the original source image.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Processing.ImageProcessingActionState">
            <summary>Represents a dictionary of state information that allows to share information across multiple ImageProcessingAction objects. This class cannot be inherited.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ImageProcessingActionState.#ctor">
            <summary>Initializes a new instance of the ImageProcessingActionState class.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Processing.ImageProcessingFilterAction">
            <summary>Represents an ImageProcessingAction that allows to apply an ImageProcessingFilter. This class cannot be inherited.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ImageProcessingFilterAction.#ctor">
            <summary>Initializes a new instance of the ImageProcessingFilterAction class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ImageProcessingFilterAction.#ctor(CodeCarvings.Piczard.ImageProcessingFilter)">
            <summary>Initializes a new instance of the ImageProcessingFilterAction class; the ActionGuid property is automatically generated (Guid.NewGuid()).</summary>
            <param name="filter">    The ImageProcessingFilter to which associate the     ImageProcessingFilterAction.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ImageProcessingFilterAction.#ctor(CodeCarvings.Piczard.ImageProcessingFilter,System.Guid)">
            <summary>Initializes a new instance of the ImageProcessingFilterAction class.</summary>
            <param name="filter">    The ImageProcessingFilter to which associate the     ImageProcessingFilterAction.</param>
            <param name="actionGuid">A Guid that uniquely identify the ImageProcessingAction.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ImageProcessingFilterAction.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ImageProcessingFilterAction.Filter">
            <summary>Gets the ImageProcessingFilter associated with the current ImageProcessingFilterAction.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Processing.ReadOnlyImageProcessingActionList">
            <summary>Represents a read-only collection of ImageProcessingAction. This class cannot be inherited.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ReadOnlyImageProcessingActionList.#ctor(System.Collections.Generic.IList`1{CodeCarvings.Piczard.Processing.ImageProcessingAction})">
            <summary>Initializes a new instance of the ReadOnlyImageProcessingActionList class that provides read-only access to the elements of the specified IList&lt;ImageProcessingAction&gt;.</summary>
            <param name="list">The list that is wrapped by the new collection.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ReadOnlyImageProcessingActionList.Contains">
            <summary>Determines whether an element is in the ReadOnlyImageProcessingActionList.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Processing.ReadOnlyImageProcessingActionList.Contains(System.Guid)">
            <summary>Determines whether an element is in the ReadOnlyImageProcessingActionList.</summary>
            <returns>true if item is found in the ReadOnlyImageProcessingActionList; otherwise, false.</returns>
            <param name="actionGuid">The Guid that uniquely identify the ImageProcessingAction.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ReadOnlyImageProcessingActionList.Item">
            <summary>Gets an element.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Processing.ReadOnlyImageProcessingActionList.Item(System.Guid)">
            <summary>Gets the element with the specified ActionGuid.</summary>
            <param name="actionGuid">The Guid that uniquely identify the ImageProcessingAction.</param>
        </member>
        <member name="N:CodeCarvings.Piczard.Serialization">
            <summary>The CodeCarvings.Piczard.Serialization namespace contains classes that can be used for serializing objects to JavaScript Object Notation (JSON) and deserializing objects from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Serialization.IJSONSerializable">
            <summary>Defines properties and methods that must be implemented by a class that supports JavaScript Object Notation (JSON) serialization through the JSONSerializer class.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.IJSONSerializable.GetSerializationException">
            <summary>Gets the JSONSerializationException to throw if the object cannot be serialized.</summary>
            <returns>null if the object can be serialized; otherwise a JSONSerializationException to throw;</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.IJSONSerializable.ToJSONObject(CodeCarvings.Piczard.Serialization.JSONSerializationOptions)">
            <summary>Converts the object into a representation based on the JSONObject class.</summary>
            <returns>A JSONObject instance containing the representation of the object or null.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="options">An JSONSerializationOptions object containing options necessary for the serialization process.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.IJSONSerializable.SerializationVersion">
            <summary>Get a number (current serialization version) that allows to keep track of how data are serialized.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Serialization.JSONElementType">
            <summary>Specifies the type of a JSONElement object.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="F:CodeCarvings.Piczard.Serialization.JSONElementType.Object">
            <summary>The JSONElement object is an instance of the JSONObject class.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Serialization.JSONElementType.Array">
            <summary>The JSONElement object is an instance of the JSONArray class.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Serialization.JSONElementType.String">
            <summary>The JSONElement object is an instance of the JSONString class.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Serialization.JSONElementType.Number">
            <summary>The JSONElement object is an instance of the JSONNumber class.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Serialization.JSONElementType.Bool">
            <summary>The JSONElement object is an instance of the JSONBool class.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Serialization.JSONArray">
            <summary>Represents an ordered sequence of JSON elements. This class cannot be inherited.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.#ctor">
            <summary>Initializes a new instance of the JSONArray class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.#ctor">
            <summary>Initializes a new instance of the JSONArray class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.#ctor(System.Collections.Generic.IList`1{CodeCarvings.Piczard.Serialization.JSONElement})">
            <summary>Initializes a new instance of the JSONArray class as a wrapper for the specified list.</summary>
            <param name="list">The list that is wrapped by the JSONArray.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.Add(CodeCarvings.Piczard.Serialization.JSONElement)">
            <summary>Adds a JSONElement to the end of the JSONArray.</summary>
            <param name="item">The JSONElement to be added to the end of the JSONArray.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.AddArray(CodeCarvings.Piczard.Serialization.JSONArray)">
            <summary>Adds a JSONArray to the end of this list.</summary>
            <returns>The JSONArray that was added to this list.</returns>
            <param name="value">The JSONArray to be added to the end of this list.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.AddBool(CodeCarvings.Piczard.Serialization.JSONBool)">
            <summary>Adds a JSONBool to the end of the JSONArray.</summary>
            <returns>The JSONBool that was added to the JSONArray.</returns>
            <param name="value">The JSONBool to be added to the end of the JSONArray.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.AddBoolValue(System.Nullable`1{System.Boolean})">
            <summary>Initializes a new instance of the JSONBool class with the specified value and then adds it to the end of the JSONArray.</summary>
            <returns>The JSONBool that was added to the JSONArray.</returns>
            <param name="value">The value of the JSONBool.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.AddNull">
            <summary>Adds a null value to the end of the JSONArray.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.AddNumber(CodeCarvings.Piczard.Serialization.JSONNumber)">
            <summary>Adds a JSONNumber to the end of the JSONArray.</summary>
            <returns>The JSONNumber that was added to the JSONArray.</returns>
            <param name="value">The JSONNumber to be added to the end of the JSONArray.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.AddNumberValue(System.Nullable`1{System.Decimal})">
            <summary>Initializes a new instance of the JSONNumber class with the specified value and then adds it to the end of the JSONArray.</summary>
            <returns>The JSONNumber that was added to the JSONArray.</returns>
            <param name="value">The value of the JSONNumber.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.AddObject(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Adds a JSONObject to the end of the JSONArray.</summary>
            <returns>The JSONObject that was added to the JSONArray.</returns>
            <param name="value">The JSONObject to be added to the end of the JSONArray.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.AddString(CodeCarvings.Piczard.Serialization.JSONString)">
            <summary>Adds a JSONString to the end of the JSONArray.</summary>
            <returns>The JSONString that was added to the JSONArray.</returns>
            <param name="value">The JSONString to be added to the end of the JSONArray.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.AddStringValue(System.String)">
            <summary>Initializes a new instance of the JSONString class with the specified value and then adds it to the end of the JSONArray.</summary>
            <returns>The JSONString that was added to the JSONArray.</returns>
            <param name="value">The value of the JSONString.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.Clear">
            <summary>Removes all elements from the JSONArray.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.Clone">
            <summary>Creates a copy of the JSONArray.</summary>
            <returns>A copy of the JSONArray.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.Contains(CodeCarvings.Piczard.Serialization.JSONElement)">
            <summary>Determines whether a JSONElement is in the JSONArray.</summary>
            <returns>true if item is found in the JSONArray; otherwise, false.</returns>
            <param name="item">The object to locate in the JSONArray.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.CopyTo(CodeCarvings.Piczard.Serialization.JSONElement[],System.Int32)">
            <summary>Copies the entire JSONArray to a compatible one-dimensional System.Array, starting at the specified index of the target array.</summary>
            <param name="array">The one-dimensional System.Array that is the destination of the elements copied from JSONArray. The System.Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.Decode">
            <summary>Initializes a new instance of the JSONArray class by decoding the specified JSON string.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.Decode(System.String,CodeCarvings.Piczard.Serialization.JSONDecodingOptions)">
            <summary>Initializes a new instance of the JSONArray class by decoding the specified JSON string with the the provided JSONDecodingOptions.</summary>
            <returns>The instance of the JSONArray class.</returns>
            <param name="str">The JSON string to parse.</param>
            <param name="options">An instance of the JSONDecodingOptions class containing data for the JSON decoding process.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.Decode(System.String)">
            <summary>Initializes a new instance of the JSONArray class by decoding the specified JSON string.</summary>
            <returns>The instance of the JSONArray class.</returns>
            <param name="str">The JSON string to parse.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.GetArray(System.Int32)">
            <summary>Gets the JSONArray element at the specified index.</summary>
            <returns>The JSONArray element at the specified index.</returns>
            <param name="index">The zero-based index of the JSONArray element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.GetBool(System.Int32)">
            <summary>Gets the JSONBool element at the specified index.</summary>
            <returns>The JSONBool element at the specified index.</returns>
            <param name="index">The zero-based index of the JSONBool element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.GetBoolValue(System.Int32)">
            <summary>Gets the Value of the JSONBool element at the specified index.</summary>
            <returns>The Value of the JSONBool element at the specified index; null in case the element was not found.</returns>
            <param name="index">The zero-based index of the element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.GetEnumerator">
            <summary>Returns an enumerator that iterates through the JSONArray.</summary>
            <returns>An IEnumerator&lt;JSONElement&gt; for the JSONArray.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.GetNull(System.Int32)">
            <summary>Gets a value indicating whether the element (or its value) at the specified index is null.</summary>
            <returns>true if the element (or its value) at the specified index is null; otherwise, false.</returns>
            <param name="index">The zero-based index of the element.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.GetNumber(System.Int32)">
            <summary>Gets the JSONNumber element at the specified index.</summary>
            <returns>The JSONNumber element at the specified index.</returns>
            <param name="index">The zero-based index of the JSONNumber element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.GetNumberDecimalValue(System.Int32)">
            <summary>Gets the DecimalValue of the JSONNumber element at the specified index.</summary>
            <returns>The DecimalValue of the JSONNumber element at the specified index; null in case the element was not found.</returns>
            <param name="index">The zero-based index of the JSONNumber element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.GetNumberInt32Value(System.Int32)">
            <summary>Gets the Int32Value of the JSONNumber element at the specified index.</summary>
            <returns>The Int32Value of the JSONNumber element at the specified index; null in case the element was not found.</returns>
            <param name="index">The zero-based index of the JSONNumber element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.GetNumberSingleValue(System.Int32)">
            <summary>Gets the SingleValue of the JSONNumber element at the specified index.</summary>
            <returns>The SingleValue of the JSONNumber element at the specified index; null in case the element was not found.</returns>
            <param name="index">The zero-based index of the element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.GetObject(System.Int32)">
            <summary>Gets the JSONObject element at the specified index.</summary>
            <returns>The JSONObject element at the specified index.</returns>
            <param name="index">The zero-based index of the element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.GetString(System.Int32)">
            <summary>Gets the JSONString element at the specified index.</summary>
            <returns>The JSONString element at the specified index.</returns>
            <param name="index">The zero-based index of the element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.GetStringValue(System.Int32)">
            <summary>Gets the Value of the JSONString element at the specified index.</summary>
            <returns>The Value of the JSONString element at the specified index; null in case the element was not found.</returns>
            <param name="index">The zero-based index of the element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.IndexOf(CodeCarvings.Piczard.Serialization.JSONElement)">
            <summary>Searches for the specified JSONElement and returns the zero-based index of the first occurrence within the entire JSONArray.</summary>
            <returns>The zero-based index of the first occurrence of item within the entire JSONArray, if found; otherwise, -1.</returns>
            <param name="item">The JSONElement to locate in the JSONArray.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.Insert(System.Int32,CodeCarvings.Piczard.Serialization.JSONElement)">
            <summary>Inserts a JSONElement into the JSONArray at the specified index.</summary>
            <param name="index">The zero-based index at which JSONElement should be inserted.</param>
            <param name="item">The JSONElement to insert.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.Remove(CodeCarvings.Piczard.Serialization.JSONElement)">
            <summary>Removes the first occurrence of a specific JSONElement from the JSONArray.</summary>
            <returns>true if JSONElement is successfully removed; otherwise, false. This method also returns false if JSONElement was not found in the JSONArray.</returns>
            <param name="item">The JSONElement to remove from the JSONArray.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.RemoveAt(System.Int32)">
            <summary>Removes the JSONElement at the specified index of the JSONArray.</summary>
            <param name="index">The zero-based index of the JSONElement to remove.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.SetArray(System.Int32,CodeCarvings.Piczard.Serialization.JSONArray)">
            <summary>Sets the JSONArray element at the specified index.</summary>
            <returns>The JSONArray element that was set.</returns>
            <param name="index">The zero-based index of the JSONArray element to set.</param>
            <param name="value">The JSONArray element to set.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.SetBool(System.Int32,CodeCarvings.Piczard.Serialization.JSONBool)">
            <summary>Sets the JSONBool element at the specified index.</summary>
            <returns>The JSONBool element that was set.</returns>
            <param name="index">The zero-based index of the JSONBool element to set.</param>
            <param name="value">The JSONBool element to set.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.SetBoolValue(System.Int32,System.Nullable`1{System.Boolean})">
            <summary>Initializes a new instance of the JSONBool class with the provided value and then sets the new element at the specified index.</summary>
            <returns>The JSONBool element that was set.</returns>
            <param name="index">The zero-based index of the JSONBool element to set.</param>
            <param name="value">The value of the JSONBool.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.SetNull(System.Int32)">
            <summary>Sets the item at the specified index to null.</summary>
            <param name="index">The zero-based index of the item to set.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.SetNumber(System.Int32,CodeCarvings.Piczard.Serialization.JSONNumber)">
            <summary>Sets the JSONNumber element at the specified index.</summary>
            <returns>The JSONNumber element that was set.</returns>
            <param name="index">The zero-based index of the JSONNumber element to set.</param>
            <param name="value">The JSONNumber element to set.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.SetNumberValue(System.Int32,System.Nullable`1{System.Decimal})">
            <summary>Initializes a new instance of the JSONNumber class with the provided value and then sets the new element at the specified index.</summary>
            <returns>The JSONNumber element that was set.</returns>
            <param name="index">The zero-based index of the JSONNumber element to set.</param>
            <param name="value">The value of the JSONNumber.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.SetObject(System.Int32,CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Sets the JSONObject element at the specified index.</summary>
            <returns>The JSONObject element that was set.</returns>
            <param name="index">The zero-based index of the JSONObject element to set.</param>
            <param name="value">The JSONObject element to set.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.SetString(System.Int32,CodeCarvings.Piczard.Serialization.JSONString)">
            <summary>Sets the JSONString element at the specified index.</summary>
            <returns>The JSONString element that was set.</returns>
            <param name="index">The zero-based index of the JSONString element to set.</param>
            <param name="value">The JSONString element to set.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONArray.SetStringValue(System.Int32,System.String)">
            <summary>Initializes a new instance of the JSONString class with the provided value and then sets the new element at the specified index.</summary>
            <returns>The JSONString element that was set.</returns>
            <param name="index">The zero-based index of the JSONString element to set.</param>
            <param name="value">The value of the JSONString.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONArray.Count">
            <summary>Gets the number of elements actually contained in the JSONArray.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONArray.ElementType">
            <summary>Gets the type of the JSONElement.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONArray.IsReadOnly">
            <summary>Gets a value indicating whether the JSONArray is read-only.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONArray.Item(System.Int32)">
            <summary>Gets or sets the JSONElement at the specified index.</summary>
            <param name="index">The zero-based index of the JSONElement to get or set.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.Serialization.JSONBool">
            <summary>Represents a boolean JSON value. This class cannot be inherited.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONBool.#ctor">
            <summary>Initializes a new instance of the JSONBool class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONBool.#ctor">
            <summary>Initializes a new instance of the JSONBool class; the Value property is set to null.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONBool.#ctor(System.Nullable`1{System.Boolean})">
            <summary>Initializes a new instance of the JSONBool class.</summary>
            <param name="value">The value of the JSONBool.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONBool.Clone">
            <summary>Creates a copy of the JSONBool.</summary>
            <returns>A copy of the JSONBool.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONBool.Decode">
            <summary>Initializes a new instance of the JSONBool class by decoding the specified JSON string.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONBool.Decode(System.String,CodeCarvings.Piczard.Serialization.JSONDecodingOptions)">
            <summary>Initializes a new instance of the JSONBool class by decoding the specified JSON string with the the provided JSONDecodingOptions.</summary>
            <returns>The instance of the JSONBool class.</returns>
            <param name="str">The JSON string to parse.</param>
            <param name="options">An instance of the JSONDecodingOptions class containing data for the JSON decoding process.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONBool.Decode(System.String)">
            <summary>Initializes a new instance of the JSONBool class by decoding the specified JSON string.</summary>
            <returns>The instance of the JSONBool class.</returns>
            <param name="str">The JSON string to parse.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONBool.ElementType">
            <summary>Gets the type of the JSONElement.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONBool.Value">
            <summary>Gets or sets the value of the JSONBool.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Serialization.JSONConverter">
            <summary>Provides methods for serializing basic types to and from JSON. This class cannot be inherited.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromColor">
            <summary>Serializes the specified Color object into a JSONObject.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromColor(System.Nullable`1{System.Drawing.Color},CodeCarvings.Piczard.Serialization.JSONSerializationOptions)">
            <summary>Serializes the specified Color object into a JSONObject using the provided JSONSerializationOptions.</summary>
            <returns>An instance of the JSONObject class containing the representation of the original Color object.</returns>
            <param name="value">The Color object to serialize.</param>
            <param name="options">An instance of the JSONSerializationOptions class containing data for the JSON serialization process.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromColor(System.Nullable`1{System.Drawing.Color})">
            <summary>Serializes the specified Color object into a JSONObject.</summary>
            <returns>An instance of the JSONObject class containing the representation of the original Color object.</returns>
            <param name="value">The Color object to serialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromColorMatrix">
            <summary>Serializes the specified ColorMatrix object into a JSONObject.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromColorMatrix(System.Drawing.Imaging.ColorMatrix,CodeCarvings.Piczard.Serialization.JSONSerializationOptions)">
            <summary>Serializes the specified ColorMatrix object into a JSONObject using the provided JSONSerializationOptions.</summary>
            <returns>An instance of the JSONObject class containing the representation of the original ColorMatrix object.</returns>
            <param name="value">The ColorMatrix object to serialize.</param>
            <param name="options">An instance of the JSONSerializationOptions class containing data for the JSON serialization process.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromColorMatrix(System.Drawing.Imaging.ColorMatrix)">
            <summary>Serializes the specified ColorMatrix object into a JSONObject.</summary>
            <returns>An instance of the JSONObject class containing the representation of the original ColorMatrix object.</returns>
            <param name="value">The ColorMatrix object to serialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromPoint">
            <summary>Serializes the specified Point object into a JSONObject.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromPoint(System.Nullable`1{System.Drawing.Point},CodeCarvings.Piczard.Serialization.JSONSerializationOptions)">
            <summary>Serializes the specified Point object into a JSONObject using the provided JSONSerializationOptions.</summary>
            <returns>An instance of the JSONObject class containing the representation of the original Point object.</returns>
            <param name="value">The Point object to serialize.</param>
            <param name="options">An instance of the JSONSerializationOptions class containing data for the JSON serialization process.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromPoint(System.Nullable`1{System.Drawing.Point})">
            <summary>Serializes the specified Point object into a JSONObject.</summary>
            <returns>An instance of the JSONObject class containing the representation of the original Point object.</returns>
            <param name="value">The Point object to serialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromPointF">
            <summary>Serializes the specified PointF object into a JSONObject.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromPointF(System.Nullable`1{System.Drawing.PointF},CodeCarvings.Piczard.Serialization.JSONSerializationOptions)">
            <summary>Serializes the specified PointF object into a JSONObject using the provided JSONSerializationOptions.</summary>
            <returns>An instance of the JSONObject class containing the representation of the original PointF object.</returns>
            <param name="value">The PointF object to serialize.</param>
            <param name="options">An instance of the JSONSerializationOptions class containing data for the JSON serialization process.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromPointF(System.Nullable`1{System.Drawing.PointF})">
            <summary>Serializes the specified PointF object into a JSONObject.</summary>
            <returns>An instance of the JSONObject class containing the representation of the original PointF object.</returns>
            <param name="value">The PointF object to serialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromRectangle">
            <summary>Serializes the specified Rectangle object into a JSONObject.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromRectangle(System.Nullable`1{System.Drawing.Rectangle},CodeCarvings.Piczard.Serialization.JSONSerializationOptions)">
            <summary>Serializes the specified Rectangle object into a JSONObject using the provided JSONSerializationOptions.</summary>
            <returns>An instance of the JSONObject class containing the representation of the original Rectangle object.</returns>
            <param name="value">The Rectangle object to serialize.</param>
            <param name="options">An instance of the JSONSerializationOptions class containing data for the JSON serialization process.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromRectangle(System.Nullable`1{System.Drawing.Rectangle})">
            <summary>Serializes the specified Rectangle object into a JSONObject.</summary>
            <returns>An instance of the JSONObject class containing the representation of the original Rectangle object.</returns>
            <param name="value">The Rectangle object to serialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromRectangleF">
            <summary>Serializes the specified RectangleF object into a JSONObject.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromRectangleF(System.Nullable`1{System.Drawing.RectangleF},CodeCarvings.Piczard.Serialization.JSONSerializationOptions)">
            <summary>Serializes the specified RectangleF object into a JSONObject using the provided JSONSerializationOptions.</summary>
            <returns>An instance of the JSONObject class containing the representation of the original RectangleF object.</returns>
            <param name="value">The RectangleF object to serialize.</param>
            <param name="options">An instance of the JSONSerializationOptions class containing data for the JSON serialization process.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromRectangleF(System.Nullable`1{System.Drawing.RectangleF})">
            <summary>Serializes the specified RectangleF object into a JSONObject.</summary>
            <returns>An instance of the JSONObject class containing the representation of the original RectangleF object.</returns>
            <param name="value">The RectangleF object to serialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromSize">
            <summary>Serializes the specified Size object into a JSONObject.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromSize(System.Nullable`1{System.Drawing.Size},CodeCarvings.Piczard.Serialization.JSONSerializationOptions)">
            <summary>Serializes the specified Size object into a JSONObject using the provided JSONSerializationOptions.</summary>
            <returns>An instance of the JSONObject class containing the representation of the original Size object.</returns>
            <param name="value">The Size object to serialize.</param>
            <param name="options">An instance of the JSONSerializationOptions class containing data for the JSON serialization process.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromSize(System.Nullable`1{System.Drawing.Size})">
            <summary>Serializes the specified Size object into a JSONObject.</summary>
            <returns>An instance of the JSONObject class containing the representation of the original Size object.</returns>
            <param name="value">The Size object to serialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromSizeF">
            <summary>Serializes the specified SizeF object into a JSONObject.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromSizeF(System.Nullable`1{System.Drawing.SizeF},CodeCarvings.Piczard.Serialization.JSONSerializationOptions)">
            <summary>Serializes the specified SizeF object into a JSONObject using the provided JSONSerializationOptions.</summary>
            <returns>An instance of the JSONObject class containing the representation of the original SizeF object.</returns>
            <param name="value">The SizeF object to serialize.</param>
            <param name="options">An instance of the JSONSerializationOptions class containing data for the JSON serialization process.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.FromSizeF(System.Nullable`1{System.Drawing.SizeF})">
            <summary>Serializes the specified SizeF object into a JSONObject.</summary>
            <returns>An instance of the JSONObject class containing the representation of the original SizeF object.</returns>
            <param name="value">The SizeF object to serialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.ToColor(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes the specified JSONObject into a Color object.</summary>
            <returns>The deserialized Color.</returns>
            <param name="value">An instance of the JSONObject class containing the representation of the Color object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.ToColorMatrix(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes the specified JSONObject into a ColorMatrix object.</summary>
            <returns>The deserialized ColorMatrix.</returns>
            <param name="value">An instance of the JSONObject class containing the representation of the ColorMatrix object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.ToPoint(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes the specified JSONObject into a Point object.</summary>
            <returns>The deserialized Point.</returns>
            <param name="value">An instance of the JSONObject class containing the representation of the Point object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.ToPointF(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes the specified JSONObject into a PointF object.</summary>
            <returns>The deserialized PointF.</returns>
            <param name="value">An instance of the JSONObject class containing the representation of the PointF object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.ToRectangle(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes the specified JSONObject into a Rectangle object.</summary>
            <returns>The deserialized Rectangle.</returns>
            <param name="value">An instance of the JSONObject class containing the representation of the Rectangle object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.ToRectangleF(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes the specified JSONObject into a RectangleF object.</summary>
            <returns>The deserialized RectangleF.</returns>
            <param name="value">An instance of the JSONObject class containing the representation of the RectangleF object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.ToSize(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes the specified JSONObject into a Size object.</summary>
            <returns>The deserialized Size.</returns>
            <param name="value">An instance of the JSONObject class containing the representation of the Size object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONConverter.ToSizeF(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes the specified JSONObject into a SizeF object.</summary>
            <returns>The deserialized SizeF.</returns>
            <param name="value">An instance of the JSONObject class containing the representation of the SizeF object.</param>
        </member>
        <member name="F:CodeCarvings.Piczard.Serialization.JSONConverter.SerializationVersion">
            <summary>Represents the serialization version number used by the JSONConverter class. This field is constant.</summary>
            <remarks>Currently the value of this constant is 1 (note: this may changes in future versions of Piczard).</remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Serialization.JSONDecodingOptions">
            <summary>Provides data for the JSON decoding process. This class cannot be inherited.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONDecodingOptions.#ctor">
            <summary>Initializes a new instance of the JSONDecodingOptions class.Initializes a new instance of the JSONDecodingOptions class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONDecodingOptions.#ctor">
            <summary>Initializes a new instance of the JSONDecodingOptions class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONDecodingOptions.#ctor(System.Boolean)">
            <summary>    Initializes a new instance of the     JSONDecodingOptions class and sets the value of the     DecodeNumbersAsStrings property.</summary>
            <param name="decodeNumbersAsStrings">A value indicating whether number tokens have to be deserialized as strings.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONDecodingOptions.Clone">
            <summary>Creates a copy of the JSONDecodingOptions object.</summary>
            <returns>A copy of the JSONDecodingOptions object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONDecodingOptions.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONDecodingOptions.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONDecodingOptions.DecodeNumbersAsStrings">
            <summary>Gets or sets a value indicating whether number tokens have to be deserialized as strings.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONDecodingOptions.Default">
            <summary>Initializes a new instance of the JSONDecodingOptions class with the default settings.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Serialization.JSONDeserializationException">
            <summary>The exception that is thrown when Piczard is unable to deserialize a JSONObject or deserialize a JSON string.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONDeserializationException.#ctor">
            <summary>Initializes a new instance of the JSONDeserializationException class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONDeserializationException.#ctor">
            <summary>Initializes a new instance of the JSONDeserializationException class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONDeserializationException.#ctor(System.String)">
            <summary>Initializes a new instance of the JSONDeserializationException class with a specified error message.</summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONDeserializationException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the JSONDeserializationException class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.Serialization.JSONElement">
            <summary>Represents the abstract class from which every JSON element must inherit.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONElement.Clone">
            <summary>Creates a copy of the JSONElement.</summary>
            <returns>A copy of the JSONElement.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONElement.Decode">
            <summary>Initializes a new JSONElement by decoding the specified JSON string.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONElement.Decode(System.String,CodeCarvings.Piczard.Serialization.JSONDecodingOptions)">
            <summary>Initializes a new JSONElement by decoding the specified JSON string with the the provided JSONDecodingOptions.</summary>
            <returns>The JSONElement.</returns>
            <param name="str">The JSON string to parse.</param>
            <param name="options">An instance of the JSONDecodingOptions class containing data for the JSON decoding process.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONElement.Decode(System.String)">
            <summary>Initializes a new iJSONElement by decoding the specified JSON string.</summary>
            <returns>The JSONElement.</returns>
            <param name="str">The JSON string to parse.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONElement.Encode">
            <summary>Encodes the current JSONElement to a JSON string.</summary>
            <returns>A string containing the JSON representation of current JSONElement.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONElement.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONElement.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONElement.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONElement.ElementType">
            <summary>Gets the type of the JSONElement.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Serialization.JSONInvalidObjectException">
            <summary>The exception that is thrown when it is not possible to deserialize an instance of a class from a JSONObject.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONInvalidObjectException.#ctor">
            <summary>Initializes a new instance of the JSONInvalidObjectException class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONInvalidObjectException.#ctor">
            <summary>Initializes a new instance of the JSONInvalidObjectException class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONInvalidObjectException.#ctor(System.String)">
            <summary>Initializes a new instance of the JSONInvalidObjectException class with a specified error message.</summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONInvalidObjectException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the JSONInvalidObjectException class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONInvalidObjectException.#ctor(System.Type)">
            <summary>Initializes a new instance of the JSONInvalidObjectException class; the specified Type cannot be deserialized with the provided JSONObject.</summary>
            <param name="t">The Type that cannot be deserialized.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.Serialization.JSONNonSerializableObjectException">
            <summary>The exception that is thrown when trying to Serialize an instance of a class that does not implement the IJSONSerializable interface..</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONNonSerializableObjectException.#ctor">
            <summary>Initializes a new instance of the JSONNonSerializableObjectException class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONNonSerializableObjectException.#ctor">
            <summary>Initializes a new instance of the JSONNonSerializableObjectException class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONNonSerializableObjectException.#ctor(System.String)">
            <summary>Initializes a new instance of the JSONNonSerializableObjectException class with a specified error message.</summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONNonSerializableObjectException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the JSONNonSerializableObjectException class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.Serialization.JSONNumber">
            <summary>Represents a numeric JSON value. This class cannot be inherited.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONNumber.#ctor">
            <summary>Initializes a new instance of the JSONNumber class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONNumber.#ctor">
            <summary>Initializes a new instance of the JSONNumber class; the value is set to null.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONNumber.#ctor(System.Nullable`1{System.Decimal})">
            <summary>Initializes a new instance of the JSONNumber class;</summary>
            <param name="value">The value of the JSONNumber.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONNumber.Clone">
            <summary>Creates a copy of the JSONNumber.</summary>
            <returns>A copy of the JSONNumber.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONNumber.Decode">
            <summary>Initializes a new instance of the JSONNumber class by decoding the specified JSON string.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONNumber.Decode(System.String,CodeCarvings.Piczard.Serialization.JSONDecodingOptions)">
            <summary>Initializes a new instance of the JSONNumber class by decoding the specified JSON string with the the provided JSONDecodingOptions.</summary>
            <returns>The instance of the JSONNumber class.</returns>
            <param name="str">The JSON string to parse.</param>
            <param name="options">An instance of the JSONDecodingOptions class containing data for the JSON decoding process.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONNumber.Decode(System.String)">
            <summary>Initializes a new instance of the JSONNumber class by decoding the specified JSON string.</summary>
            <returns>The instance of the JSONNumber class.</returns>
            <param name="str">The JSON string to parse.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONNumber.DecimalValue">
            <summary>Gets or sets the value of the JSONNumber.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONNumber.ElementType">
            <summary>Gets the type of the JSONElement.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONNumber.Int32Value">
            <summary>Gets or sets the value of the JSONNumber converted to Int32.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONNumber.SingleValue">
            <summary>Gets or sets the value of the JSONNumber converted to single precision</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Serialization.JSONObject">
            <summary>Represents an ordered collection of key/value pairs. This class cannot be inherited.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.#ctor">
            <summary>Initializes a new instance of the JSONObject class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.Add">
            <summary>Adds a JSONElement to the end of the JSONObject with the specified key.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.Add(System.String,CodeCarvings.Piczard.Serialization.JSONElement)">
            <summary>Adds a JSONElement to the end of the JSONObject with the specified key.</summary>
            <param name="key">The unique key that identifies the JSONElement in the JSONObject.</param>
            <param name="value">The JSONElement to be added to the end of the JSONObject.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.Add(System.Collections.Generic.KeyValuePair`2{System.String,CodeCarvings.Piczard.Serialization.JSONElement})">
            <summary>Adds a JSONElement to the end of the JSONObject with the specified key.</summary>
            <param name="item">A KeyValuePair object containing the the JSONElement to be added to the end of the JSONObject.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.Clear">
            <summary>Removes all elements from the JSONObject.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.Clone">
            <summary>Creates a copy of the JSONObject.</summary>
            <returns>A copy of the JSONObject.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.Contains(System.Collections.Generic.KeyValuePair`2{System.String,CodeCarvings.Piczard.Serialization.JSONElement})">
            <summary>Determines whether the JSONObject contains a specific item.</summary>
            <returns>true if item is found in the System.Collections.Generic.ICollection&lt;T&gt;; otherwise, false.</returns>
            <param name="item">The item to locate in the JSONObject.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.ContainsKey(System.String)">
            <summary>Determines whether the JSONObject contains a JSONElement with the specified key.</summary>
            <returns>true if the JSONObject contains a JSONElement with the key; otherwise, false.</returns>
            <param name="key">The key to locate in the JSONObject.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.CopyTo(System.Collections.Generic.KeyValuePair`2[],System.Int32)">
            <summary>Copies the entire JSONObject to a compatible one-dimensional System.Array, starting at the specified index of the target array.</summary>
            <param name="array">The one-dimensional System.Array that is the destination of the items copied from JSONObject. The System.Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.Decode">
            <summary>Initializes a new instance of the JSONObject class by decoding the specified JSON string.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.Decode(System.String,CodeCarvings.Piczard.Serialization.JSONDecodingOptions)">
            <summary>Initializes a new instance of the JSONObject class by decoding the specified JSON string with the the provided JSONDecodingOptions.</summary>
            <returns>The instance of the JSONObject class.</returns>
            <param name="str">The JSON string to parse.</param>
            <param name="options">An instance of the JSONDecodingOptions class containing data for the JSON decoding process.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.Decode(System.String)">
            <summary>Initializes a new instance of the JSONObject class by decoding the specified JSON string.</summary>
            <returns>The instance of the JSONObject class.</returns>
            <param name="str">The JSON string to parse.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.GetArray(System.String)">
            <summary>Gets the JSONArray element with the specified key.</summary>
            <returns>The JSONArray element with the specified key.</returns>
            <param name="key">The key of the JSONArray element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.GetBool(System.String)">
            <summary>Gets the JSONBool element with the specified key.</summary>
            <returns>The JSONBool element with the specified key.</returns>
            <param name="key">The key of the JSONBool element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.GetBoolValue(System.String)">
            <summary>Gets the Value of the JSONBool element with the specified key.</summary>
            <returns>The Value of the JSONBool element with the specified key; null in case the element was not found.</returns>
            <param name="key">The key of the element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.GetEnumerator">
            <summary>Returns an enumerator that iterates through the JSONObject.</summary>
            <returns>An IEnumerator&lt;KeyValuePair&lt;string,  JSONElement&gt;&gt; for the JSONObject.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.GetKey(System.Int32)">
            <summary>Gets the key of the element at the specified index.</summary>
            <returns>The unique key that identifies the element at the specified index in the JSONObject.</returns>
            <param name="index">The zero-based index of the element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.GetNull(System.String)">
            <summary>Gets a value indicating whether the element (or its value) with the specified key is null.</summary>
            <returns>true if the element (or its value) with the specified key is null; otherwise, false.</returns>
            <param name="key">The key of the element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.GetNumber(System.String)">
            <summary>Gets the JSONNumber element with the specified key.</summary>
            <returns>The JSONNumber element with the specified key.</returns>
            <param name="key">The key of the JSONNumber element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.GetNumberDecimalValue(System.String)">
            <summary>Gets the DecimalValue of the JSONNumber element with the specified key.</summary>
            <returns>The DecimalValue of the JSONNumber element with the specified key; null in case the element was not found.</returns>
            <param name="key">The key of the element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.GetNumberInt32Value(System.String)">
            <summary>Gets the Int32Value of the JSONNumber element with the specified key.</summary>
            <returns>The Int32Value of the JSONNumber element with the specified key; null in case the element was not found.</returns>
            <param name="key">The key of the element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.GetNumberSingleValue(System.String)">
            <summary>Gets the SingleValue of the JSONNumber element with the specified key.</summary>
            <returns>The SingleValue of the JSONNumber element with the specified key; null in case the element was not found.</returns>
            <param name="key">The key of the element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.GetObject(System.String)">
            <summary>Gets the JSONObject element with the specified key.</summary>
            <returns>The JSONObject element with the specified key.</returns>
            <param name="key">The key of the JSONObject element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.GetSerializationType">
            <summary>Gets the instance of the Type class whose name is specified by the SerializationType property.</summary>
            <returns>The instance of the Type class whose name is specified by the SerializationType property.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.GetSerializationVersion">
            <summary>Gets the serialization version of the object.</summary>
            <returns>The value of the SerializationVersion property if different from null; otherwise the value of the constant JSONSerializer.DefaultVersion.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.GetString(System.String)">
            <summary>Gets the JSONString element with the specified key.</summary>
            <returns>The JSONString element with the specified key.</returns>
            <param name="key">The key of the JSONString element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.GetStringValue(System.String)">
            <summary>Gets the Value of the JSONString element with the specified key.</summary>
            <returns>The Value of the JSONString element with the specified key; null in case the element was not found.</returns>
            <param name="key">The key of the element to get.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.Remove">
            <summary>Removes a JSONElement from the JSONObject.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.Remove(System.String)">
            <summary>Removes the JSONElement with the specified key from the JSONObject.</summary>
            <returns>true if the JSONElement is successfully removed; otherwise, false. This method also returns false if key was not found in JSONObject.</returns>
            <param name="key">The key of the JSONElement to remove.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.Remove(System.Collections.Generic.KeyValuePair`2{System.String,CodeCarvings.Piczard.Serialization.JSONElement})">
            <summary>Removes a specific item from the JSONObject.</summary>
            <returns>true if item was successfully removed from the JSONObject; otherwise, false. This method also returns false if item is not found in the JSONObject.</returns>
            <param name="item">The item to remove from the JSONObject.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.SetArray(System.String,CodeCarvings.Piczard.Serialization.JSONArray)">
            <summary>Sets the JSONArray element with the specified key.</summary>
            <returns>The JSONArray element that was set.</returns>
            <param name="key">The key of the JSONArray element to set.</param>
            <param name="value">The JSONArray element to set.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.SetBool(System.String,CodeCarvings.Piczard.Serialization.JSONBool)">
            <summary>Sets the JSONBool element with the specified key.</summary>
            <returns>The JSONBool element that was set.</returns>
            <param name="key">The key of the JSONBool element to set.</param>
            <param name="value">The JSONBool element to set.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.SetBoolValue(System.String,System.Nullable`1{System.Boolean})">
            <summary>Initializes a new instance of the JSONBool class with the provided value and then sets the new element with the specified key.</summary>
            <returns>The JSONBool element that was set.</returns>
            <param name="key">The key of the JSONBool element to set.</param>
            <param name="value">The value of the JSONBool.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.SetNull(System.String)">
            <summary>Sets the item with the specified key to null. </summary>
            <param name="key">The key of the element to set.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.SetNumber(System.String,CodeCarvings.Piczard.Serialization.JSONNumber)">
            <summary>Sets the JSONNumber element with the specified key.</summary>
            <returns>The JSONNumber element that was set.</returns>
            <param name="key">The key of the JSONNumber element to set.</param>
            <param name="value">The JSONNumber element to set.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.SetNumberValue(System.String,System.Nullable`1{System.Decimal})">
            <summary>Initializes a new instance of the JSONNumber class with the provided value and then sets the new element with the specified key.</summary>
            <returns>The JSONNumber element that was set.</returns>
            <param name="key">The key of the JSONNumber element to set.</param>
            <param name="value">The value of the JSONNumber.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.SetObject(System.String,CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Sets the JSONObject element with the specified key.</summary>
            <returns>The JSONObject element that was set.</returns>
            <param name="key">The key of the JSONObject element to set.</param>
            <param name="value">The JSONObject element to set.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.SetSerializationType(System.Type,System.Boolean)">
            <summary>Sets the value of the SerializationType property to the name of the specified Type.</summary>
            <param name="type">The instance of the Type class whose name must be stored in the SerializationType property.</param>
            <param name="useAssemblyQualifiedNames">if true uses  Type.AssemblyQualifiedName as type name; otherwise uses  Type.FullName +  assembly name.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.SetString(System.String,CodeCarvings.Piczard.Serialization.JSONString)">
            <summary>Sets the JSONString element with the specified key.</summary>
            <returns>The JSONString element that was set.</returns>
            <param name="key">The key of the JSONString element to set.</param>
            <param name="value">The JSONString element to set.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.SetStringValue(System.String,System.String)">
            <summary>Initializes a new instance of the JSONString class with the provided value and then sets the new element with the specified key.</summary>
            <returns>The JSONString element that was set.</returns>
            <param name="key">The key of the JSONString element to set.</param>
            <param name="value">The value of the JSONString.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONObject.TryGetValue(System.String,CodeCarvings.Piczard.Serialization.JSONElement@)">
            <summary>Gets the JSONElement associated with the specified key.</summary>
            <returns>true if the JSONObject contains a JSONElement with the specified key; otherwise, false.</returns>
            <param name="key">The key of the element to get.</param>
            <param name="value">When this method returns, the JSONElement associated with the specified key, if the key is found; otherwise, null. This parameter is passed uninitialized.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONObject.Count">
            <summary>Gets the number of elements actually contained in the JSONObject.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONObject.ElementType">
            <summary>Gets the type of the JSONElement.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONObject.IsReadOnly">
            <summary>Gets a value indicating whether the JSONObject is read-only.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONObject.Item">
            <summary>Gets or sets the JSONElement.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONObject.Item(System.String)">
            <summary>Gets or sets the JSONElement with the specified key.</summary>
            <param name="key">The key of the JSONElement to get or set.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONObject.Item(System.Int32)">
            <summary>Gets or sets the JSONElement at the specified index.</summary>
            <param name="index">The zero-based index of the JSONElement to get or set.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONObject.Keys">
            <summary>Gets an ICollection&lt;string&gt; containing the keys of the JSONObject.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONObject.SerializationType">
            <summary>Gets or sets the Value of the JSONString element having key JSONSerializer.VarNames_Type.</summary>
            <remarks>Piczard uses this element to store the type name of an object being serialized.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONObject.SerializationVersion">
            <summary>Gets or sets the Int32Value of the JSONNumber element having key JSONSerializer.VarNames_Version.</summary>
            <remarks>Piczard uses this element to store the serialization version of an object.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONObject.Values">
            <summary>Gets an ICollection&lt;JSONElement&gt; containing the elements in the JSONObject.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Serialization.JSONSerializationException">
            <summary>The exception that is thrown when Piczard is unable to serialize an object.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializationException.#ctor">
            <summary>Initializes a new instance of the JSONSerializationOptions class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializationException.#ctor">
            <summary>Initializes a new instance of the JSONSerializationOptions class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializationException.#ctor(System.String)">
            <summary>Initializes a new instance of the JSONSerializationOptions class with a specified error message.</summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializationException.#ctor(System.String,System.Exception)">
            <summary>Initializes a new instance of the JSONSerializationOptions class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the innerException parameter is not a null reference, the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.Serialization.JSONSerializationOptions">
            <summary>Provides data for the JSON serialization process. This class cannot be inherited.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializationOptions.#ctor">
            <summary>Initializes a new instance of the JSONSerializationOptions class.Initializes a new instance of the JSONSerializationOptions class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializationOptions.#ctor">
            <summary>Initializes a new instance of the JSONSerializationOptions class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializationOptions.#ctor(System.Nullable`1{System.Boolean},System.Boolean)">
            <summary>A value indicating whether the SerializationVersion properties have to be set during the serialization process.Initializes a new instance of the JSONSerializationOptions class and sets all the parameters.</summary>
            <param name="serializeVersions">A value indicating whether the SerializationVersion properties have to be set during the serialization process.</param>
            <param name="useAssemblyQualifiedNames">A value indicating whether to use  Type.AssemblyQualifiedName as type name.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializationOptions.Clone">
            <summary>Creates a copy of the JSONSerializationOptions object.</summary>
            <returns>A copy of the JSONSerializationOptions object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializationOptions.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializationOptions.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializationOptions.GetNewJSONObject">
            <summary>Initializes a new instance of the JSONObject class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializationOptions.GetNewJSONObject(System.Object)">
            <summary>Initializes a new instance of the JSONObject class to serialize the specified object.</summary>
            <returns>The instance of the JSONObject class.</returns>
            <param name="o">The object to serialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializationOptions.GetNewJSONObject(System.Int32)">
            <summary>Initializes a new instance of the JSONObject class and sets the specified SerializationVersion according to the SerializeVersions property.</summary>
            <returns>The instance of the JSONObject class.</returns>
            <param name="version">The SerializationVersion to set.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONSerializationOptions.Default">
            <summary>Initializes a new instance of the JSONSerializationOptions class using the default settings.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONSerializationOptions.DefaultForClient">
            <summary>Initializes a new instance of the JSONSerializationOptions class using the default settings for a client environment (SerializeVersions:false, UseAssemblyQualifiedNames: false).</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONSerializationOptions.DefaultWithAssemblyQualifiedNames">
            <summary>Initializes a new instance of the JSONSerializationOptions class using the default settings for deep serialization.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONSerializationOptions.SerializeVersions">
            <summary>Gets a value indicating whether the SerializationVersion properties have to be set during the serialization process.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONSerializationOptions.UseAssemblyQualifiedNames">
            <summary>Gets a value indicating whether to use  Type.AssemblyQualifiedName as type name.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Serialization.JSONSerializer">
            <summary>Provides methods for serializing to JSON and deserializing from JSON. This class cannot be inherited. </summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.Deserialize">
            <summary>Deserializes an object from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.Deserialize(System.Type,CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes an object of the specified Type from the data contained in the provided a JSONObject.</summary>
            <returns>The object being deserialized.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="type">The Type of the object to deserialize.</param>
            <param name="obj">The JSONObject that contains object to deserialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.Deserialize(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes an object from the data contained in the specified JSONObject.</summary>
            <returns>The object being deserialized.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="obj">The JSONObject that contains object to deserialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.Deserialize``1(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes an object of the specified type T from the data contained in the provided a JSONObject.</summary>
            <returns>The object being deserialized.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="obj">The JSONObject that contains object to deserialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.Deserialize(System.Type,System.String)">
            <summary>Deserializes an object of the specified Type from the data contained in the provided a JSON string.</summary>
            <returns>The object being deserialized.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="type">The Type of the object to deserialize.</param>
            <param name="str">The JSON string that contains object to deserialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.Deserialize(System.String)">
            <summary>Deserializes an object from the data contained in the provided a JSON string.</summary>
            <returns>The object being deserialized.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="str">The JSON string that contains object to deserialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.Deserialize``1(System.String)">
            <summary>Deserializes an object of the specified type T from the data contained in the provided a JSON string.</summary>
            <returns>The object being deserialized.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="str">The JSON string that contains object to deserialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.GetSerializationException(System.Object)">
            <summary>Determines if it's possible to serialize the specified object.</summary>
            <returns>null in case it is possible to serialize the object; otherwise an instance of the JSONSerializationException class containing information about the first error occurred during the check.</returns>
            <remarks>    The GetSerializationException method does not throw the     JSONSerializationException.     For more information about JSON serialization please see:     JSON     Serialization.</remarks>
            <param name="o">The object to serialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.Serialize">
            <summary>Serializes the specified object into a JSONObject.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.Serialize(System.Object,CodeCarvings.Piczard.Serialization.JSONSerializationOptions,System.Boolean)">
            <summary>Serializes the specified object into a JSONObject using the provided JSONSerializationOptions; the Type name is serialized according to the serializeType parameter.</summary>
            <returns>A JSONObject representing the object that has been serialized.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="o">The object to serialize.</param>
            <param name="options">An instance of the JSONSerializationOptions class containing data for the JSON serialization process.</param>
            <param name="serializeType">If true the SerializationType of the resulting JSONObject is set.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.Serialize(System.Object,CodeCarvings.Piczard.Serialization.JSONSerializationOptions)">
            <summary>Serializes the specified object into a JSONObject using the provided JSONSerializationOptions.</summary>
            <returns>A JSONObject representing the object that has been serialized.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="o">The object to serialize.</param>
            <param name="options">An instance of the JSONSerializationOptions class containing data for the JSON serialization process.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.Serialize(System.Object,System.Boolean)">
            <summary>Serializes the specified object into a JSONObject using the Default JSONSerializationOptions; the Type name is serialized according to the serializeType parameter.</summary>
            <returns>A JSONObject representing the object that has been serialized.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="o">The object to serialize.</param>
            <param name="serializeType">If true the SerializationType of the resulting JSONObject is set.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.Serialize(System.Object)">
            <summary>Serializes the specified object into a JSONObject using the Default JSONSerializationOptions.</summary>
            <returns>A JSONObject representing the object that has been serialized.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="o">The object to serialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.SerializeForClient(System.Object)">
            <summary>Serializes the specified object into a JSONObject using the default settings for a client environment (JSONSerializationOptions.DefaultForClient).</summary>
            <returns>A JSONObject representing the object that has been serialized.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="o">The object to serialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.SerializeToString">
            <summary>Serializes the specified object into a JSON string.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.SerializeToString(System.Object,CodeCarvings.Piczard.Serialization.JSONSerializationOptions,System.Boolean)">
            <summary>Serializes the specified object into a JSON string using the provided JSONSerializationOptions; the Type name is serialized according to the serializeType parameter.</summary>
            <returns>A JSON string representing the object that has been serialized.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="o">The object to serialize.</param>
            <param name="options">An instance of the JSONSerializationOptions class containing data for the JSON serialization process.</param>
            <param name="serializeType">If true the Type name is serialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.SerializeToString(System.Object,CodeCarvings.Piczard.Serialization.JSONSerializationOptions)">
            <summary>Serializes the specified object into a JSON string using the provided JSONSerializationOptions.</summary>
            <returns>A JSON string representing the object that has been serialized.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="o">The object to serialize.</param>
            <param name="options">An instance of the JSONSerializationOptions class containing data for the JSON serialization process.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.SerializeToString(System.Object,System.Boolean)">
            <summary>Serializes the specified object into a JSON string using the Default JSONSerializationOptions; the Type name is serialized according to the serializeType parameter.</summary>
            <returns>A JSON string representing the object that has been serialized.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="o">The object to serialize.</param>
            <param name="serializeType">If true the Type name is serialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.SerializeToString(System.Object)">
            <summary>Serializes the specified object into a JSON string using the Default JSONSerializationOptions.</summary>
            <returns>A JSON string representing the object that has been serialized.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="o">The object to serialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.SerializeToStringForClient(System.Object)">
            <summary>Serializes the specified object into a JSON string using the default settings for a client environment (JSONSerializationOptions.DefaultForClient).</summary>
            <returns>A JSON string representing the object that has been serialized.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="o">The object to serialize.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.ValidateSerialization">
            <summary>Determines if it's possible to serialize the specified object.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.ValidateSerialization(System.Object,System.Boolean)">
            <summary>Determines if it's possible to serialize the specified object; if the "throwException" parameter is true then an JSONSerializationException is thrown if the object cannot be serialized.</summary>
            <returns>true if the object can be serialized; otherwise, false.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="o">The object to serialize.</param>
            <param name="throwException">If true, a JSONSerializationException is thrown if the object cannot be serialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONSerializer.ValidateSerialization(System.Object)">
            <summary>Determines if it's possible to serialize the specified object.</summary>
            <returns>true if the object can be serialized; otherwise, false.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="o">The object to serialize.</param>
        </member>
        <member name="F:CodeCarvings.Piczard.Serialization.JSONSerializer.DefaultVersion">
            <summary>Represents the default version number using during JSON serialziation. This field is constant.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="F:CodeCarvings.Piczard.Serialization.JSONSerializer.StaticFactoryMethodName">
            <summary>Represents the name of the static method that is invoked during the deserialization process in order to instantiate a new object. This field is constant.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="F:CodeCarvings.Piczard.Serialization.JSONSerializer.VarNames_Type">
            <summary>Represents the key that identifies the SerializationType value in a JSONObject. This field is constant.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="F:CodeCarvings.Piczard.Serialization.JSONSerializer.VarNames_Version">
            <summary>Represents the key that identifies the SerializationVersion value in a JSONObject. This field is constant.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Serialization.JSONString">
            <summary>Represents a string JSON value. This class cannot be inherited.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONString.#ctor">
            <summary>Initializes a new instance of the JSONString class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONString.#ctor">
            <summary>Initializes a new instance of the JSONString class; the Value property is set to null.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONString.#ctor(System.String)">
            <summary>Initializes a new instance of the JSONString class.</summary>
            <param name="value">The value of the JSONString.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONString.Clone">
            <summary>Creates a copy of the JSONString.</summary>
            <returns>A copy of the JSONString.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONString.Decode">
            <summary>Initializes a new instance of the JSONString class by decoding the specified JSON string.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONString.Decode(System.String,CodeCarvings.Piczard.Serialization.JSONDecodingOptions)">
            <summary>Initializes a new instance of the JSONString class by decoding the specified JSON string with the the provided JSONDecodingOptions.</summary>
            <returns>The instance of the JSONString class.</returns>
            <param name="str">The JSON string to parse.</param>
            <param name="options">An instance of the JSONDecodingOptions class containing data for the JSON decoding process.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Serialization.JSONString.Decode(System.String)">
            <summary>Initializes a new instance of the JSONString class by decoding the specified JSON string.</summary>
            <returns>The instance of the JSONString class.</returns>
            <param name="str">The JSON string to parse.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONString.ElementType">
            <summary>Gets the type of the JSONElement.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Serialization.JSONString.Value">
            <summary>Gets or sets the value of the JSONString.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Serialization.JSONValue">
            <summary>Represents a generic JSON value.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="N:CodeCarvings.Piczard.Web">
            <summary>The CodeCarvings.Piczard.Web namespaces contains classes, interfaces, and enumerations for the Web environment.</summary>
            <remarks>    Please see also:                       How         PictureTrimmer Works         InlinePictureTrimmer         - Overview         PopupPictureTrimmer -         Overview     </remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.FlashWMode">
            <summary>Indicates the possible values of the WMode attribute of the Adobe Flash Plugin.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Web.FlashWMode.Window">
            <summary>The Adobe Flash movie plays in its own rectangle ("window") on the web page.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Web.FlashWMode.Opaque">
            <summary>The Adobe Flash movie hides everything on the page behind it (this may slow animation performance).</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Web.FlashWMode.Transparent">
            <summary>The background of the HTML page shows through all transparent portions of the Adobe Flash movie (this may slow animation performance).</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Web.FlashWMode.Direct">
            <summary>The SWF content is directly rendered to the screen, bypassing compositing in the screen buffer. Requires version 10 of Adobe Flash player or greater and Piczard v1.2.3.1 or greater. -This is the suggested value-</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Web.FlashWMode.GPU">
            <summary>Use additional hardware acceleration. Requires version 10 of Adobe Flash player or greater and Piczard v1.2.3.1 or greater.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.PictureTrimmerAutoPostBackOnPopupCloseMode">
            <summary>Specifies when a PopupPictureTrimmer control has to perform an automatic postback.</summary>
            <remarks>Please see also PopupPictureTrimmer - Server-side events</remarks>
        </member>
        <member name="F:CodeCarvings.Piczard.Web.PictureTrimmerAutoPostBackOnPopupCloseMode.Never">
            <summary>Page PostBack is never triggered when the popup window is closed.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Web.PictureTrimmerAutoPostBackOnPopupCloseMode.OnlyOnSave">
            <summary>Page PostBack is triggered only if the user clicks the "Save" button.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Web.PictureTrimmerAutoPostBackOnPopupCloseMode.OnlyOnCancel">
            <summary>Page PostBack is triggered only if the user clicks the "Cancel" button.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Web.PictureTrimmerAutoPostBackOnPopupCloseMode.Always">
            <summary>Page PostBack is always triggered when the popup window is closed.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.PictureTrimmerAutoZoomMode">
            <summary>Specifies how a PictureTrimmer control automatically calculates the ZoomFactor.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Web.PictureTrimmerAutoZoomMode.Disabled">
            <summary>Image is never zoomed to fit the PictureTrimmer canvas.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Web.PictureTrimmerAutoZoomMode.Enabled">
            <summary>Image is always zoomed to fit the PictureTrimmer canvas, independently by its size.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Web.PictureTrimmerAutoZoomMode.EnabledOnlyForSmallImages">
            <summary>Image is zoomed to fit the PictureTrimmer canvas only if its size is smaller than the PictureTrimmer canvas size (image will be enlarged).</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Web.PictureTrimmerAutoZoomMode.EnabledOnlyForLargeImages">
            <summary>Image is zoomed to fit the PictureTrimmer canvas only if its size is bigger than the PictureTrimmer canvas size (image will be shrinked).</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Web.PictureTrimmerAutoZoomMode.Standard">
            <summary>The PictureTrimmer control automatically detects if the image has to be zoomed to fit the canvas. By default the EnabledOnlyForLargeImages mode is used. If both PictureTrimmer.EnableCropping and PictureTrimmer.ShowZoomPanel are false then the image is not zoomed.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.PictureTrimmerCropShadowMode">
            <summary>Indicates how a PictureTrimmer GUI renders the cropping mask.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Web.PictureTrimmerCropShadowMode.Standard">
            <summary>The cropping mask darkens more the image area than the canvas area.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Web.PictureTrimmerCropShadowMode.Flat">
            <summary>The cropping mask darkens both the image area and the canvas area is the same way.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.PictureTrimmerImageBackColorApplyMode">
            <summary>Specifies if and when the ImageBackColor must be applied by a PictureTrimmerValue filter or a PictureTrimmer control.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Web.PictureTrimmerImageBackColorApplyMode.DoNotApply">
            <summary>The ImageBackColor is not applied . Note: this option causes the format of the content image displayed by the PictureTrimmer GUI to be Png.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Web.PictureTrimmerImageBackColorApplyMode.ApplyBeforeImageAdjustments">
            <summary>The ImageBackColor is applied before the ImageAdjustmentsFilter. Note: this option causes the format of the content image displayed by the PictureTrimmer GUI to be Jpeg.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Web.PictureTrimmerImageBackColorApplyMode.ApplyAfterImageAdjustments">
            <summary>The ImageBackColor is applied after the ImageAdjustmentsFilter. Note: this option causes the format of the content image displayed by the PictureTrimmer GUI to be Png.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.PictureTrimmerMode">
            <summary>Specifies the type of a PictureTrimmer or of a PictureTrimmerCore object.</summary>
            <remarks>    Please see:                       How         PictureTrimmer Works         InlinePictureTrimmer         - Overview         PopupPictureTrimmer -         Overview     </remarks>
        </member>
        <member name="F:CodeCarvings.Piczard.Web.PictureTrimmerMode.Inline">
            <summary>    The PictureTrimmer object is an instance of the     InlinePictureTrimmer class     - or - the PictureTrimmerCore object is an instance of the     InlinePictureTrimmerCore class.</summary>
        </member>
        <member name="F:CodeCarvings.Piczard.Web.PictureTrimmerMode.Popup">
            <summary>    The PictureTrimmer object is an instance of the     PopupPictureTrimmer class     - or - the PictureTrimmerCore object is an instance of the     PopupPictureTrimmerCore class.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.InlinePictureTrimmer">
            <summary>Represents a PictureTrimmer control that is displayed inline in the web page. This class cannot be inherited.</summary>
            <remarks>For more information about the  InlinePictureTrimmer control please see InlinePictureTrimmer - Overview.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.InlinePictureTrimmer.#ctor">
            <summary>Initializes a new instance of the InlinePictureTrimmer class.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.InlinePictureTrimmer.RetainUIParams">
            <summary>Gets or sets a value indicating whether the control has to retain the PictureTrimmerUIParams after every postback.</summary>
            <remarks>If RetainUIParams is false, then the PictureTrimmerUIParams are reset after every postback. For example the ZoomFactor and the scroll position are automatically recalculated.</remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.InlinePictureTrimmerCore">
            <summary>Encapsulates the main properties and methods of a InlinePictureTrimmer control. This class cannot be inherited.</summary>
            <remarks>    The InlinePictureTrimmerCore class can be used to help     client-side functions that allow to dynamically load and     process images.     For more information please see:                       Client-Side         Load, Unload And Save Images.         The example A.307 - "Client side         load, unload and save images".          For more information about the      InlinePictureTrimmer control please see InlinePictureTrimmer -     Overview.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.InlinePictureTrimmerCore.#ctor">
            <summary>Initializes a new instance of the InlinePictureTrimmerCore class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.InlinePictureTrimmerCore.FromJSON">
            <summary>Deserializes a new instance of the InlinePictureTrimmerCore class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.InlinePictureTrimmerCore.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the InlinePictureTrimmerCore class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.InlinePictureTrimmerCore.FromJSON(System.String)">
            <summary>Deserializes a new instance of the InlinePictureTrimmerCore class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.PictureTrimmer">
            <summary>Represents the abstract class from which every picture trimmer control must inherit.</summary>
            <remarks>    For more information about the PictureTrimmer control     please see:                       How         PictureTrimmer Works         InlinePictureTrimmer         - Overview         PopupPictureTrimmer -         Overview     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.DeleteTemporaryFiles">
            <summary>Deletes the temporary files associated with the currently loaded image.</summary>
            <remarks>This method can be used only if the PictureTrimmer control is configured to use temporary files (WebSettings.PictureTrimmer.UseTemporaryFiles: true).</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.Dispose">
            <summary>Releases all resources used by this PictureTrimmer control.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.GetImageProcessingJob">
            <summary>Gets an instance of the ImageProcessingJob class that can be used to process an image.</summary>
            <returns>An instance of the ImageProcessingJob class that can apply the current PictureTrimmerValue filter.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.GetProcessedImage">
            <summary>Applies the current PictureTrimmerValue filter to an image and returns the result as a Bitmap object.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.GetProcessedImage(CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current PictureTrimmerValue filter to the currently loaded image and returns the result as a Bitmap object. BackgroundColor and quantization are applied according to the specified FormatEncoderParams.</summary>
            <returns>The processed image.</returns>
            <param name="hintFormatEncoderParams">A FormatEncoderParams object used to guess the right BackgroundColor and quantization mode to apply to the output image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.GetProcessedImage">
            <summary>Applies the current PictureTrimmerValue filter to the currently loaded image and returns the result as a Bitmap object.</summary>
            <returns>The processed image.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.GetProcessedImage(System.Object,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current PictureTrimmerValue filter to the specified image and returns the result as a Bitmap object. BackgroundColor and quantization are applied according to the specified FormatEncoderParams.</summary>
            <returns>The processed image.</returns>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="hintFormatEncoderParams">A FormatEncoderParams object used to guess the right BackgroundColor and quantization mode to apply to the output image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.GetProcessedImage(System.Object)">
            <summary>Applies the current PictureTrimmerValue filter to the specified image and returns the result as a Bitmap object.</summary>
            <returns>The processed image.</returns>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImage">
            <summary>Loads the specified Image into the PictureTrimmer control.</summary>
            <remarks>    Please see also: Interactively     crop and/or resize an image.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImage(System.Drawing.Image,System.String,System.Single,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmer control and enable the crop feature by setting the specified CropConstraint; the provided ContentImageUrl and OutputResolution are used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="image">The Image to load into the PictureTrimmer control.</param>
            <param name="contentImageUrl">The url used by the control to retrieve the image displayed within the GUI.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmer control.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImage(System.Drawing.Image,System.String,System.Single)">
            <summary>Loads the specified Image into the PictureTrimmer control and disable the crop feature; the provided ContentImageUrl and OutputResolution are used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="image">The Image to load into the PictureTrimmer control.</param>
            <param name="contentImageUrl">The url used by the control to retrieve the image displayed within the GUI.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmer control.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImage(System.Drawing.Image,System.String,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmer control and enable the crop feature by setting the specified CropConstraint; the provided ContentImageUrl is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="image">The Image to load into the PictureTrimmer control.</param>
            <param name="contentImageUrl">The url used by the control to retrieve the image displayed within the GUI.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImage(System.Drawing.Image,System.String)">
            <summary>Loads the specified Image into the PictureTrimmer control and disable the crop feature; the provided ContentImageUrl is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="image">The Image to load into the PictureTrimmer control.</param>
            <param name="contentImageUrl">The url used by the control to retrieve the image displayed within the GUI.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImage(System.Drawing.Image,System.Single,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmer control and enable the crop feature by setting the specified CropConstraint; the provided OutputResolution is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="image">The Image to load into the PictureTrimmer control.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmer control.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImage(System.Drawing.Image,System.Single)">
            <summary>Loads the specified Image into the PictureTrimmer control and disable the crop feature; the provided OutputResolution is used.</summary>
            <param name="image">The Image to load into the PictureTrimmer control.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmer control.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImage(System.Drawing.Image,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmer control and enable the crop feature by setting the specified CropConstraint.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="image">The Image to load into the PictureTrimmer control.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImage(System.Drawing.Image)">
            <summary>Loads the specified Image into the PictureTrimmer control and disable the crop feature.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="image">The Image to load into the PictureTrimmer control.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromByteArray">
            <summary>Loads the specified Image into the PictureTrimmer control.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromByteArray(System.Byte[],System.String,System.Single,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmer control and enable the crop feature by setting the specified CropConstraint; the provided ContentImageUrl and OutputResolution are used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="bytes">The byte array containing the Image to load into the PictureTrimmer control.</param>
            <param name="contentImageUrl">The url used by the control to retrieve the image displayed within the GUI.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmer control.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromByteArray(System.Byte[],System.String,System.Single)">
            <summary>Loads the specified Image into the PictureTrimmer control and disable the crop feature; the provided ContentImageUrl and OutputResolution are used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="bytes">The byte array containing the Image to load into the PictureTrimmer control.</param>
            <param name="contentImageUrl">The url used by the control to retrieve the image displayed within the GUI.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmer control.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromByteArray(System.Byte[],System.String,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmer control and enable the crop feature by setting the specified CropConstraint; the provided ContentImageUrl is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="bytes">The byte array containing the Image to load into the PictureTrimmer control.</param>
            <param name="contentImageUrl">The url used by the control to retrieve the image displayed within the GUI.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromByteArray(System.Byte[],System.String)">
            <summary>Loads the specified Image into the PictureTrimmer control and disable the crop feature; the provided ContentImageUrl is used.</summary>
            <param name="bytes">The byte array containing the Image to load into the PictureTrimmer control.</param>
            <param name="contentImageUrl">The url used by the control to retrieve the image displayed within the GUI.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromByteArray(System.Byte[],System.Single,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmer control and enable the crop feature by setting the specified CropConstraint; the provided OutputResolution is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="bytes">The byte array containing the Image to load into the PictureTrimmer control.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmer control.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromByteArray(System.Byte[],System.Single)">
            <summary>Loads the specified Image into the PictureTrimmer control and enable the crop feature by setting the specified CropConstraint.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="bytes">The byte array containing the Image to load into the PictureTrimmer control.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmer control.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromByteArray(System.Byte[],CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmer control and enable the crop feature by setting the specified CropConstraint.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="bytes">The byte array containing the Image to load into the PictureTrimmer control.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromByteArray(System.Byte[])">
            <summary>Loads the specified Image into the PictureTrimmer control and disable the crop feature.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="bytes">The byte array containing the Image to load into the PictureTrimmer control.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromFileSystem">
            <summary>Loads the specified Image into the PictureTrimmer control.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromFileSystem(System.String,System.String,System.Single,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmer control and enable the crop feature by setting the specified CropConstraint; the provided ContentImageUrl and OutputResolution are used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="imagePath">The path of the file containing the Image to load into the PictureTrimmer control.</param>
            <param name="contentImageUrl">The url used by the control to retrieve the image displayed within the GUI.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmer control.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromFileSystem(System.String,System.String,System.Single)">
            <summary>Loads the specified Image into the PictureTrimmer control and disable the crop feature; the provided ContentImageUrl and OutputResolution are used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="imagePath">The path of the file containing the Image to load into the PictureTrimmer control.</param>
            <param name="contentImageUrl">The url used by the control to retrieve the image displayed within the GUI.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmer control.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromFileSystem(System.String,System.String,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmer control and enable the crop feature by setting the specified CropConstraint; the provided ContentImageUrl is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="imagePath">The path of the file containing the Image to load into the PictureTrimmer control.</param>
            <param name="contentImageUrl">The url used by the control to retrieve the image displayed within the GUI.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromFileSystem(System.String,System.String)">
            <summary>Loads the specified Image into the PictureTrimmer control and disable the crop feature; the provided ContentImageUrl is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="imagePath">The path of the file containing the Image to load into the PictureTrimmer control.</param>
            <param name="contentImageUrl">The url used by the control to retrieve the image displayed within the GUI.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromFileSystem(System.String,System.Single,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmer control and enable the crop feature by setting the specified CropConstraint; the provided OutputResolution is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="imagePath">The path of the file containing the Image to load into the PictureTrimmer control.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmer control.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromFileSystem(System.String,System.Single)">
            <summary>Loads the specified Image into the PictureTrimmer control and disable the crop feature; the provided OutputResolution is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="imagePath">The path of the file containing the Image to load into the PictureTrimmer control.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmer control.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromFileSystem(System.String,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmer control and enable the crop feature by setting the specified CropConstraint.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="imagePath">The path of the file containing the Image to load into the PictureTrimmer control.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromFileSystem(System.String)">
            <summary>Loads the specified Image into the PictureTrimmer control and disable the crop feature.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="imagePath">The path of the file containing the Image to load into the PictureTrimmer control.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromStream">
            <summary>Loads the specified Image into the PictureTrimmer control.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromStream(System.IO.Stream,System.String,System.Single)">
            <summary>Loads the specified Image into the PictureTrimmer control and disable the crop feature; the provided ContentImageUrl and OutputResolution are used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="stream">An open Stream containing the Image to load into the PictureTrimmer control.</param>
            <param name="contentImageUrl">The url used by the control to retrieve the image displayed within the GUI.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmer control.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromStream(System.IO.Stream,System.String,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmer control and enable the crop feature by setting the specified CropConstraint; the provided ContentImageUrl is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="stream">An open Stream containing the Image to load into the PictureTrimmer control.</param>
            <param name="contentImageUrl">The url used by the control to retrieve the image displayed within the GUI.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromStream(System.IO.Stream,System.String)">
            <summary>Loads the specified Image into the PictureTrimmer control and disable the crop feature; the provided ContentImageUrl is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="stream">An open Stream containing the Image to load into the PictureTrimmer control.</param>
            <param name="contentImageUrl">The url used by the control to retrieve the image displayed within the GUI.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromStream(System.IO.Stream,System.Single,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmer control and enable the crop feature by setting the specified CropConstraint; the provided OutputResolution is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="stream">An open Stream containing the Image to load into the PictureTrimmer control.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmer control.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromStream(System.IO.Stream,System.Single)">
            <summary>Loads the specified Image into the PictureTrimmer control and disable the crop feature; the provided OutputResolution is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="stream">An open Stream containing the Image to load into the PictureTrimmer control.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmer control.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromStream(System.IO.Stream,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmer control and enable the crop feature by setting the specified CropConstraint.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="stream">An open Stream containing the Image to load into the PictureTrimmer control.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromStream(System.IO.Stream)">
            <summary>Loads the specified Image into the PictureTrimmer control and disable the crop feature.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="stream">An open Stream containing the Image to load into the PictureTrimmer control.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.LoadImageFromStream(System.IO.Stream,System.String,System.Single,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmer control and enable the crop feature by setting the specified CropConstraint; the provided ContentImageUrl and OutputResolution are used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="stream">An open Stream containing the Image to load into the PictureTrimmer control.</param>
            <param name="contentImageUrl">The url used by the control to retrieve the image displayed within the GUI.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmer control.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.SaveProcessedImageToByteArray">
            <summary>Applies the current PictureTrimmerValue filter to an image and saves the result Bitmap to a byte array.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.SaveProcessedImageToByteArray(CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current PictureTrimmerValue filter to the currently loaded image and saves the result Bitmap to a byte array, using the provided  FormatEncoderParams.</summary>
            <returns>The processed image saved as array of bytes.</returns>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.SaveProcessedImageToByteArray">
            <summary>Applies the current PictureTrimmerValue filter to the currently loaded image and saves the result Bitmap to a byte array, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <returns>The processed image saved as array of bytes.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.SaveProcessedImageToByteArray(System.Object,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current PictureTrimmerValue filter to the specified image and saves the result Bitmap to a byte array, using the provided  FormatEncoderParams.</summary>
            <returns>The processed image saved as array of bytes.</returns>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.SaveProcessedImageToByteArray(System.Object)">
            <summary>Applies the current PictureTrimmerValue filter to the specified image and saves the result Bitmap to a byte array, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <returns>The processed image saved as array of bytes.</returns>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.SaveProcessedImageToFileSystem">
            <summary>Applies the current PictureTrimmerValue filter to an image and saves the result Bitmap to the file system.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.SaveProcessedImageToFileSystem(System.String,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current PictureTrimmerValue filter to the currently loaded image and saves the result Bitmap to the file system, using the provided  FormatEncoderParams.</summary>
            <param name="destFilePath">A string that contains the name of the file to which to save the processed Image.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.SaveProcessedImageToFileSystem(System.String)">
            <summary>Applies the current PictureTrimmerValue filter to the currently loaded image and saves the result Bitmap to the file system, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <param name="destFilePath">A string that contains the name of the file to which to save the processed Image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.SaveProcessedImageToFileSystem(System.Object,System.String,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current PictureTrimmerValue filter to the specified image and saves the result Bitmap to the file system, using the provided  FormatEncoderParams.</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="destFilePath">A string that contains the name of the file to which to save the processed Image.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.SaveProcessedImageToFileSystem(System.Object,System.String)">
            <summary>Applies the current PictureTrimmerValue filter to the specified image and saves the result Bitmap to the file system, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="destFilePath">A string that contains the name of the file to which to save the processed Image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.SaveProcessedImageToStream">
            <summary>Applies the current PictureTrimmerValue filter to an image and saves the result Bitmap to a Stream.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.SaveProcessedImageToStream(System.IO.Stream,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current PictureTrimmerValue filter to the currently loaded image and saves the result Bitmap to a Stream, using the provided  FormatEncoderParams.</summary>
            <param name="destStream">    The open Stream where the processed Image will be saved.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.SaveProcessedImageToStream(System.IO.Stream)">
            <summary>Applies the current PictureTrimmerValue filter to the currently loaded image and saves the result Bitmap to a Stream, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <param name="destStream">    The open Stream where the processed Image will be saved.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.SaveProcessedImageToStream(System.Object,System.IO.Stream,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current PictureTrimmerValue filter to the specified image and saves the result Bitmap to a Stream, using the provided  FormatEncoderParams.</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="destStream">    The open Stream where the processed Image will be saved.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.SaveProcessedImageToStream(System.Object,System.IO.Stream)">
            <summary>Applies the current PictureTrimmerValue filter to the specified image and saves the result Bitmap to a Stream, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="destStream">    The open Stream where the processed Image will be saved.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmer.UnloadImage">
            <summary>Unloads the current image.</summary>
            <remarks>This method unloads the currently loaded image and also deletes the temporary files (if necessary).</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.AllowResize">
            <summary>Gets or sets a value indicating whether users can resize the source image through the GUI.</summary>
            <remarks>    Users can resize the source image in 2 ways:                       By using the appropriate slider in the "Resize panel"         (please see ShowResizePanel).         Note: if AllowResize is false then the "Resize panel" is         hidden.         By dragging the crop handles*.         Note: if AllowResize is false then the crop handles are         hidden.          * = Only if the current CropConstraint is a     FixedCropConstraint.          Please see:                       Interactively         crop and/or resize an image (paragraph: "The image         resize feature")         The example A.403 - "Customize         layout".          Please see also the ShowResizePanel property.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.AutoFreezeOnFormSubmit">
            <summary>Gets or sets a value indicating whether the control has to automatically freeze the GUI when the form is submitted.</summary>
            <remarks>    The PictureTrimmer "frozen" status is a feature that     allows to hide the Flash User Interface (without losing any     parameter).     Please see the example A.311     "InlinePictureTrimmer - overview".</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.AutoZoomMode">
            <summary>Gets or sets a value indicating how the PictureTrimmer instance automatically calculates the ZoomFactor.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.CanvasColor">
            <summary>Gets or sets the color of the canvas.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.ContentImageUrl">
            <summary>Gets or sets the url used by the control to retrieve the image displayed within the GUI.</summary>
            <remarks>    If the PictureTrimmer control is configured to use     temporary files (WebSettings.PictureTrimmer.UseTemporaryFiles:     true), then the ContentImageUrl property is automatically     calculated.          On the contrary, if temporary files are disabled, then it is     mandatory to set this property when an image is loaded into the     control.     The resolution of the content image must be always 96 DPI     (CommonData.DefaultResolution).     The methods PictureTrimmerCore.GetContentImageJob and     PictureTrimmerCore.GetContentImageFormatEncoderParams help to     generate a valid content image.     Please see the example A.305 - "Load     &amp; save images" / "Image stored in a DB (Without temporary     files)".</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.CropConstraint">
            <summary>Gets the constraints that have to be satisfied by the cropped image.</summary>
            <remarks>    The CropConstraint property can be set only when an image     is loaded into the control.     For example when one of the following methods is     invoked:                       LoadImage         LoadImageFromByteArray         LoadImageFromFileSystem         LoadImageFromStream          Please see: Interactively     crop and/or resize an image</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.CropShadowMode">
            <summary>Gets or sets a value indicating how the PictureTrimmer GUI renders the cropping mask.</summary>
            <remarks>    Please see the example A.403 -     "Customize layout".     This property is ignored when the crop feature is     disabled (EnableCropping: false).</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.Culture">
            <summary>    Gets or sets the culture name used by the control to look     up culture-specific resources at run time.</summary>
            <remarks>    Please see:                       Localizing And         Customizing Texts         The example A.402 - "Localize &amp;         customize texts".         The IStaticLocalizationPlugin and the         IDynamicLocalizationPlugin interfaces.     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.EnableAutoCenterView">
            <summary>Gets or sets a value indicating whether the control has to automatically center the view after the user drags the crop area outside the visible area.</summary>
            <remarks>This property is ignored when the crop feature is disabled (EnableCropping: false).</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.EnableCropping">
            <summary>Gets a value indicating whether the crop feature is enabled .</summary>
            <remarks>    The crop feature is enabled only when a      CropConstraint is provided during the image load     process.     For example when one of the following methods is invoked:                            LoadImage         LoadImageFromByteArray         LoadImageFromFileSystem         LoadImageFromStream     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.EnableSnapping">
            <summary>Gets or sets a value indicating whether the crop area automatically snaps to the edge or the center of the image when the user moves the rectangle near those positions.</summary>
            <remarks>    The user can temporarily disable the snap feature by     holding down the shift key while the crop rectangle is     moved.     Please see the example A.403 -     "Customize layout".     Please see also the ShowCropAlignmentLines     property.     This property is ignored when the crop feature is     disabled (EnableCropping: false).</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.FlashWMode">
            <summary>Gets or sets the Window Mode property of the Adobe Flash movie for transparency, layering, and positioning in the browser (it is strongly suggested to use the FlashWMode.Direct or the FlashWMode.Window setting).</summary>
            <remarks>    Before version 1.2.3.1 of Piczard the default value was     FlashWMode.Window.     Using the FlashWMode.Opaque or FlashWMode.Transparent     settings could slow down the animation and cause unexpected     behaviors.     It is strongly suggested to use the FlashWMode.Direct     or the FlashWMode.Window setting.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.ImageBackColor">
            <summary>Gets or sets the color used to fill the image background.</summary>
            <remarks>    Please see:                       Image Processing         Job (Controlling the background color of images         generated by Piczard)         The example A.403 - "Customize         layout".     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.ImageBackColorApplyMode">
            <summary>Gets or sets a value indicating if and when the ImageBackColor must be applied to the image.</summary>
            <remarks>    Please see also: Image     Processing Job (Controlling the background color of images     generated by Piczard)</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.ImageLoaded">
            <summary>Gets a value indicating whether an image is currently loaded into the PictureTrimmer control.</summary>
            <remarks>    One of the following methods can be invoked to load an image     into the control:                            LoadImage         LoadImageFromByteArray         LoadImageFromFileSystem         LoadImageFromStream     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.Mode">
            <summary>Gets the type of the PictureTrimmer control.</summary>
            <remarks>    Please see:                       How         PictureTrimmer Works         InlinePictureTrimmer         - Overview         PopupPictureTrimmer -         Overview     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.OnClientControlLoadFunction">
            <summary>Gets or sets the name of the client function to be called when the PictureTrimmer control is loaded in the browser.</summary>
            <remarks>    Please see:                       InlinePictureTrimmer         - Client-side events (paragraph: "The ControlLoad event         handler")         PopupPictureTrimmer         - Client-side events (paragraph: "The ControlLoad event         handler")         The example A.313 -         "InlinePictureTrimmer - Client side events".         The example A.323 -         "PopupPictureTrimmer - Client side events".               The onControlLoad event handler     is raised:                       When the control.load client function is         invoked.         When the control.unloadImage client function is         invoked.               The function receives 2 parameters:                       sender - A reference to the object that         generated the event.         args - An empty object.     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.OnClientUserStateChangedFunction">
            <summary>Gets or sets the name of the client function to be called when the UserState of the PictureTrimmer control changes.</summary>
            <remarks>    Please see:              InlinePictureTrimmer         - Client-side events (paragraph: "The UserStateChanged         event handler")                      PopupPictureTrimmer             - Client-side events (paragraph: "The             UserStateChanged event handler")                                               The example A.304 -                 "UserState / PictureTrimmer value".                 The example A.313 -                 "InlinePictureTrimmer - Client side events".                 The example A.323 -                 "PopupPictureTrimmer - Client side events".                 The example A.406 - "Real                 time crop preview"                                       The function receives 2 parameters:                                               sender - A reference to the object                 that generated the event.                 args - An empty object.                           </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.OutputResolution">
            <summary>Gets the resolution (DPI) of the images that are generated by the PictureTrimmer control.</summary>
            <remarks>    The OutputResolution property can be set only when an     image is loaded into the control.     For example when one of the following methods is     invoked:                       LoadImage         LoadImageFromByteArray         LoadImageFromFileSystem         LoadImageFromStream     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.ShowCropAlignmentLines">
            <summary>Gets or sets a value indicating whether to show lines that facilitate the alignment of the crop rectangle.</summary>
            <remarks>    Please see the example A.403 -     "Customize layout".     Please see also the EnableSnapping property.     This property is ignored when the crop feature is     disabled (EnableCropping: false).</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.ShowDetailsPanel">
            <summary>Gets or sets a value indicating whether to show the "Details panel" in the component GUI.</summary>
            <remarks>    The "Details panel" contains information about the     currently loaded image, such as:                       Original source image size (Width/Height).         Resized image size (Width/Height).         Cursor location (X/Y).          In case the crop feature is enabled, then also the     following information are displayed:              Crop rectangle location (X/Y).         Crop rectangle size (Width/Height).                          All values are expressed in the UIUnit.             Please see the example A.403 -             "Customize layout".              </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.ShowFlipPanel">
            <summary>Gets or sets a value indicating whether to show the flip control in the "Rotate/Flip panel". The flip control allows the user to flip the image horizontally and/or vertically .</summary>
            <remarks>    If both the ShowFlipPanel and the ShowRotatePanel     properties are false, then the "Rotate/Flip panel" is     hidden.     Please see the example A.403 -     "Customize layout".</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.ShowImageAdjustmentsPanel">
            <summary>Gets or sets a value indicating whether to show the "Adjustments panel" in the component GUI. The "Adjustments panel" allows the user to change Brightness, Contrast, Hue and/or Saturation of the Image.</summary>
            <remarks>    Please see the example A.403 -     "Customize layout".</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.ShowResizePanel">
            <summary>Gets or sets a value indicating whether to show the "Resize panel" in the component GUI. The "Resize panel" allows the user to change the ResizeFactor applied to the source Image.</summary>
            <remarks>    If the AllowResize property is set to false, then the     "Resize panel" is never displayed.     Please see:                       Interactively         crop and/or resize an image (paragraph: "The image         resize feature")         The example A.403 - "Customize         layout".     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.ShowRotatePanel">
            <summary>Gets or sets a value indicating whether to show the rotate control in the "Rotate/Flip panel". The rotate control allows the user to rotate the image clockwise by 0, 90, 180 or 270 degrees.</summary>
            <remarks>    If both the ShowRotatePanel and the ShowFlipPanel     properties are false, then the "Rotate/Flip panel" is     hidden.     Please see the example A.403 -     "Customize layout".</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.ShowRulers">
            <summary>Gets or sets a value indicating whether to show the rulers at the left and at the top of the working area.</summary>
            <remarks>    The values displayed in the rulers are expressed in the     UIUnit.     Please see the example A.403 -     "Customize layout".</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.ShowZoomPanel">
            <summary>Gets or sets a value indicating whether to show the "Zoom panel" in the component GUI. The "Zoom panel" allows the user to magnify an area of the image.</summary>
            <remarks>    The "Zoom panel" allows to enlarge/shrink the     displayed image without changing the ResizeFactor.          Please see the example A.403 - "Customize     layout".</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.SourceImageFormatId">
            <summary>Gets the format of the currently loaded Image.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.SourceImageResolution">
            <summary>Gets the resolution, in pixels per inch, of the currently loaded Image.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.SourceImageSize">
            <summary>    Gets the Size, expressed in pixels, of the currently loaded     Image.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.Tag">
            <summary>Gets or sets an optional string that can be used to pass extra parameters during the dynamic localization process.</summary>
            <remarks>    Please see:                       Localizing And         Customizing Texts         The example A.402 - "Localize &amp;         customize texts".         The IDynamicLocalizationPlugin interface.     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.TemporaryFileId">
            <summary>Gets the id that uniquely identifies the temporary files associated with the currently loaded image.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.UIUnit">
            <summary>Gets or sets the graphic unit in which values are displayed in the GUI.</summary>
            <remarks>Please see the example A.403 - "Customize layout".</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.UserState">
            <summary>Gets or sets the current user state of the PictureTrimmer instance.</summary>
            <remarks>    Please see:                                    UserState &amp;             PictureTrimmer Value.                               The Value property.                               The example A.304 - "UserState             &amp; PictureTrimmer Value".              </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmer.Value">
            <summary>Gets or sets the current value of the PictureTrimmer instance.</summary>
            <remarks>    Before returning the PictureTrimmerValue, this methods     dynamically adjusts its data.     For example:                       If the crop Rectangle is null, then it is         automatically calculated.         If the crop Rectangle does not satisfies the current         CropConstraint, then it is automatically         re-calculated.         The ImageBackColorApplyMode property is always set to         the value of the current ImageBackColorApplyMode.               If you want to get the original (not adjusted)     PictureTrimmerValue, then you have to use the UserState     property.          For more information please see: UserState &amp;     PictureTrimmer Value.     Please see also the example A.304 -     "UserState &amp; PictureTrimmer Value".</remarks>
        </member>
        <member name="E:CodeCarvings.Piczard.Web.PictureTrimmer.ValueChanged">
            <summary>Occurs when the Value of the PictureTrimmer control changes between posts to the server.</summary>
            <remarks>    The ValueChanged event is raised when the Value of the     PictureTrimmer control changes between posts to the     server.     This allows you to provide an event-handling method that     performs a custom routine whenever this event occurs.     With the PopupPictureTrimmer control you can use the     AutoPostBackOnPopupClose feature to automatically postback the     page when the popup closes.     In this way it's possible to raise the ValueChanged event as     soon as the Value changes.     Please see:                       InlinePictureTrimmer         - Server-side events         PopupPictureTrimmer         - Server-side events (paragraph: "The ValueChanged         event handler")         The example A.312 -         "InlinePictureTrimmer - Server Side Events"         The example A.322 -         "PopupPictureTrimmer - Server Side Events"     </remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.PictureTrimmerCore">
            <summary>Encapsulates the main properties and methods of a PictureTrimmer control.</summary>
            <remarks>    The PictureTrimmerCore class can be used to help     client-side functions that allow to dynamically load and     process images.     For more information please see:                       Client-Side         Load, Unload And Save Images.         The example A.307 - "Client side         load, unload and save images".          For more information about the PictureTrimmer control     please see:                       How         PictureTrimmer Works         InlinePictureTrimmer         - Overview         PopupPictureTrimmer -         Overview     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.DeleteTemporaryFiles">
            <summary>Deletes the temporary files associated with the currently loaded image.</summary>
            <remarks>This method can be used only if the PictureTrimmer control is configured to use temporary files (WebSettings.PictureTrimmer.UseTemporaryFiles: true).</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.FromJSON">
            <summary>Deserializes a new instance of the PictureTrimmerCore class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the PictureTrimmerCore class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.FromJSON(System.String)">
            <summary>Deserializes a new instance of the PictureTrimmerCore class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.GetAttachDataJSON">
            <summary>Gets a JSON string, encapsulating the current control state, that can be passed as argument to the control.load client function.</summary>
            <remarks>    For more information please see:                       Client-Side         Load, Unload And Save Images.         The example A.307 - "Client side         load, unload and save images".     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.GetAttachDataJSON(System.Web.UI.Page)">
            <summary>Gets a JSON string, encapsulating the current control state, that can be passed as argument to the control.load client function.</summary>
            <returns>A JSON string encapsulating the current control state.</returns>
            <remarks>    For more information please see:                       Client-Side         Load, Unload And Save Images.         The example A.307 - "Client side         load, unload and save images".     </remarks>
            <param name="page">An (optional) Page object helping the method to resolve urls.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.GetAttachDataJSON">
            <summary>Gets a JSON string, encapsulating the current control state, that can be passed as argument to the control.load client function.</summary>
            <returns>A JSON string encapsulating the current control state.</returns>
            <remarks>    For more information please see:                       Client-Side         Load, Unload And Save Images.         The example A.307 - "Client side         load, unload and save images".     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.GetContentImageFormatEncoderParams(CodeCarvings.Piczard.Web.PictureTrimmerImageBackColorApplyMode)">
            <summary>Gets a  FormatEncoderParams object containing the image format parameters required in order to generate a valid content image.</summary>
            <returns>A  FormatEncoderParams object containing the image format parameters required in order to generate a valid content image.</returns>
            <remarks>    The "content image" is the image displayed within the     PictureTrimmer GUI.     Please see:                       The example A.305 - "Load &amp; save         images" / "Image stored in a DB (Without temporary         files)".         The ContentImageUrl property.         The GetContentImageJob method.     </remarks>
            <param name="imageBackColorApplyMode">The ImageBackColorApplyMode of the PictureTrimmer control.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.GetContentImageJob(System.Drawing.Color,CodeCarvings.Piczard.Web.PictureTrimmerImageBackColorApplyMode)">
            <summary>Gets an ImageProcessingJob object that can be used to generate a valid content image.</summary>
            <returns>A ImageProcessingJob object that can be used to generate a valid content image.</returns>
            <remarks>    The "content image" is the image displayed within the     PictureTrimmer GUI.     Please see:                       The example A.305 - "Load &amp; save         images" / "Image stored in a DB (Without temporary         files)".         The ContentImageUrl property.         The GetContentImageFormatEncoderParams method.     </remarks>
            <param name="imageBackColorValue">The ImageBackColor of the PictureTrimmer control.</param>
            <param name="imageBackColorApplyMode">The ImageBackColorApplyMode of the PictureTrimmer control.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.GetImageProcessingJob">
            <summary>Gets an instance of the ImageProcessingJob class that can be used to process an image.</summary>
            <returns>An instance of the ImageProcessingJob class that can apply the current PictureTrimmerValue filter.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.GetProcessedImage">
            <summary>Applies the current PictureTrimmerValue filter to an image and returns the result as a Bitmap object.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.GetProcessedImage(CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current PictureTrimmerValue filter to the currently loaded image and returns the result as a Bitmap object. BackgroundColor and quantization are applied according to the specified FormatEncoderParams.</summary>
            <remarks>Requires Piczard 1.2.x or higher.</remarks>
            <returns>The processed image.</returns>
            <param name="hintFormatEncoderParams">A FormatEncoderParams object used to guess the right BackgroundColor and quantization mode to apply to the output image..</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.GetProcessedImage">
            <summary>Applies the current PictureTrimmerValue filter to the currently loaded image and returns the result as a Bitmap object.</summary>
            <returns>The processed image.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.GetProcessedImage(System.Object,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current PictureTrimmerValue filter to the specified image and returns the result as a Bitmap object. BackgroundColor and quantization are applied according to the specified FormatEncoderParams.</summary>
            <returns>The processed image.</returns>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="hintFormatEncoderParams">A FormatEncoderParams object used to guess the right BackgroundColor and quantization mode to apply to the output image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.GetProcessedImage(System.Object)">
            <summary>Applies the current PictureTrimmerValue filter to the specified image and returns the result as a Bitmap object.</summary>
            <returns>The processed image.</returns>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImage">
            <summary>Loads the specified Image into the PictureTrimmerCore object.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImage(System.Drawing.Image,System.String,System.Single,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and enable the crop feature by setting the specified CropConstraint; the provided ContentImageUrl and OutputResolution are used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="image">The Image to load into the PictureTrimmerCore object.</param>
            <param name="contentImageUrl">    The url used to retrieve the image displayed within the     GUI.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmerCore object.</param>
            <param name="cropConstraint">The constraints that have to be satisfied by the cropped image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImage(System.Drawing.Image,System.String,System.Single)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and disable the crop feature; the provided ContentImageUrl and OutputResolution are used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="image">The Image to load into the PictureTrimmerCore object.</param>
            <param name="contentImageUrl">The url used to retrieve the image displayed within the GUI.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmerCore object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImage(System.Drawing.Image,System.String,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and enable the crop feature by setting the specified CropConstraint; the provided ContentImageUrl is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="image">The Image to load into the PictureTrimmerCore object.</param>
            <param name="contentImageUrl">The url used to retrieve the image displayed within the GUI.</param>
            <param name="cropConstraint">The constraints that have to be satisfied by the cropped image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImage(System.Drawing.Image,System.String)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and disable the crop feature; the provided ContentImageUrl is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="image">The Image to load into the PictureTrimmerCore object.</param>
            <param name="contentImageUrl">The url used to retrieve the image displayed within the GUI.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImage(System.Drawing.Image,System.Single,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and enable the crop feature by setting the specified CropConstraint; the provided OutputResolution is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="image">The Image to load into the PictureTrimmerCore object.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmerCore object.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImage(System.Drawing.Image,System.Single)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and disable the crop feature; the provided OutputResolution is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="image">The Image to load into the PictureTrimmerCore object.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmerCore object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImage(System.Drawing.Image,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and enable the crop feature by setting the specified CropConstraint.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="image">The Image to load into the PictureTrimmerCore object.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImage(System.Drawing.Image)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and disable the crop feature.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="image">The Image to load into the PictureTrimmerCore object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromByteArray">
            <summary>Loads the specified Image into the PictureTrimmerCore object.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromByteArray(System.Byte[],System.String,System.Single,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and enable the crop feature by setting the specified CropConstraint; the provided ContentImageUrl and OutputResolution are used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="bytes">The byte array containing the Image to load into the PictureTrimmerCore object.</param>
            <param name="contentImageUrl">    The url used to retrieve the image displayed within the     GUI.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmerCore object.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromByteArray(System.Byte[],System.String,System.Single)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and disable the crop feature; the provided ContentImageUrl and OutputResolution are used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="bytes">The byte array containing the Image to load into the PictureTrimmerCore object.</param>
            <param name="contentImageUrl">    The url used to retrieve the image displayed within the     GUI.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmerCore object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromByteArray(System.Byte[],System.String,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and enable the crop feature by setting the specified CropConstraint; the provided ContentImageUrl is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="bytes">The byte array containing the Image to load into the PictureTrimmerCore object.</param>
            <param name="contentImageUrl">    The url used to retrieve the image displayed within the     GUI.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromByteArray(System.Byte[],System.String)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and disable the crop feature; the provided ContentImageUrl is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="bytes">The byte array containing the Image to load into the PictureTrimmerCore object.</param>
            <param name="contentImageUrl">    The url used to retrieve the image displayed within the     GUI.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromByteArray(System.Byte[],System.Single,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and enable the crop feature by setting the specified CropConstraint; the provided OutputResolution is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="bytes">The byte array containing the Image to load into the PictureTrimmerCore object.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmerCore object.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromByteArray(System.Byte[],System.Single)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and disable the crop feature; the provided OutputResolution is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="bytes">The byte array containing the Image to load into the PictureTrimmerCore object.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmerCore object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromByteArray(System.Byte[],CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and enable the crop feature by setting the specified CropConstraint.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="bytes">The byte array containing the Image to load into the PictureTrimmerCore object.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromByteArray(System.Byte[])">
            <summary>Loads the specified Image into the PictureTrimmerCore object and disable the crop feature.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="bytes">The byte array containing the Image to load into the PictureTrimmerCore object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromFileSystem">
            <summary>Loads the specified Image into the PictureTrimmerCore object.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromFileSystem(System.String,System.String,System.Single,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and enable the crop feature by setting the specified CropConstraint; the provided ContentImageUrl and OutputResolution are used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="imagePath">The path of the file containing the Image to load into the PictureTrimmerCore object.</param>
            <param name="contentImageUrl">    The url used to retrieve the image displayed within the     GUI.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmerCore object.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromFileSystem(System.String,System.String,System.Single)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and disable the crop feature; the provided ContentImageUrl and OutputResolution are used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="imagePath">The path of the file containing the Image to load into the PictureTrimmerCore object.</param>
            <param name="contentImageUrl">    The url used to retrieve the image displayed within the     GUI.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmerCore object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromFileSystem(System.String,System.String,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and enable the crop feature by setting the specified CropConstraint; the provided ContentImageUrl is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="imagePath">The path of the file containing the Image to load into the PictureTrimmerCore object.</param>
            <param name="contentImageUrl">    The url used to retrieve the image displayed within the     GUI.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromFileSystem(System.String,System.String)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and disable the crop feature; the provided ContentImageUrl is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="imagePath">The path of the file containing the Image to load into the PictureTrimmerCore object.</param>
            <param name="contentImageUrl">    The url used to retrieve the image displayed within the     GUI.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromFileSystem(System.String,System.Single,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and enable the crop feature by setting the specified CropConstraint; the provided OutputResolution is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="imagePath">The path of the file containing the Image to load into the PictureTrimmerCore object.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmerCore object.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromFileSystem(System.String,System.Single)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and disable the crop feature; the provided OutputResolution is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="imagePath">The path of the file containing the Image to load into the PictureTrimmerCore object.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmerCore object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromFileSystem(System.String,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and enable the crop feature by setting the specified CropConstraint.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="imagePath">The path of the file containing the Image to load into the PictureTrimmerCore object.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromFileSystem(System.String)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and disable the crop feature.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="imagePath">The path of the file containing the Image to load into the PictureTrimmerCore object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromStream">
            <summary>Loads the specified Image into the PictureTrimmerCore object.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromStream(System.IO.Stream)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and disable the crop feature.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="stream">An open Stream containing the Image to load into the PictureTrimmerCore object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromStream(System.IO.Stream,System.String,System.Single,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and enable the crop feature by setting the specified CropConstraint; the provided ContentImageUrl and OutputResolution are used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="stream">An open Stream containing the Image to load into the PictureTrimmerCore object.</param>
            <param name="contentImageUrl">    The url used to retrieve the image displayed within the     GUI.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmerCore object.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromStream(System.IO.Stream,System.String,System.Single)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and disable the crop feature; the provided ContentImageUrl and OutputResolution are used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="stream">An open Stream containing the Image to load into the PictureTrimmerCore object.</param>
            <param name="contentImageUrl">    The url used to retrieve the image displayed within the     GUI.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmerCore object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromStream(System.IO.Stream,System.String,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and enable the crop feature by setting the specified CropConstraint; the provided ContentImageUrl is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="stream">An open Stream containing the Image to load into the PictureTrimmerCore object.</param>
            <param name="contentImageUrl">    The url used to retrieve the image displayed within the     GUI.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromStream(System.IO.Stream,System.String)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and disable the crop feature; the provided ContentImageUrl is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="stream">An open Stream containing the Image to load into the PictureTrimmerCore object.</param>
            <param name="contentImageUrl">    The url used to retrieve the image displayed within the     GUI.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromStream(System.IO.Stream,System.Single,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and enable the crop feature by setting the specified CropConstraint; the provided OutputResolution is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="stream">An open Stream containing the Image to load into the PictureTrimmerCore object.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmerCore object.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromStream(System.IO.Stream,System.Single)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and disable the crop feature; the provided OutputResolution is used.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="stream">An open Stream containing the Image to load into the PictureTrimmerCore object.</param>
            <param name="outputResolution">The resolution (DPI) of the images that are generated by the PictureTrimmerCore object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.LoadImageFromStream(System.IO.Stream,CodeCarvings.Piczard.CropConstraint)">
            <summary>Loads the specified Image into the PictureTrimmerCore object and enable the crop feature by setting the specified CropConstraint.</summary>
            <remarks>Please see also: Interactively crop and/or resize an image.</remarks>
            <param name="stream">An open Stream containing the Image to load into the PictureTrimmerCore object.</param>
            <param name="cropConstraint">    The constraints that have to be satisfied by the cropped     image; if null image cropping is disabled.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.SaveProcessedImageToByteArray">
            <summary>Applies the current PictureTrimmerValue filter to an image and saves the result Bitmap to a byte array.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.SaveProcessedImageToByteArray(CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current PictureTrimmerValue filter to the currently loaded image and saves the result Bitmap to a byte array, using the provided  FormatEncoderParams.</summary>
            <returns>The processed image saved as array of bytes.</returns>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.SaveProcessedImageToByteArray">
            <summary>Applies the current PictureTrimmerValue filter to the currently loaded image and saves the result Bitmap to a byte array, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <returns>The processed image saved as array of bytes.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.SaveProcessedImageToByteArray(System.Object,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current PictureTrimmerValue filter to the specified image and saves the result Bitmap to a byte array, using the provided  FormatEncoderParams.</summary>
            <returns>The processed image saved as array of bytes.</returns>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.SaveProcessedImageToByteArray(System.Object)">
            <summary>Applies the current PictureTrimmerValue filter to the specified image and saves the result Bitmap to a byte array, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <returns>The processed image saved as array of bytes.</returns>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.SaveProcessedImageToFileSystem">
            <summary>Applies the current PictureTrimmerValue filter to an image and saves the result Bitmap to the file system.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.SaveProcessedImageToFileSystem(System.String,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current PictureTrimmerValue filter to the currently loaded image and saves the result Bitmap to the file system, using the provided  FormatEncoderParams.</summary>
            <param name="destFilePath">A string that contains the name of the file to which to save the processed Image.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.SaveProcessedImageToFileSystem(System.String)">
            <summary>Applies the current PictureTrimmerValue filter to the currently loaded image and saves the result Bitmap to the file system, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <param name="destFilePath">A string that contains the name of the file to which to save the processed Image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.SaveProcessedImageToFileSystem(System.Object,System.String,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current PictureTrimmerValue filter to the specified image and saves the result Bitmap to the file system, using the provided  FormatEncoderParams.</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="destFilePath">A string that contains the name of the file to which to save the processed Image.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.SaveProcessedImageToFileSystem(System.Object,System.String)">
            <summary>Applies the current PictureTrimmerValue filter to the specified image and saves the result Bitmap to the file system, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="destFilePath">A string that contains the name of the file to which to save the processed Image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.SaveProcessedImageToStream">
            <summary>Applies the current PictureTrimmerValue filter to an image and saves the result Bitmap to a Stream.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.SaveProcessedImageToStream(System.IO.Stream,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current PictureTrimmerValue filter to the currently loaded image and saves the result Bitmap to a Stream, using the provided  FormatEncoderParams.</summary>
            <param name="destStream">    The open Stream where the processed Image will be saved.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.SaveProcessedImageToStream(System.IO.Stream)">
            <summary>Applies the current PictureTrimmerValue filter to the currently loaded image and saves the result Bitmap to a Stream, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <param name="destStream">    The open Stream where the processed Image will be saved.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.SaveProcessedImageToStream(System.Object,System.IO.Stream,CodeCarvings.Piczard.FormatEncoderParams)">
            <summary>Applies the current PictureTrimmerValue filter to the specified image and saves the result Bitmap to a Stream, using the provided  FormatEncoderParams.</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="destStream">    The open Stream where the processed Image will be saved.</param>
            <param name="formatEncoderParams">A  FormatEncoderParams object containing the image format parameters.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.SaveProcessedImageToStream(System.Object,System.IO.Stream)">
            <summary>Applies the current PictureTrimmerValue filter to the specified image and saves the result Bitmap to a Stream, using the default image format (CoreSettings.ImageArchiver.DefaultImageFormatId).</summary>
            <param name="source">The source image to process. Can be: a string (file path), a Stream, an array of bytes containing the image data, an Image object or a LoadedImage object.</param>
            <param name="destStream">    The open Stream where the processed Image will be saved.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerCore.UnloadImage">
            <summary>Unloads the current image.</summary>
            <remarks>This method unloads the currently loaded image and also deletes the temporary files (if necessary).</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.AllowResize">
            <summary>Gets or sets a value indicating whether users can resize the source image through the GUI.</summary>
            <remarks>    Users can resize the source image in 2 ways:                       By using the appropriate slider in the "Resize panel"         (please see ShowResizePanel).         Note: if AllowResize is false then the "Resize panel" is         hidden.         By dragging the crop handles*.         Note: if AllowResize is false then the crop handles are         hidden*.          * = Only if the current CropConstraint is a     FixedCropConstraint.          Please see:                       Interactively         crop and/or resize an image (paragraph: "The image         resize feature")         The example A.403 - "Customize         layout".          Please see also the ShowResizePanel property.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.AutoFreezeOnFormSubmit">
            <summary>Gets or sets a value indicating whether the control has to automatically freeze the GUI when the form is submitted.</summary>
            <remarks>    The PictureTrimmer "frozen" status is a feature that     allows to hide the Flash User Interface (without losing any     parameter).     Please see the example A.311     "InlinePictureTrimmer - overview".</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.AutoZoomMode">
            <summary>Gets or sets a value indicating how the control automatically calculates the ZoomFactor.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.CanvasColor">
            <summary>Gets or sets the color of the canvas.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.ContentImageUrl">
            <summary>Gets or sets the url used by the control to retrieve the image displayed within the GUI.</summary>
            <remarks>    If the PictureTrimmer control is configured to use     temporary files (WebSettings.PictureTrimmer.UseTemporaryFiles:     true), then the ContentImageUrl property is automatically     calculated.          On the contrary, if temporary files are disabled, then it is     mandatory to set this property when an image is loaded into the     PictureTrimmerCore object.     The resolution of the content image must be always 96 DPI     (CommonData.DefaultResolution).     The methods PictureTrimmerCore.GetContentImageJob and     PictureTrimmerCore.GetContentImageFormatEncoderParams help to     generate a valid content image.     Please see the example A.305 - "Load     &amp; save images" / "Image stored in a DB (Without temporary     files)".</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.CropConstraint">
            <summary>Gets the constraints that have to be satisfied by the cropped image.</summary>
            <remarks>    The CropConstraint property can be set only when an image     is loaded into the control.     For example when one of the following methods is     invoked:                       LoadImage         LoadImageFromByteArray         LoadImageFromFileSystem         LoadImageFromStream          Please see: Interactively     crop and/or resize an image</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.CropShadowMode">
            <summary>Gets or sets a value indicating how the control renders the cropping mask.</summary>
            <remarks>    Please see the example A.403 -     "Customize layout".     This property is ignored when the crop feature is     disabled (EnableCropping: false).</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.EnableAutoCenterView">
            <summary>Gets or sets a value indicating whether the control has to automatically center the view after the user drags the crop area outside the visible area.</summary>
            <remarks>This property is ignored when the crop feature is disabled (EnableCropping: false).</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.EnableCropping">
            <summary>Gets a value indicating whether the crop feature is enabled .</summary>
            <remarks>    The crop feature is enabled only when a      CropConstraint is provided during the image load     process.     For example when one of the following methods is invoked:                            LoadImage         LoadImageFromByteArray         LoadImageFromFileSystem         LoadImageFromStream     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.EnableSnapping">
            <summary>Gets or sets a value indicating whether the crop area automatically snaps to the edge or the center of the image when the user moves the rectangle near those positions.</summary>
            <remarks>    The user can temporarily disable the snap feature by     holding down the shift key while the crop rectangle is     moved.     Please see the example A.403 -     "Customize layout".     Please see also the ShowCropAlignmentLines     property.     This property is ignored when the crop feature is     disabled (EnableCropping: false).</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.FlashWMode">
            <summary>Gets or sets the Window Mode property of the Adobe Flash movie for transparency, layering, and positioning in the browser (it is strongly suggested to use the FlashWMode.Direct or the FlashWMode.Window setting).</summary>
            <remarks>    Before version 1.2.3.1 of Piczard the default value was     FlashWMode.Window.     Using the FlashWMode.Opaque or FlashWMode.Transparent     settings could slow down the animation and cause unexpected     behaviors.     It is strongly suggested to use the FlashWMode.Direct     or the FlashWMode.Window setting.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.ImageBackColor">
            <summary>Gets or sets the color used to fill the image background.</summary>
            <remarks>    Please see:                       Image Processing         Job (Controlling the background color of images         generated by Piczard)         The example A.403 - "Customize         layout".     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.ImageBackColorApplyMode">
            <summary>Gets or sets a value indicating if and when the ImageBackColor must be applied to the image.</summary>
            <remarks>Please see also: Image Processing Job (Controlling the background color of images generated by Piczard)</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.ImageLoaded">
            <summary>Gets a value indicating whether an image is currently loaded into the control.</summary>
            <remarks>    One of the following methods can be invoked to load an image     into the control:                            LoadImage         LoadImageFromByteArray         LoadImageFromFileSystem         LoadImageFromStream     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.Mode">
            <summary>Gets the type of the PictureTrimmerCore object.</summary>
            <remarks>    Please see:                       How         PictureTrimmer Works         InlinePictureTrimmer         - Overview         PopupPictureTrimmer -         Overview     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.OnClientControlLoadFunction">
            <summary>Gets or sets the name of the client function to be called when the control is loaded in the browser.</summary>
            <remarks>    Please see:                       InlinePictureTrimmer         - Client-side events (paragraph: "The ControlLoad event         handler")         PopupPictureTrimmer         - Client-side events (paragraph: "The ControlLoad event         handler")         The example A.313 -         "InlinePictureTrimmer - Client side events".         The example A.323 -         "PopupPictureTrimmer - Client side events".                    The onControlLoad event handler is     raised:                       When the control.load client function is         invoked.         When the control.unloadImage client function is         invoked.               The function receives 2 parameters:                       sender - A reference to the object that         generated the event.         args - An empty object.     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.OnClientUserStateChangedFunction">
            <summary>Gets or sets the name of the client function to be called when the UserState of the control changes.</summary>
            <remarks>    Please see:                       InlinePictureTrimmer         - Client-side events (paragraph: "The UserStateChanged         event handler")         PopupPictureTrimmer         - Client-side events (paragraph: "The UserStateChanged         event handler")         The example A.304 - "UserState /         PictureTrimmer value".         The example A.313 -         "InlinePictureTrimmer - Client side events".         The example A.323 -         "PopupPictureTrimmer - Client side events".         The example A.406 - "Real time crop         preview"               The function receives 2 parameters:                       sender - A reference to the object that         generated the event.         args - An empty object.     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.OutputResolution">
            <summary>Gets the resolution (DPI) of the images that are generated by the PictureTrimmerCore object.</summary>
            <remarks>    The OutputResolution property can be set only when an     image is loaded into the control.     For example when one of the following methods is     invoked:                       LoadImage         LoadImageFromByteArray         LoadImageFromFileSystem         LoadImageFromStream     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.ShowCropAlignmentLines">
            <summary>Gets or sets a value indicating whether to show lines that facilitate the alignment of the crop rectangle.</summary>
            <remarks>    Please see the example A.403 -     "Customize layout".     Please see also the EnableSnapping property.     This property is ignored when the crop feature is     disabled (EnableCropping: false).</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.ShowDetailsPanel">
            <summary>Gets or sets a value indicating whether to show the "Details panel" in the component GUI.</summary>
            <remarks>    The "Details panel" contains information about the     currently loaded image, such as:                       Original source image size (Width/Height).         Resized image size (Width/Height).         Cursor location (X/Y).          In case the crop feature is enabled, then also the     following information are displayed:              Crop rectangle location (X/Y).         Crop rectangle size (Width/Height).                          All values are expressed in the UIUnit.             Please see the example A.403 -             "Customize layout".              </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.ShowFlipPanel">
            <summary>Gets or sets a value indicating whether to show the flip control in the "Rotate/Flip panel". The flip control allows the user to flip the image horizontally and/or vertically .</summary>
            <remarks>    If both the ShowFlipPanel and the ShowRotatePanel     properties are false, then the "Rotate/Flip panel" is     hidden.     Please see the example A.403 -     "Customize layout".</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.ShowImageAdjustmentsPanel">
            <summary>Gets or sets a value indicating whether to show the "Adjustments panel" in the component GUI. The "Adjustments panel" allows the user to change Brightness, Contrast, Hue and/or Saturation of the Image.</summary>
            <remarks>    Please see the example A.403 -     "Customize layout".</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.ShowResizePanel">
            <summary>Gets or sets a value indicating whether to show the "Resize panel" in the component GUI. The "Resize panel" allows the user to change the ResizeFactor applied to the source Image.</summary>
            <remarks>    If the AllowResize property is set to false, then the     "Resize panel" is never displayed.     Please see:                       Interactively         crop and/or resize an image (paragraph: "The image         resize feature")         The example A.403 - "Customize         layout".     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.ShowRotatePanel">
            <summary>Gets or sets a value indicating whether to show the rotate control in the "Rotate/Flip panel". The rotate control allows the user to rotate the image clockwise by 0, 90, 180 or 270 degrees.</summary>
            <remarks>    If both the ShowRotatePanel and the ShowFlipPanel     properties are false, then the "Rotate/Flip panel" is     hidden.     Please see the example A.403 -     "Customize layout".</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.ShowRulers">
            <summary>Gets or sets a value indicating whether to show the rulers at the left and at the top of the working area.</summary>
            <remarks>    The values displayed in the rulers are expressed in the     UIUnit.     Please see the example A.403 -     "Customize layout".</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.ShowZoomPanel">
            <summary>Gets or sets a value indicating whether to show the "Zoom panel" in the component GUI. The "Zoom panel" allows the user to magnify an area of the image.</summary>
            <remarks>    The "Zoom panel" allows to enlarge/shrink the     displayed image without changing the ResizeFactor.          Please see the example A.403 - "Customize     layout".</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.SourceImageFormatId">
            <summary>Gets the format of the currently loaded Image.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.SourceImageResolution">
            <summary>Gets the resolution, in pixels per inch, of the currently loaded Image.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.SourceImageSize">
            <summary>    Gets the Size, expressed in pixels, of the currently loaded     Image.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.TemporaryFileId">
            <summary>Gets the id that uniquely identifies the temporary files associated with the currently loaded image.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.UIUnit">
            <summary>Gets or sets the graphic unit in which values are displayed in the GUI.</summary>
            <remarks>Please see the example A.403 - "Customize layout".</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.UserState">
            <summary>Gets or sets the current user state of the PictureTrimmerCore object.</summary>
            <remarks>    Please see:                                    The Value property.                               The example A.304 - "UserState             &amp; PictureTrimmer Value".              </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerCore.Value">
            <summary>Gets or sets the current value of the PictureTrimmerCore object.</summary>
            <remarks>    Before returning the PictureTrimmerValue, this methods     dynamically adjusts its data.     For example:                       If the crop Rectangle is null, then it is         automatically calculated.         If the crop Rectangle does not satisfies the current         CropConstraint, then it is automatically         re-calculated.         The ImageBackColorApplyMode property is always set to         the value of the current ImageBackColorApplyMode.               If you want to get the original (not adjusted)     PictureTrimmerValue, then you have to use the UserState     property.          Please see the example A.304 -     "UserState &amp; PictureTrimmer Value".</remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.PictureTrimmerPopupCloseEventArgs">
            <summary>Provides data for the PopupClose event. This class cannot be inherited.</summary>
            <remarks>    Please see:                       PopupPictureTrimmer         - Server-side events (paragraph: "The PopupClose event         handler")         The example A.322         -"PopupPictureTrimmer - Server Side Events".     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerPopupCloseEventArgs.#ctor(System.Boolean)">
            <summary>Initializes a new instance of the PictureTrimmerPopupCloseEventArgs class.</summary>
            <param name="saveChanges">A value indicating whether the user closed the popup window by clicking the "Save" button.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerPopupCloseEventArgs.SaveChanges">
            <summary>Gets a value indicating whether the user closed the popup window by clicking the "Save" button.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.PictureTrimmerUIParams">
            <summary>Represents the properties of the User Interface elements of a PictureTrimmer control. This class cannot be inherited.</summary>
            <remarks>    For more information please see: UserState &amp;     PictureTrimmer Value (paragraph:     "PictureTrimmerUserState").     Please see also the example A.304 -     "UserState &amp; PictureTrimmer Value".</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerUIParams.#ctor">
            <summary>Initializes a new instance of the PictureTrimmerUIParams class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerUIParams.Clone">
            <summary>Creates a copy of the PictureTrimmerUIParams object.</summary>
            <returns>A copy of the PictureTrimmerUIParams object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerUIParams.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerUIParams.FromJSON">
            <summary>Deserializes a new instance of the PictureTrimmerUIParams class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerUIParams.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the PictureTrimmerUIParams class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerUIParams.FromJSON(System.String)">
            <summary>Deserializes a new instance of the PictureTrimmerUIParams class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerUIParams.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerUIParams.Reset">
            <summary>Resets all the parameters to their default values.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerUIParams.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerUIParams.CommandPanelScrollV">
            <summary>Gets or sets the vertical scrolling position of the "Command panel"</summary>
            <remarks>The "Command panel" is the section displayed on the left of the working area. It contains various sub-panels, such as the DetailsPanel, the ResizePanel or the ImageAdjustmentsPanel.</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerUIParams.PictureScrollH">
            <summary>Gets or sets the horizontal scrolling position of the working area.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerUIParams.PictureScrollV">
            <summary>Gets or sets the vertical scrolling position of the working area.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerUIParams.ZoomFactor">
            <summary>Gets or sets the zoom factor that is applied to magnify the working area.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.PictureTrimmerUserState">
            <summary>Represents the state of a PictureTrimmer control. This class cannot be inherited.</summary>
            <remarks>    For more information please see: UserState &amp;     PictureTrimmer Value (paragraph:     "PictureTrimmerUserState").     Please see also the example A.304 -     "UserState &amp; PictureTrimmer Value".</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerUserState.#ctor">
            <summary>Initializes a new instance of the PictureTrimmerUserState class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerUserState.#ctor">
            <summary>Initializes a new instance of the PictureTrimmerUserState class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerUserState.#ctor(CodeCarvings.Piczard.Web.PictureTrimmerValue)">
            <summary>Initializes a new instance of the PictureTrimmerUserState class and sets the Value property.</summary>
            <param name="value">The value of the PictureTrimmer control.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerUserState.#ctor(CodeCarvings.Piczard.Web.PictureTrimmerValue,CodeCarvings.Piczard.Web.PictureTrimmerUIParams)">
            <summary>Initializes a new instance of the PictureTrimmerUserState class and sets the Value and the UIParams properties.</summary>
            <param name="value">The value of the PictureTrimmer control.</param>
            <param name="uiParams">The UI parameters of the PictureTrimmer control.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerUserState.Clone">
            <summary>Creates a copy of the PictureTrimmerUserState object.</summary>
            <returns>A copy of the PictureTrimmerUserState object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerUserState.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerUserState.FromJSON">
            <summary>Deserializes a new instance of the PictureTrimmerUserState class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerUserState.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the PictureTrimmerUserState class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerUserState.FromJSON(System.String)">
            <summary>Deserializes a new instance of the PictureTrimmerUserState class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerUserState.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerUserState.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerUserState.UIParams">
            <summary>Gets or sets the UI parameters of the PictureTrimmer control.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerUserState.Value">
            <summary>Gets or sets the value of the PictureTrimmer control.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.PictureTrimmerValue">
            <summary>Represents an ImageProcessingFilter that encapsulates the Value of a PictureTrimmer control. This class cannot be inherited.</summary>
            <remarks>    For more information please see: UserState &amp;     PictureTrimmer Value (paragraph:     "PictureTrimmerValue").     Please see also the example A.304 -     "UserState &amp; PictureTrimmer Value".</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerValue.#ctor">
            <summary>Initializes a new instance of the PictureTrimmerValue class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerValue.#ctor">
            <summary>    Initializes a new instance of the PictureTrimmerValue     class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerValue.#ctor(CodeCarvings.Piczard.ImageSelection)">
            <summary>Initializes a new instance of the PictureTrimmerValue class.</summary>
            <param name="imageSelection">The ImageSelection filter that allows to transform and crop an Image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerValue.#ctor(CodeCarvings.Piczard.ImageSelection,CodeCarvings.Piczard.Filters.Colors.ImageAdjustmentsFilter)">
            <summary>Initializes a new instance of the PictureTrimmerValue class.</summary>
            <param name="imageSelection">The ImageSelection filter that allows to transform and crop an Image.</param>
            <param name="imageAdjustments">The ImageProcessingFilter that allows to change Brightness, Contrast, Hue and/or Saturation of an Image.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerValue.Clone">
            <summary>Creates a copy of the PictureTrimmerValue filter.</summary>
            <returns>A copy of the PictureTrimmerValue filter.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerValue.Equals(System.Object)">
            <summary>Determines whether the specified object is equal to the current object.</summary>
            <returns>true if the specified object is equal to the current object; otherwise, false.</returns>
            <param name="obj">The object to compare with the current object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerValue.FromJSON">
            <summary>Deserializes a new instance of the PictureTrimmerValue class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerValue.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the PictureTrimmerValue class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerValue.FromJSON(System.String)">
            <summary>Deserializes a new instance of the PictureTrimmerValue class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerValue.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current object.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerValue.GetImageProcessingJob">
            <summary>Gets an instance of the ImageProcessingJob class that can be used to process the image; the current filter is added to the Filters collection of the ImageProcessingJob object.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerValue.GetImageProcessingJob(System.Single)">
            <summary>Gets an instance of the ImageProcessingJob class that can be used to process the image; the current filter is added to the Filters collection of the ImageProcessingJob object and the specified OutputResolution (DPI) is used.</summary>
            <returns>An instance of the ImageProcessingJob class that can apply the current ImageProcessingFilter.</returns>
            <param name="outputResolution">The resolution (DPI) of the images that are produced by the ImageProcessingJob object.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerValue.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerValue.ImageAdjustments">
            <summary>Gets or sets the ImageAdjustmentsFilter associated with this PictureTrimmerValue.</summary>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerValue.ImageBackColorApplyMode">
            <summary>Gets or sets a value indicating if and when the ImageBackColor must be applied to the image.</summary>
            <remarks>Please see also: Image Processing Job (Controlling the background color of images generated by Piczard).</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerValue.ImageSelection">
            <summary>Gets or sets the ImageSelection filter associated with this PictureTrimmerValue.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.PictureTrimmerValueChangedEventArgs">
            <summary>Provides data for the ValueChanged event. This class cannot be inherited.</summary>
            <remarks>    Please see:                       InlinePictureTrimmer         - Server-side events         PopupPictureTrimmer         - Server-side events (paragraph: "The ValueChanged         event handler")         The example A.312         -"InlinePictureTrimmer - Server Side Events".         The example A.322         -"PopupPictureTrimmer - Server Side Events".     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PictureTrimmerValueChangedEventArgs.#ctor(CodeCarvings.Piczard.Web.PictureTrimmerValue,CodeCarvings.Piczard.Web.PictureTrimmerValue)">
            <summary>Initializes a new instance of the PictureTrimmerValueChangedEventArgs class.</summary>
            <param name="previousValue">The previous Value of the PictureTrimmer control, before the ValueChanged event was raised.</param>
            <param name="newValue">The new Value or the PictureTrimmer control.</param>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerValueChangedEventArgs.NewValue">
            <summary>Gets or sets the new Value or the PictureTrimmer control.</summary>
            <remarks>Please see also: UserState &amp; PictureTrimmer Value (paragraph: "PictureTrimmerValue").</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PictureTrimmerValueChangedEventArgs.PreviousValue">
            <summary>Gets the previous Value of the PictureTrimmer control, before the ValueChanged event was raised.</summary>
            <remarks>Please see also: UserState &amp; PictureTrimmer Value (paragraph: "PictureTrimmerValue").</remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.PopupPictureTrimmer">
            <summary>Represents a PictureTrimmer control that is displayed in a lightbox popup. This class cannot be inherited.</summary>
            <remarks>    For more information about the      PopupPictureTrimmer control please see PopupPictureTrimmer -     Overview.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PopupPictureTrimmer.#ctor">
            <summary>Initializes a new instance of the PopupPictureTrimmer class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PopupPictureTrimmer.OpenPopup">
            <summary>Opens the popup containing the PictureTrimmer User Interface.</summary>
            <remarks>    Please see:                       PopupPictureTrimmer -         Overview         The example A.321 -         "PopupPictureTrimmer - Overview".     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PopupPictureTrimmer.OpenPopup(System.Int32,System.Int32)">
            <summary>Opens the popup containing the PictureTrimmer User Interface using the specified window size.</summary>
            <remarks>    Please see:                       PopupPictureTrimmer -         Overview         The example A.321 -         "PopupPictureTrimmer - Overview".     </remarks>
            <param name="windowWidth">The width of the popup window expressed in pixels.</param>
            <param name="windowHeight">The height of the popup window expressed in pixels.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PopupPictureTrimmer.OpenPopup">
            <summary>Opens the popup containing the PictureTrimmer User Interface.</summary>
            <remarks>    Please see:                       PopupPictureTrimmer -         Overview         The example A.321 -         "PopupPictureTrimmer - Overview".     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PopupPictureTrimmer.AutoPostBackOnPopupClose">
            <summary>Gets or sets a value indicating when the PopupPictureTrimmer control has to perform an automatic postback.</summary>
            <remarks>    Please see:                       PopupPictureTrimmer         - Server-side events         The example A.322 -         "PopupPictureTrimmer - Server Side Events"     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PopupPictureTrimmer.CancelButtonText">
            <summary>Gets or sets the text of the "Cancel button".</summary>
            <remarks>    Please see:                       Localizing And         Customizing Texts         The IStaticLocalizationPlugin interface         The IDynamicLocalizationPlugin interface         The example A.402 - "Localize &amp;         customize texts".     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PopupPictureTrimmer.LightBoxCssClass">
            <summary>Gets or sets the Cascading Style Sheet (CSS) class used to customize the style of the LightBox popup window.</summary>
            <remarks>    Please see the example A.403 -     "Customize layout".</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PopupPictureTrimmer.OnClientAfterPopupCloseFunction">
            <summary>Gets or sets the name of the client function to be called after the popup window closes.</summary>
            <remarks>    Please see:                       PopupPictureTrimmer         - Client-side events (paragraph: "The ControlLoad event         OnClientAfterPopupCloseFunction")         The example A.323 -         "PopupPictureTrimmer - Client side events".          The function receives 2 parameters:                       sender - A reference to the object that         generated the event.                      args - An object containing additional             information about the event.             In particular the args object provides the             following properties:                                               args.saveChanges                 Gets a value indicating whether the changes has                 been saved (readonly).                 args.performPostback                 Gets or sets a value indicating whether to perform                 a page postback.                           </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PopupPictureTrimmer.OnClientAfterPopupOpenFunction">
            <summary>Gets or sets the name of the client function to be called after the popup window opens.</summary>
            <remarks>    Please see:                       PopupPictureTrimmer         - Client-side events (paragraph: "The ControlLoad event         OnClientAfterPopupOpenFunction")         The example A.323 -         "PopupPictureTrimmer - Client side events".               The function receives 2 parameters:                       sender - A reference to the object that         generated the event.                      args - An object containing additional             information about the event.             In particular the args object provides the             following properties:                                               args.popupWindowThe Popup                 window HTML DOM element.                           </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PopupPictureTrimmer.OnClientBeforePopupCloseFunction">
            <summary>Gets or sets the name of the client function to be called before the popup window closes.</summary>
            <remarks>    Please see:                       PopupPictureTrimmer         - Client-side events (paragraph: "The ControlLoad event         OnClientBeforePopupCloseFunction")         The example A.323 -         "PopupPictureTrimmer - Client side events".               The function receives 2 parameters:                       sender - A reference to the object that         generated the event.                      args - An object containing additional             information about the event.             In particular the args object provides the             following properties:                                               args.saveChanges                 Gets or sets a value indicating whether to save the                 changes or not.                 args.previousUserStateGets the                 previous userState (before popup opens).                 args.newUserStateGets or sets                 the new userState.                 args.resetUIParams                 If you set this value to false, then the                 uiParameters will NOT be reset.                 In this case the next time the popup is opened the                 previous uiParams are applied.                 The default value is true.                 args.performPostbackGets or                 sets a value indicating whether to perform a page                 postback.                 args.goOn                 If you set this value to false then the popup will                 NOT close.                           </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PopupPictureTrimmer.OnClientBeforePopupOpenFunction">
            <summary>Gets or sets the name of the client function to be called before the popup window opens.</summary>
            <remarks>    Please see:                       PopupPictureTrimmer         - Client-side events (paragraph: "The ControlLoad event         OnClientBeforePopupOpenFunction")         The example A.323 -         "PopupPictureTrimmer - Client side events"         The example A.405 - "Enrich the         PopupPictureTrimmer window"               The function receives 2 parameters:                       sender - A reference to the object that         generated the event.                      args - An object containing additional             information about the event.             In particular the args object provides the             following properties:                                               args.windowWidth                 Gets or sets the width of the popup.                 args.windowHeight                 Gets or sets the height of the popup.                 args.reservedWindowHeightGets                 or sets the height of the popup window reserved for                 additional custom UI elements (pixels); the default                 value is 0                 args.additionalTopElements                 Gets or sets an array of DOM elements to be added                 on the top of the popup window                 args.additionalBottomElements                 Gets or sets an array of DOM elements to be added                 on the bottom of the popup window                 args.lightBoxCssClass                 Gets or sets the CSS class of the popup.                                  args.freezeOtherPictureTrimmerControls                 Gets or sets a value indicating whether to freeze                 other PictureTrimmer controls.                 The default value is true.                 args.goOn                 If you set this value to false then the popup will                 NOT open.                           </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PopupPictureTrimmer.SaveButtonText">
            <summary>Gets or sets the text of the "Save button".</summary>
            <remarks>    Please see:                       Localizing And         Customizing Texts         The IStaticLocalizationPlugin interface         The IDynamicLocalizationPlugin interface         The example A.402 - "Localize &amp;         customize texts".     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PopupPictureTrimmer.ShowCancelButton">
            <summary>Gets or sets a value indicating whether to display the "Cancel button" in the popup window.</summary>
        </member>
        <member name="E:CodeCarvings.Piczard.Web.PopupPictureTrimmer.PopupClose">
            <summary>Occurs when the popup window closes.</summary>
            <remarks>    The PopupClose event is raised after the page     postback.     You can use the AutoPostBackOnPopupClose feature to     automatically postback the page when the popup closes.     In this way it's possible to raise the PopupClose event as soon     as the popup closes.     Please see:                       PopupPictureTrimmer         - Server-side events (paragraph: "The PopupClose event         handler")         The example A.322 -         "PopupPictureTrimmer - Server Side Events"     </remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.PopupPictureTrimmerCore">
            <summary>Encapsulates the main properties and methods of a PopupPictureTrimmer control. This class cannot be inherited.</summary>
            <remarks>    The PopupPictureTrimmerCore class can be used to help     client-side functions that allow to dynamically load and     process images.     For more information please see:                       Client-Side         Load, Unload And Save Images.         The example A.307 - "Client side         load, unload and save images".          For more information about the      PopupPictureTrimmer control please see PopupPictureTrimmer -     Overview.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PopupPictureTrimmerCore.#ctor">
            <summary>Initializes a new instance of the PopupPictureTrimmerCore class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PopupPictureTrimmerCore.FromJSON">
            <summary>Deserializes a new instance of the PopupPictureTrimmerCore class from JSON.</summary>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PopupPictureTrimmerCore.FromJSON(CodeCarvings.Piczard.Serialization.JSONObject)">
            <summary>Deserializes a new instance of the PopupPictureTrimmerCore class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonObject">The JSONObject to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PopupPictureTrimmerCore.FromJSON(System.String)">
            <summary>Deserializes a new instance of the PopupPictureTrimmerCore class from JSON.</summary>
            <returns>The deserialized object.</returns>
            <remarks>For more information about JSON serialization please see: JSON Serialization.</remarks>
            <param name="jsonString">The JSON string to be deserialized.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PopupPictureTrimmerCore.OpenPopup">
            <summary>Opens the popup containing the PictureTrimmer User Interface.</summary>
            <remarks>    Please see the example A.321 -     "PopupPictureTrimmer - Overview".</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PopupPictureTrimmerCore.OpenPopup(System.Int32,System.Int32)">
            <summary>Opens the popup containing the PictureTrimmer User Interface using the specified window size.</summary>
            <remarks>    Please see the example A.321 -     "PopupPictureTrimmer - Overview".</remarks>
            <param name="windowWidth">The width of the popup window expressed in pixels.</param>
            <param name="windowHeight">The height of the popup window expressed in pixels.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.PopupPictureTrimmerCore.OpenPopup">
            <summary>Opens the popup containing the PictureTrimmer User Interface.</summary>
            <remarks>    Please see the example A.321 -     "PopupPictureTrimmer - Overview".</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PopupPictureTrimmerCore.AutoPostBackOnPopupClose">
            <summary>Gets or sets a value indicating when the control has to perform an automatic postback.</summary>
            <remarks>    Please see:                       PopupPictureTrimmer         - Server-side events         The example A.322 -         "PopupPictureTrimmer - Server Side Events"     </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PopupPictureTrimmerCore.LightBoxCssClass">
            <summary>Gets or sets the Cascading Style Sheet (CSS) class used to customize the style of the LightBox popup window.</summary>
            <remarks>    Please see the example A.403 -     "Customize layout".</remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PopupPictureTrimmerCore.OnClientAfterPopupCloseFunction">
            <summary>Gets or sets the name of the client function to be called after the popup window closes.</summary>
            <remarks>    Please see:                       PopupPictureTrimmer         - Client-side events (paragraph: "The ControlLoad event         OnClientAfterPopupCloseFunction")         The example A.323 -         "PopupPictureTrimmer - Client side events".          The function receives 2 parameters:                       sender - A reference to the object that         generated the event.                      args - An object containing additional             information about the event.             In particular the args object provides the             following properties:                                               args.saveChanges                 Gets a value indicating whether the changes has                 been saved (readonly).                 args.performPostback                 Gets or sets a value indicating whether to perform                 a page postback.                           </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PopupPictureTrimmerCore.OnClientAfterPopupOpenFunction">
            <summary>Gets or sets the name of the client function to be called after the popup window opens.</summary>
            <remarks>    Please see:                       PopupPictureTrimmer         - Client-side events (paragraph: "The ControlLoad event         OnClientAfterPopupOpenFunction")         The example A.323 -         "PopupPictureTrimmer - Client side events".               The function receives 2 parameters:                       sender - A reference to the object that         generated the event.                      args - An object containing additional             information about the event.             In particular the args object provides the             following properties:                                               args.popupWindowThe Popup                 window HTML DOM element.                           </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PopupPictureTrimmerCore.OnClientBeforePopupCloseFunction">
            <summary>Gets or sets the name of the client function to be called before the popup window closes.</summary>
            <remarks>    Please see:                       PopupPictureTrimmer         - Client-side events (paragraph: "The ControlLoad event         OnClientBeforePopupCloseFunction")         The example A.323 -         "PopupPictureTrimmer - Client side events".               The function receives 2 parameters:                       sender - A reference to the object that         generated the event.                      args - An object containing additional             information about the event.             In particular the args object provides the             following properties:                                               args.saveChanges                 Gets or sets a value indicating whether to save the                 changes or not.                 args.previousUserStateGets the                 previous userState (before popup opens).                 args.newUserStateGets or sets                 the new userState.                 args.resetUIParams                 If you set this value to false, then the                 uiParameters will NOT be reset.                 In this case the next time the popup is opened the                 previous uiParams are applied.                 The default value is true.                 args.performPostbackGets or                 sets a value indicating whether to perform a page                 postback.                 args.goOn                 If you set this value to false then the popup will                 NOT close.                           </remarks>
        </member>
        <member name="P:CodeCarvings.Piczard.Web.PopupPictureTrimmerCore.OnClientBeforePopupOpenFunction">
            <summary>Gets or sets the name of the client function to be called before the popup window opens.</summary>
            <remarks>    Please see:                       PopupPictureTrimmer         - Client-side events (paragraph: "The ControlLoad event         OnClientBeforePopupOpenFunction")         The example A.323 -         "PopupPictureTrimmer - Client side events"         The example A.405 - "Enrich the         PopupPictureTrimmer window"               The function receives 2 parameters:                       sender - A reference to the object that         generated the event.                      args - An object containing additional             information about the event.             In particular the args object provides the             following properties:                                               args.windowWidth                 Gets or sets the width of the popup.                 args.windowHeight                 Gets or sets the height of the popup.                 args.reservedWindowHeightGets                 or sets the height of the popup window reserved for                 additional custom UI elements (pixels); the default                 value is 0                 args.additionalTopElements                 Gets or sets an array of DOM elements to be added                 on the top of the popup window                 args.additionalBottomElements                 Gets or sets an array of DOM elements to be added                 on the bottom of the popup window                 args.lightBoxCssClass                 Gets or sets the CSS class of the popup.                                  args.freezeOtherPictureTrimmerControls                 Gets or sets a value indicating whether to freeze                 other PictureTrimmer controls.                 The default value is true.                 args.goOn                 If you set this value to false then the popup will                 NOT open.                           </remarks>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.TemporaryFileManager">
            <summary>Provides methods for managing temporary files. This class cannot be inherited.</summary>
            <remarks>    Please see also:                       Web Settings         ("temporaryFileManager" section)                  TemporaryFileManagerSettings     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.TemporaryFileManager.DeleteAllTemporaryFiles">
            <summary>Deletes all the temporary files present in the current temporary folder.</summary>
            <returns>The number of deleted files.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.TemporaryFileManager.DeleteOldTemporaryFiles">
            <summary>Deletes all the temporary files present in the current temporary folder whose  LastWriteTime is older than the value specified by WebSettings.TemporaryFileManager.MaxFileLifeTime.</summary>
            <returns>The number of deleted files.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.TemporaryFileManager.GetAllTemporaryFiles">
            <summary>Gets all the temporary files present in the current temporary folder.</summary>
            <returns>The path of all the temporary files present in the current temporary folder..</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.TemporaryFileManager.GetNewTemporaryFileId">
            <summary>Gets a string that allows to uniquely identify a temporary file.</summary>
            <returns>A new temporary file id.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.TemporaryFileManager.GetNewTemporaryFileName">
            <summary>Gets a new unique temporary file name by generating a new temporary file id.</summary>
            <remarks>The GetNewTemporaryFilePath method allows to get the full temporary file path.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.TemporaryFileManager.GetNewTemporaryFileName(System.String)">
            <summary>Gets a new unique temporary file name by generating a new temporary file id; the specified string suffix is added to the end of the temporary file name.</summary>
            <returns>The new temporary file name.</returns>
            <remarks>The GetNewTemporaryFilePath method allows to get the full temporary file path.</remarks>
            <param name="suffix">A string suffix to add to the end of the temporary file name.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.TemporaryFileManager.GetNewTemporaryFileName">
            <summary>Gets a new unique temporary file name by generating a new temporary file id.</summary>
            <remarks>The GetNewTemporaryFilePath method allows to get the full temporary file path.</remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.TemporaryFileManager.GetNewTemporaryFilePath">
            <summary>Gets a new unique temporary file path by generating a new temporary file id.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.TemporaryFileManager.GetNewTemporaryFilePath(System.String)">
            <summary>Gets a new unique temporary file path by generating a new temporary file id; the specified string suffix is added to the end of the temporary file name.</summary>
            <returns>The new temporary file path.</returns>
            <remarks>The GetNewTemporaryFileName Method method allows to get the file name without path.</remarks>
            <param name="suffix">A string suffix to add to the end of the temporary file name.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.TemporaryFileManager.GetNewTemporaryFilePath">
            <summary>Gets a new unique temporary file path by generating a new temporary file id.</summary>
            <remarks>The GetNewTemporaryFileName Method method allows to get the file name without path.</remarks>
            <returns>The new temporary file path.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.TemporaryFileManager.GetOldTemporaryFiles">
            <summary>Gets all the temporary files present in the current temporary folder whose  LastWriteTime is older than the value specified by WebSettings.TemporaryFileManager.MaxFileLifeTime.</summary>
            <returns>The path of all the temporary files present in the current temporary folder whose  LastWriteTime is older than the value specified by WebSettings.TemporaryFileManager.MaxFileLifeTime.</returns>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.TemporaryFileManager.GetTemporaryFileName(System.String,System.String)">
            <summary>Calculates a temporary file name.</summary>
            <returns>The computed temporary file name.</returns>
            <remarks>The GetTemporaryFilePath method allows to calculate the full temporary file path.</remarks>
            <param name="id">The temporary file id that uniquely identifies the temporary file.</param>
            <param name="suffix">A string suffix to add to the end of the temporary file name.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.TemporaryFileManager.GetTemporaryFilePath(System.String,System.String)">
            <summary>Calculates a temporary file path.</summary>
            <returns>The computed temporary file path.</returns>
            <remarks>The GetTemporaryFileName method allows to get the file name without path.</remarks>
            <param name="id">The temporary file id that uniquely identifies the temporary file.</param>
            <param name="suffix">A string suffix to add to the end of the temporary file name.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.TemporaryFileManager.ValidateTemporaryFileId">
            <summary>Determines if the provided temporary file id is valid.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.TemporaryFileManager.ValidateTemporaryFileId(System.String)">
            <summary>Determines if the provided temporary file id is valid.</summary>
            <returns>true if the temporary file id is valid; otherwise, false.</returns>
            <remarks>Use the GetNewTemporaryFileId method to generate valid temporary file ids.</remarks>
            <param name="id">The temporary file id to validate.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.TemporaryFileManager.ValidateTemporaryFileId(System.String,System.Boolean)">
            <summary>Determines if the provided temporary file id is valid; if the "throwException" parameter is true then an Exception is thrown if the value is not valid.</summary>
            <returns>true if the temporary file id is valid; otherwise, false.</returns>
            <remarks>Use the GetNewTemporaryFileId method to generate valid temporary file ids.</remarks>
            <param name="id">The temporary file id to validate.</param>
            <param name="throwException">If true, an Exception is thrown if the temporary file id is not valid.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.TemporaryFileManager.ValidateTemporaryFolder">
            <summary>Validates the current current temporary folder by ensuring that it exists.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.TemporaryFileManager.ValidateTemporaryFolder(System.Boolean)">
            <summary>Validates the current current temporary folder by ensuring that it exists; if the "throwException" parameter is true then an IOException is thrown if the directory is not valid.</summary>
            <returns>true if the current temporary folder is valid; otherwise, false.</returns>
            <param name="throwException">If true, an IOException is thrown if the current temporary folder is not valid.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.TemporaryFileManager.ValidateTemporaryFolder">
            <summary>Validates the current current temporary folder by ensuring that it exists.</summary>
            <returns>true if the current temporary folder is valid; otherwise, false.</returns>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.WebResourceManager">
            <summary>Provides an HTTP handler for processing requests for Piczard resources.</summary>
            <remarks>    Please see also:              Web Settings         ("webResource" section)                  WebResourceSettings     </remarks>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.WebResourceManager.#ctor">
            <summary>Initializes a new instance of the WebResourceManager class.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.WebResourceManager.GetPiczardClientLibraryUrl">
            <summary>Gets an url reference to the Piczard client-side library (JavaScript).</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.WebResourceManager.GetPiczardClientLibraryUrl(System.Web.UI.Page)">
            <summary>Gets an url reference to the Piczard client-side library (JavaScript).</summary>
            <returns>The url reference to the Piczard client-side library.</returns>
            <param name="page">An (optional) Page object helping the method to resolve the url.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.WebResourceManager.GetPiczardClientLibraryUrl">
            <summary>Gets an url reference to the Piczard client-side library (JavaScript).</summary>
            <returns>The url reference to the Piczard client-side library.</returns>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.PictureTrimmerPopupCloseEventHandler">
            <summary>Represents the method that handles the PopupClose event of a PopupPictureTrimmer control.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The argument of type PictureTrimmerPopupCloseEventArgs that contains the event data.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.PictureTrimmerValueChangedEventHandler">
            <summary>Represents the method that handles the ValueChanged event of a PictureTrimmer control.</summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The argument of type PictureTrimmerValueChangedEventArgs that contains the event data.</param>
        </member>
        <member name="N:CodeCarvings.Piczard.Web.Helpers">
            <summary>The CodeCarvings.Piczard.Helpers namespace contains support classes and utilities for the Web environment.</summary>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.Helpers.AjaxHelper">
            <summary>Provides helper methods for managing Ajax requests</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.Helpers.AjaxHelper.IsInAjaxPostBack(System.Web.UI.Page)">
            <summary>Gets a value that indicates whether the current postback is being executed in partial-rendering mode.</summary>
            <returns>true if the current postback is executing in partial-rendering mode; otherwise, false.</returns>
            <param name="page">The page instance from which to retrieve the ScriptManager.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.Helpers.AjaxHelper.RegisterClientScriptBlockInAjaxPostBack">
            <summary>Registers a client script block with the ScriptManager control for use with a control that is inside an  UpdatePanel control, and then adds the script block to the page.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.Helpers.AjaxHelper.RegisterClientScriptBlockInAjaxPostBack(System.Web.UI.Page,System.String,System.String,System.Boolean)">
            <summary>Registers a client script block with the ScriptManager control for use with a control that is inside an  UpdatePanel control, and then adds the script block to the page.</summary>
            <returns>true if the script has been successfully registered; otherwise, false. If the current postback is not executed in partial-rendering mode, then this method returns false.</returns>
            <param name="page">The page object that is registering the client script block.</param>
            <param name="scriptName">A unique identifier for the script block.</param>
            <param name="script">The script.</param>
            <param name="addScriptTags">true to enclose the script block in &lt;script&gt; and &lt;/script&gt; tags; otherwise, false.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.Helpers.AjaxHelper.RegisterClientScriptBlockInAjaxPostBack(System.Web.UI.Control,System.String,System.String,System.Boolean)">
            <summary>Registers a client script block with the ScriptManager control for use with a control that is inside an  UpdatePanel control, and then adds the script block to the page.</summary>
            <returns>true if the script has been successfully registered; otherwise, false. If the current postback is not executed in partial-rendering mode, then this method returns false.</returns>
            <param name="control">The control that is registering the client script block.</param>
            <param name="scriptName">A unique identifier for the script block.</param>
            <param name="script">The script.</param>
            <param name="addScriptTags">true to enclose the script block in &lt;script&gt; and &lt;/script&gt; tags; otherwise, false.</param>
        </member>
        <member name="T:CodeCarvings.Piczard.Web.Helpers.JSHelper">
            <summary>Provides helper methods for Javascript.</summary>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.Helpers.JSHelper.DecodeBool(System.String)">
            <summary>Converts the specified javascript value to its boolean equivalent.</summary>
            <returns>true if the string is equal to "true" (using a non-case sensitive comparison); otherwise, false.</returns>
            <param name="value">A string containing the javascript value to convert.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.Helpers.JSHelper.EncodeBool(System.Boolean)">
            <summary>Converts the boolean value to its equivalent javascript representation (either "true" or "false").</summary>
            <returns>"true" if the value is true, or "false" if the value is false.</returns>
            <param name="value">The value to convert.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.Helpers.JSHelper.EncodeString(System.String)">
            <summary>Encodes the provided string so that can be safely enclosed within a couple of double quotes.</summary>
            <returns>The encoded string.</returns>
            <param name="str">The string to encode.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.Helpers.JSHelper.GetLoadCSS(System.String,System.String)">
            <summary>Gets the Javascript code necessary to dynamically load the specified CSS file.</summary>
            <returns>The Javascript code necessary to dynamically load the specified CSS file.</returns>
            <param name="url">The url of the CSS file to load.</param>
            <param name="cssVarName">The name of the javascript variable that will handle the dynamically created &lt;link&gt; DOM element.</param>
        </member>
        <member name="M:CodeCarvings.Piczard.Web.Helpers.JSHelper.GetLoadScript(System.String,System.String,System.String)">
            <summary>Gets the Javascript code necessary to dynamically load the specified Javascript file.</summary>
            <returns>The Javascript code necessary to dynamically load the specified Javascript file.</returns>
            <param name="url">The url of the Javascript file to load.</param>
            <param name="scriptVarName">The name of the javascript variable that will handle the dynamically created &lt;script&gt; DOM element.</param>
            <param name="callbackfunction">An optional javascript code to run when the specified Javascript file is loaded.</param>
        </member>
    </members>
</doc>
